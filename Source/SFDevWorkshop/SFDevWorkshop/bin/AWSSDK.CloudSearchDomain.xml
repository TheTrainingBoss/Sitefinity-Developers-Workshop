<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudSearchDomain</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient">
             <summary>
             Implementation for accessing CloudSearchDomain
            
             You use the AmazonCloudSearch2013 API to upload documents to a search domain and search
             those documents. 
             
              
             <para>
             The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and
             <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain,
             use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action.
             The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch
             console. You submit suggest requests to the search endpoint. 
             </para>
              
             <para>
             For more information, see the <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide">Amazon
             CloudSearch Developer Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor">
             <summary>
             Constructs AmazonCloudSearchDomainClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String)">
             <summary>
             Constructs AmazonCloudSearchDomainClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
             <summary>
             Constructs AmazonCloudSearchDomainClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Credentials
            </summary>
            <param name="serviceUrl">The URL of the search or document service.</param>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Credentials and an
            AmazonCloudSearchDomainClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudSearchDomainClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,System.String,Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudSearchDomainClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="P:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.Search(Amazon.CloudSearchDomain.Model.SearchRequest)">
            <summary>
            Retrieves a list of documents that match the specified search criteria. How you specify
            the search criteria depends on which query parser you use. Amazon CloudSearch supports
            four query parsers:
            
             <ul> <li><code>simple</code>: search all <code>text</code> and <code>text-array</code>
            fields for the specified string. Search for phrases, individual terms, and prefixes.
            </li> <li><code>structured</code>: search specific fields, construct compound queries
            using Boolean operators, and use advanced features such as term boosting and proximity
            searching.</li> <li><code>lucene</code>: specify search criteria using the Apache
            Lucene query parser syntax.</li> <li><code>dismax</code>: specify search criteria
            using the simplified subset of the Apache Lucene query parser syntax defined by the
            DisMax query parser.</li> </ul> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
             
            <para>
            The endpoint for submitting <code>Search</code> requests is domain-specific. You submit
            search requests to a domain's search endpoint. To get the search endpoint for your
            domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the Search service method.</param>
            
            <returns>The response from the Search service method, as returned by CloudSearchDomain.</returns>
            <exception cref="T:Amazon.CloudSearchDomain.Model.SearchException">
            Information about any problems encountered while processing a search request.
            </exception>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.SearchAsync(Amazon.CloudSearchDomain.Model.SearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Search operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Search operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.Suggest(Amazon.CloudSearchDomain.Model.SuggestRequest)">
            <summary>
            Retrieves autocomplete suggestions for a partial query string. You can use suggestions
            enable you to display likely matches before users finish typing. In Amazon CloudSearch,
            suggestions are based on the contents of a particular text field. When you request
            suggestions, Amazon CloudSearch finds all of the documents whose values in the suggester
            field start with the specified query string. The beginning of the field must match
            the query string to be considered a match. 
            
             
            <para>
            For more information about configuring suggesters and retrieving suggestions, see
            <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html">Getting
            Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
             
            <para>
            The endpoint for submitting <code>Suggest</code> requests is domain-specific. You
            submit suggest requests to a domain's search endpoint. To get the search endpoint
            for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the Suggest service method.</param>
            
            <returns>The response from the Suggest service method, as returned by CloudSearchDomain.</returns>
            <exception cref="T:Amazon.CloudSearchDomain.Model.SearchException">
            Information about any problems encountered while processing a search request.
            </exception>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.SuggestAsync(Amazon.CloudSearchDomain.Model.SuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Suggest operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Suggest operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.UploadDocuments(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest)">
            <summary>
            Posts a batch of documents to a search domain for indexing. A document batch is a
            collection of add and delete operations that represent the documents you want to add,
            update, or delete from your domain. Batches can be described in either JSON or XML.
            Each item that you want Amazon CloudSearch to return as a search result (such as a
            product) is represented as a document. Every document has a unique ID and one or more
            fields that contain the data that you want to search and return in results. Individual
            documents cannot contain more than 1 MB of data. The entire batch cannot exceed 5
            MB. To get the best possible upload performance, group add and delete operations in
            batches that are close the 5 MB limit. Submitting a large volume of single-document
            batches can overload a domain's document service. 
            
             
            <para>
            The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific.
            To get the document endpoint for your domain, use the Amazon CloudSearch configuration
            service <code>DescribeDomains</code> action. A domain's endpoints are also displayed
            on the domain dashboard in the Amazon CloudSearch console. 
            </para>
             
            <para>
            For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more information
            about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading
            Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadDocuments service method.</param>
            
            <returns>The response from the UploadDocuments service method, as returned by CloudSearchDomain.</returns>
            <exception cref="T:Amazon.CloudSearchDomain.Model.DocumentServiceException">
            Information about any problems encountered while processing an upload request.
            </exception>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.UploadDocumentsAsync(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadDocuments operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadDocuments operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig">
            <summary>
            Configuration for accessing Amazon CloudSearchDomain service
            </summary>
            <summary>
            Configuration for accessing Amazon CloudSearchDomain service
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.Validate">
            <summary>
            Validate that the config object is properly configured.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Internal.ProcessExceptionHandler">
            <summary>
            Custom pipeline handler to make sure streams are closed in case of exceptions.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ProcessExceptionHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Override to do extra exception handling if thrown in the pipeline.
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ProcessExceptionHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Override to do extra exception handling if thrown in the pipeline.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="executionContext"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ProcessExceptionHandler.HandleException(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            Make sure stream is closed in case of exceptions in the pipeline.
            </summary>
            <param name="executionContext"></param>
            <param name="exception"></param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Internal.ProcessRequestHandler">
            <summary>
            Custom pipeline handler.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ProcessRequestHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ProcessRequestHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ProcessRequestHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler.
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Internal.ValidationResponseHandler">
            <summary>
            Custom pipeline handler to make sure streams.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ValidationResponseHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the post invoke logic after calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ValidationResponseHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the and post invoke logic after calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Internal.ValidationResponseHandler.PostInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler to make sure streams.
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Internal.AmazonCloudSearchDomainMetadata">
            <summary>
            Service metadata for  Amazon CloudSearchDomain service
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Internal.AmazonCloudSearchDomainMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Internal.AmazonCloudSearchDomainMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest">
            <summary>
            Container for the parameters to the UploadDocuments operation.
            Posts a batch of documents to a search domain for indexing.  A document batch is a
            collection of add and delete operations that represent the documents you want to add,
            update, or delete from your domain. Batches can be described in either JSON or XML.
            Each item that you want Amazon CloudSearch to return as a search result (such as a
            product) is represented as a document. Every document has a unique ID and one or more
            fields that contain the data that you want to search and return in results. Individual
            documents  cannot contain more than 1 MB of data. The entire batch cannot exceed 5
            MB. To get the best possible upload performance, group add and delete operations in
            batches that are close the 5 MB limit. Submitting a large volume of single-document
            batches can overload a domain's document service.  
            
                  
            <para>
            The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific.
            To get the document endpoint for your domain, use the Amazon CloudSearch configuration
            service <code>DescribeDomains</code> action. A domain's endpoints are also displayed
            on the domain dashboard in the Amazon CloudSearch console. 
            </para>
                  
            <para>
            For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.       For more information
            about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading
            Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
            </summary>
            <summary>
            Container for the parameters to the UploadDocuments operation.
            Posts a batch of documents to a search domain for indexing. A document batch is a
            collection of add and delete operations that represent the documents you want to add,
            update, or delete from your domain. Batches can be described in either JSON or XML.
            Each item that you want Amazon CloudSearch to return as a search result (such as a
            product) is represented as a document. Every document has a unique ID and one or more
            fields that contain the data that you want to search and return in results. Individual
            documents cannot contain more than 1 MB of data. The entire batch cannot exceed 5
            MB. To get the best possible upload performance, group add and delete operations in
            batches that are close the 5 MB limit. Submitting a large volume of single-document
            batches can overload a domain's document service. 
            
             
            <para>
            The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific.
            To get the document endpoint for your domain, use the Amazon CloudSearch configuration
            service <code>DescribeDomains</code> action. A domain's endpoints are also displayed
            on the domain dashboard in the Amazon CloudSearch console. 
            </para>
             
            <para>
            For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more information
            about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading
            Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest.FilePath">
            <summary>
            <para>
            The full path and name to a file that contains a batch of documents to be uploaded.
            The batch of documents should be formatted in JSON or HTML.        
            If this property is set, the UploadDocumentsRequest.Documents property is ignored.
            </para>
            <para>
            For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The format of the batch you are uploading. Amazon CloudSearch supports two document
            batch formats:
            </para>
             <ul> <li>application/json</li> <li>application/xml</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest.Documents">
            <summary>
            Gets and sets the property Documents. 
            <para>
            A batch of documents formatted in JSON or HTML.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Bucket">
            <summary>
            A container for facet information.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Bucket.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of hits that contain the facet value in the specified facet field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Bucket.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The facet value being counted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.BucketInfo">
            <summary>
            A container for the calculated facet values and counts.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.BucketInfo.Buckets">
            <summary>
            Gets and sets the property Buckets. 
            <para>
            A list of the calculated facet values and counts.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.DocumentServiceException">
            <summary>
             CloudSearchDomain exception
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.String)">
            <summary>
            Constructs a new DocumentServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DocumentServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of DocumentServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DocumentServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DocumentServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DocumentServiceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.DocumentServiceWarning">
            <summary>
            A warning returned by the document service when an issue is discovered while processing
            an upload request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.DocumentServiceWarning.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The description for a warning returned by the document service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.FieldStats">
            <summary>
            The statistics for a field calculated in the request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of documents that contain a value in the specified field in the result
            set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Max">
            <summary>
            Gets and sets the property Max. 
            <para>
            The maximum value found in the specified field in the result set.
            </para>
             
            <para>
            If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>,
            or <code>double-array</code>), <code>max</code> is the string representation of a
            double-precision 64-bit floating point value. If the field is <code>date</code> or
            <code>date-array</code>, <code>max</code> is the string representation of a date with
            the format specified in <a href="http://tools.ietf.org/html/rfc3339">IETF RFC3339</a>:
            yyyy-mm-ddTHH:mm:ss.SSSZ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Mean">
            <summary>
            Gets and sets the property Mean. 
            <para>
            The average of the values found in the specified field in the result set.
            </para>
             
            <para>
            If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>,
            or <code>double-array</code>), <code>mean</code> is the string representation of a
            double-precision 64-bit floating point value. If the field is <code>date</code> or
            <code>date-array</code>, <code>mean</code> is the string representation of a date
            with the format specified in <a href="http://tools.ietf.org/html/rfc3339">IETF RFC3339</a>:
            yyyy-mm-ddTHH:mm:ss.SSSZ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Min">
            <summary>
            Gets and sets the property Min. 
            <para>
            The minimum value found in the specified field in the result set.
            </para>
             
            <para>
            If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>,
            or <code>double-array</code>), <code>min</code> is the string representation of a
            double-precision 64-bit floating point value. If the field is <code>date</code> or
            <code>date-array</code>, <code>min</code> is the string representation of a date with
            the format specified in <a href="http://tools.ietf.org/html/rfc3339">IETF RFC3339</a>:
            yyyy-mm-ddTHH:mm:ss.SSSZ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Missing">
            <summary>
            Gets and sets the property Missing. 
            <para>
            The number of documents that do not contain a value in the specified field in the
            result set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Stddev">
            <summary>
            Gets and sets the property Stddev. 
            <para>
            The standard deviation of the values in the specified field in the result set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
            The sum of the field values across the documents in the result set. <code>null</code>
            for date fields.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.FieldStats.SumOfSquares">
            <summary>
            Gets and sets the property SumOfSquares. 
            <para>
            The sum of all field values in the result set squared.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Hit">
            <summary>
            Information about a document that matches the search request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Exprs">
            <summary>
            Gets and sets the property Exprs. 
            <para>
            The expressions returned from a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Fields">
            <summary>
            Gets and sets the property Fields. 
            <para>
            The fields returned from a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Highlights">
            <summary>
            Gets and sets the property Highlights. 
            <para>
            The highlights returned from a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The document ID of a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Hits">
            <summary>
            The collection of documents that match the search request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Cursor">
            <summary>
            Gets and sets the property Cursor. 
            <para>
            A cursor that can be used to retrieve the next set of matching documents when you
            want to page through a large result set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Found">
            <summary>
            Gets and sets the property Found. 
            <para>
            The total number of documents that match the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Hit">
            <summary>
            Gets and sets the property Hit. 
            <para>
            A document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            The index of the first matching document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketInfoUnmarshaller">
            <summary>
            Response Unmarshaller for BucketInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#BucketInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketUnmarshaller">
            <summary>
            Response Unmarshaller for Bucket Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#Bucket,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.DocumentServiceWarningUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentServiceWarning Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.DocumentServiceWarningUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#DocumentServiceWarning,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.DocumentServiceWarningUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.DocumentServiceWarningUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.FieldStatsUnmarshaller">
            <summary>
            Response Unmarshaller for FieldStats Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.FieldStatsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#FieldStats,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.FieldStatsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.FieldStatsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitsUnmarshaller">
            <summary>
            Response Unmarshaller for Hits Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#Hits,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitUnmarshaller">
            <summary>
            Response Unmarshaller for Hit Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#Hit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchRequestMarshaller">
            <summary>
            Search Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchRequestMarshaller.Marshall(Amazon.CloudSearchDomain.Model.SearchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Search operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchStatusUnmarshaller">
            <summary>
            Response Unmarshaller for SearchStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#SearchStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestionMatchUnmarshaller">
            <summary>
            Response Unmarshaller for SuggestionMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestionMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#SuggestionMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestionMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestionMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestModelUnmarshaller">
            <summary>
            Response Unmarshaller for SuggestModel Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestModelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#SuggestModel,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestModelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestModelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestRequestMarshaller">
            <summary>
            Suggest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestRequestMarshaller.Marshall(Amazon.CloudSearchDomain.Model.SuggestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Suggest operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestStatusUnmarshaller">
            <summary>
            Response Unmarshaller for SuggestStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudSearchDomain#Model#SuggestStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsRequestMarshaller">
            <summary>
            UploadDocuments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsRequestMarshaller.Marshall(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UploadDocuments operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchException">
            <summary>
             CloudSearchDomain exception
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.String)">
            <summary>
            Constructs a new SearchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SearchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.Exception)">
            <summary>
            Construct instance of SearchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SearchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SearchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SearchException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchRequest">
            <summary>
            Container for the parameters to the Search operation.
            Retrieves a list of documents that match the specified search criteria. How you specify
            the search criteria depends on which query parser you use. Amazon CloudSearch supports
            four query parsers:
            
             <ul> <li><code>simple</code>: search all <code>text</code> and <code>text-array</code>
            fields for the specified string. Search for phrases, individual terms, and prefixes.
            </li> <li><code>structured</code>: search specific fields, construct compound queries
            using Boolean operators, and use advanced features such as term boosting and proximity
            searching.</li> <li><code>lucene</code>: specify search criteria using the Apache
            Lucene query parser syntax.</li> <li><code>dismax</code>: specify search criteria
            using the simplified subset of the Apache Lucene query parser syntax defined by the
            DisMax query parser.</li> </ul> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
             
            <para>
            The endpoint for submitting <code>Search</code> requests is domain-specific. You submit
            search requests to a domain's search endpoint. To get the search endpoint for your
            domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Cursor">
            <summary>
            Gets and sets the property Cursor. 
            <para>
            Retrieves a cursor value you can use to page through large result sets. Use the <code>size</code>
            parameter to control the number of hits to include in each response. You can specify
            either the <code>cursor</code> or <code>start</code> parameter in a request; they
            are mutually exclusive. To get the first cursor, set the cursor value to <code>initial</code>.
            In subsequent requests, specify the cursor value returned in the hits section of the
            response. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html">Paginating
            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Expr">
            <summary>
            Gets and sets the property Expr. 
            <para>
            Defines one or more numeric expressions that can be used to sort results or specify
            search or filter criteria. You can also specify expressions as return fields. 
            </para>
             
            <para>
            You specify the expressions in JSON using the form <code>{"EXPRESSIONNAME":"EXPRESSION"}</code>.
            You can define and use multiple expressions in a search request. For example:
            </para>
             
            <para>
            <code> {"expression1":"_score*rating", "expression2":"(1/rank)*year"} </code> 
            </para>
             
            <para>
            For information about the variables, operators, and functions you can use in expressions,
            see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html#writing-expressions">Writing
            Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Facet">
            <summary>
            Gets and sets the property Facet. 
            <para>
            Specifies one or more fields for which to get facet information, and options that
            control how the facet information is returned. Each specified field must be facet-enabled
            in the domain configuration. The fields and options are specified in JSON using the
            form <code>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</code>.
            </para>
             
            <para>
            You can specify the following faceting options:
            </para>
             <ul> <li> 
            <para>
            <code>buckets</code> specifies an array of the facet values or ranges to count. Ranges
            are specified using the same syntax that you use to search for a range of values.
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-ranges.html">
            Searching for a Range of Values</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            Buckets are returned in the order they are specified in the request. The <code>sort</code>
            and <code>size</code> options are not valid if you specify <code>buckets</code>.
            </para>
             </li> <li> 
            <para>
            <code>size</code> specifies the maximum number of facets to include in the results.
            By default, Amazon CloudSearch returns counts for the top 10. The <code>size</code>
            parameter is only valid when you specify the <code>sort</code> option; it cannot be
            used in conjunction with <code>buckets</code>.
            </para>
             </li> <li> 
            <para>
            <code>sort</code> specifies how you want to sort the facets in the results: <code>bucket</code>
            or <code>count</code>. Specify <code>bucket</code> to sort alphabetically or numerically
            by facet value (in ascending order). Specify <code>count</code> to sort by the facet
            counts computed for each facet value (in descending order). To retrieve facet counts
            for particular values or ranges of values, use the <code>buckets</code> option instead
            of <code>sort</code>. 
            </para>
             </li> </ul> 
            <para>
            If no facet options are specified, facet counts are computed for all field values,
            the facets are sorted by facet count, and the top 10 facets are returned in the results.
            </para>
             
            <para>
            To count particular buckets of values, use the <code>buckets</code> option. For example,
            the following request uses the <code>buckets</code> option to calculate and return
            facet counts by decade.
            </para>
             
            <para>
            <code> {"year":{"buckets":["[1970,1979]","[1980,1989]","[1990,1999]","[2000,2009]","[2010,}"]}}
            </code>
            </para>
             
            <para>
            To sort facets by facet count, use the <code>count</code> option. For example, the
            following request sets the <code>sort</code> option to <code>count</code> to sort
            the facet values by facet count, with the facet values that have the most matching
            documents listed first. Setting the <code>size</code> option to 3 returns only the
            top three facet values.
            </para>
             
            <para>
            <code> {"year":{"sort":"count","size":3}} </code>
            </para>
             
            <para>
            To sort the facets by value, use the <code>bucket</code> option. For example, the
            following request sets the <code>sort</code> option to <code>bucket</code> to sort
            the facet values numerically by year, with earliest year listed first. 
            </para>
             
            <para>
            <code> {"year":{"sort":"bucket"}} </code>
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/faceting.html">Getting
            and Using Facet Information</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.FilterQuery">
            <summary>
            Gets and sets the property FilterQuery. 
            <para>
            Specifies a structured query that filters the results of a search without affecting
            how the results are scored and sorted. You use <code>filterQuery</code> in conjunction
            with the <code>query</code> parameter to filter the documents that match the constraints
            specified in the <code>query</code> parameter. Specifying a filter controls only which
            matching documents are included in the results, it has no effect on how they are scored
            and sorted. The <code>filterQuery</code> parameter supports the full structured query
            syntax. 
            </para>
             
            <para>
            For more information about using filters, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/filtering-results.html">Filtering
            Matching Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Highlight">
            <summary>
            Gets and sets the property Highlight. 
            <para>
            Retrieves highlights for matches in the specified <code>text</code> or <code>text-array</code>
            fields. Each specified field must be highlight enabled in the domain configuration.
            The fields and options are specified in JSON using the form <code>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</code>.
            </para>
             
            <para>
            You can specify the following highlight options:
            </para>
             <ul> <li> <code>format</code>: specifies the format of the data in the text field:
            <code>text</code> or <code>html</code>. When data is returned as HTML, all non-alphanumeric
            characters are encoded. The default is <code>html</code>. </li> <li> <code>max_phrases</code>:
            specifies the maximum number of occurrences of the search term(s) you want to highlight.
            By default, the first occurrence is highlighted. </li> <li> <code>pre_tag</code>:
            specifies the string to prepend to an occurrence of a search term. The default for
            HTML highlights is <code>&amp;lt;em&amp;gt;</code>. The default for text highlights
            is <code>*</code>. </li> <li> <code>post_tag</code>: specifies the string to append
            to an occurrence of a search term. The default for HTML highlights is <code>&amp;lt;/em&amp;gt;</code>.
            The default for text highlights is <code>*</code>. </li> </ul> 
            <para>
            If no highlight options are specified for a field, the returned field text is treated
            as HTML and the first match is highlighted with emphasis tags: <code>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</code>.
            </para>
             
            <para>
            For example, the following request retrieves highlights for the <code>actors</code>
            and <code>title</code> fields.
            </para>
             
            <para>
             <code>{ "actors": {}, "title": {"format": "text","max_phrases": 2,"pre_tag": "<b>","post_tag":
            "</b>"} }</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Partial">
            <summary>
            Gets and sets the property Partial. 
            <para>
            Enables partial results to be returned if one or more index partitions are unavailable.
            When your search index is partitioned across multiple search instances, by default
            Amazon CloudSearch only returns results if every partition can be queried. This means
            that the failure of a single search instance can result in 5xx (internal server) errors.
            When you enable partial results, Amazon CloudSearch returns whatever results are available
            and includes the percentage of documents searched in the search results (percent-searched).
            This enables you to more gracefully degrade your users' search experience. For example,
            rather than displaying no results, you could display the partial results and a message
            indicating that the results might be incomplete due to a temporary system outage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Query">
            <summary>
            Gets and sets the property Query. 
            <para>
            Specifies the search criteria for the request. How you specify the search criteria
            depends on the query parser used for the request and the parser options specified
            in the <code>queryOptions</code> parameter. By default, the <code>simple</code> query
            parser is used to process requests. To use the <code>structured</code>, <code>lucene</code>,
            or <code>dismax</code> query parser, you must also specify the <code>queryParser</code>
            parameter. 
            </para>
             
            <para>
            For more information about specifying search criteria, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.QueryOptions">
            <summary>
            Gets and sets the property QueryOptions. 
            <para>
            Configures options for the query parser specified in the <code>queryParser</code>
            parameter. You specify the options in JSON using the following form <code>{"OPTION1":"VALUE1","OPTION2":VALUE2"..."OPTIONN":"VALUEN"}.</code>
            </para>
             
            <para>
            The options you can configure vary according to which parser you use:
            </para>
             <ul> <li><code>defaultOperator</code>: The default operator used to combine individual
            terms in the search string. For example: <code>defaultOperator: 'or'</code>. For the
            <code>dismax</code> parser, you specify a percentage that represents the percentage
            of terms in the search string (rounded down) that must match, rather than a default
            operator. A value of <code>0%</code> is the equivalent to OR, and a value of <code>100%</code>
            is equivalent to AND. The percentage must be specified as a value in the range 0-100
            followed by the percent (%) symbol. For example, <code>defaultOperator: 50%</code>.
            Valid values: <code>and</code>, <code>or</code>, a percentage in the range 0%-100%
            (<code>dismax</code>). Default: <code>and</code> (<code>simple</code>, <code>structured</code>,
            <code>lucene</code>) or <code>100</code> (<code>dismax</code>). Valid for: <code>simple</code>,
            <code>structured</code>, <code>lucene</code>, and <code>dismax</code>.</li> <li><code>fields</code>:
            An array of the fields to search when no fields are specified in a search. If no fields
            are specified in a search and this option is not specified, all text and text-array
            fields are searched. You can specify a weight for each field to control the relative
            importance of each field when Amazon CloudSearch calculates relevance scores. To specify
            a field weight, append a caret (<code>^</code>) symbol and the weight to the field
            name. For example, to boost the importance of the <code>title</code> field over the
            <code>description</code> field you could specify: <code>"fields":["title^5","description"]</code>.
            Valid values: The name of any configured field and an optional numeric value greater
            than zero. Default: All <code>text</code> and <code>text-array</code> fields. Valid
            for: <code>simple</code>, <code>structured</code>, <code>lucene</code>, and <code>dismax</code>.</li>
            <li><code>operators</code>: An array of the operators or special characters you want
            to disable for the simple query parser. If you disable the <code>and</code>, <code>or</code>,
            or <code>not</code> operators, the corresponding operators (<code>+</code>, <code>|</code>,
            <code>-</code>) have no special meaning and are dropped from the search string. Similarly,
            disabling <code>prefix</code> disables the wildcard operator (<code>*</code>) and
            disabling <code>phrase</code> disables the ability to search for phrases by enclosing
            phrases in double quotes. Disabling precedence disables the ability to control order
            of precedence using parentheses. Disabling <code>near</code> disables the ability
            to use the ~ operator to perform a sloppy phrase search. Disabling the <code>fuzzy</code>
            operator disables the ability to use the ~ operator to perform a fuzzy search. <code>escape</code>
            disables the ability to use a backslash (<code>\</code>) to escape special characters
            within the search string. Disabling whitespace is an advanced option that prevents
            the parser from tokenizing on whitespace, which can be useful for Vietnamese. (It
            prevents Vietnamese words from being split incorrectly.) For example, you could disable
            all operators other than the phrase operator to support just simple term and phrase
            queries: <code>"operators":["and","not","or", "prefix"]</code>. Valid values: <code>and</code>,
            <code>escape</code>, <code>fuzzy</code>, <code>near</code>, <code>not</code>, <code>or</code>,
            <code>phrase</code>, <code>precedence</code>, <code>prefix</code>, <code>whitespace</code>.
            Default: All operators and special characters are enabled. Valid for: <code>simple</code>.</li>
            <li><code>phraseFields</code>: An array of the <code>text</code> or <code>text-array</code>
            fields you want to use for phrase searches. When the terms in the search string appear
            in close proximity within a field, the field scores higher. You can specify a weight
            for each field to boost that score. The <code>phraseSlop</code> option controls how
            much the matches can deviate from the search string and still be boosted. To specify
            a field weight, append a caret (<code>^</code>) symbol and the weight to the field
            name. For example, to boost phrase matches in the <code>title</code> field over the
            <code>abstract</code> field, you could specify: <code>"phraseFields":["title^3", "plot"]</code>
            Valid values: The name of any <code>text</code> or <code>text-array</code> field and
            an optional numeric value greater than zero. Default: No fields. If you don't specify
            any fields with <code>phraseFields</code>, proximity scoring is disabled even if <code>phraseSlop</code>
            is specified. Valid for: <code>dismax</code>.</li> <li><code>phraseSlop</code>: An
            integer value that specifies how much matches can deviate from the search phrase and
            still be boosted according to the weights specified in the <code>phraseFields</code>
            option; for example, <code>phraseSlop: 2</code>. You must also specify <code>phraseFields</code>
            to enable proximity scoring. Valid values: positive integers. Default: 0. Valid for:
            <code>dismax</code>.</li> <li><code>explicitPhraseSlop</code>: An integer value that
            specifies how much a match can deviate from the search phrase when the phrase is enclosed
            in double quotes in the search string. (Phrases that exceed this proximity distance
            are not considered a match.) For example, to specify a slop of three for dismax phrase
            queries, you would specify <code>"explicitPhraseSlop":3</code>. Valid values: positive
            integers. Default: 0. Valid for: <code>dismax</code>.</li> <li><code>tieBreaker</code>:
            When a term in the search string is found in a document's field, a score is calculated
            for that field based on how common the word is in that field compared to other documents.
            If the term occurs in multiple fields within a document, by default only the highest
            scoring field contributes to the document's overall score. You can specify a <code>tieBreaker</code>
            value to enable the matches in lower-scoring fields to contribute to the document's
            score. That way, if two documents have the same max field score for a particular term,
            the score for the document that has matches in more fields will be higher. The formula
            for calculating the score with a tieBreaker is <code>(max field score) + (tieBreaker)
            * (sum of the scores for the rest of the matching fields)</code>. Set <code>tieBreaker</code>
            to 0 to disregard all but the highest scoring field (pure max): <code>"tieBreaker":0</code>.
            Set to 1 to sum the scores from all fields (pure sum): <code>"tieBreaker":1</code>.
            Valid values: 0.0 to 1.0. Default: 0.0. Valid for: <code>dismax</code>. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.QueryParser">
            <summary>
            Gets and sets the property QueryParser. 
            <para>
            Specifies which query parser to use to process the request. If <code>queryParser</code>
            is not specified, Amazon CloudSearch uses the <code>simple</code> query parser. 
            </para>
             
            <para>
            Amazon CloudSearch supports four query parsers:
            </para>
             <ul> <li> <code>simple</code>: perform simple searches of <code>text</code> and <code>text-array</code>
            fields. By default, the <code>simple</code> query parser searches all <code>text</code>
            and <code>text-array</code> fields. You can specify which fields to search by with
            the <code>queryOptions</code> parameter. If you prefix a search term with a plus sign
            (+) documents must contain the term to be considered a match. (This is the default,
            unless you configure the default operator with the <code>queryOptions</code> parameter.)
            You can use the <code>-</code> (NOT), <code>|</code> (OR), and <code>*</code> (wildcard)
            operators to exclude particular terms, find results that match any of the specified
            terms, or search for a prefix. To search for a phrase rather than individual terms,
            enclose the phrase in double quotes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-text.html">Searching
            for Text</a> in the <i>Amazon CloudSearch Developer Guide</i>. </li> <li> <code>structured</code>:
            perform advanced searches by combining multiple expressions to define the search criteria.
            You can also search within particular fields, search for values and ranges of values,
            and use advanced options such as term boosting, <code>matchall</code>, and <code>near</code>.
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-compound-queries.html">Constructing
            Compound Queries</a> in the <i>Amazon CloudSearch Developer Guide</i>. </li> <li>
            <code>lucene</code>: search using the Apache Lucene query parser syntax. For more
            information, see <a href="http://lucene.apache.org/core/4_6_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description">Apache
            Lucene Query Parser Syntax</a>. </li> <li> <code>dismax</code>: search using the simplified
            subset of the Apache Lucene query parser syntax defined by the DisMax query parser.
            For more information, see <a href="http://wiki.apache.org/solr/DisMaxQParserPlugin#Query_Syntax">DisMax
            Query Parser Syntax</a>. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Specifies the field and expression values to include in the response. Multiple fields
            or expressions are specified as a comma-separated list. By default, a search response
            includes all return enabled fields (<code>_all_fields</code>). To return only the
            document IDs for the matching documents, specify <code>_no_fields</code>. To retrieve
            the relevance score calculated for each document, specify <code>_score</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            Specifies the maximum number of search hits to include in the response. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Sort">
            <summary>
            Gets and sets the property Sort. 
            <para>
            Specifies the fields or custom expressions to use to sort the search results. Multiple
            fields or expressions are specified as a comma-separated list. You must specify the
            sort direction (<code>asc</code> or <code>desc</code>) for each field; for example,
            <code>year desc,title asc</code>. To use a field to sort results, the field must be
            sort-enabled in the domain configuration. Array type fields cannot be used for sorting.
            If no <code>sort</code> parameter is specified, results are sorted by their default
            relevance scores in descending order: <code>_score desc</code>. You can also sort
            by document ID (<code>_id asc</code>) and version (<code>_version desc</code>).
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/sorting-results.html">Sorting
            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            Specifies the offset of the first search hit you want to return. Note that the result
            set is zero-based; the first result is at index 0. You can specify either the <code>start</code>
            or <code>cursor</code> parameter in a request, they are mutually exclusive. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html">Paginating
            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Stats">
            <summary>
            Gets and sets the property Stats. 
            <para>
            Specifies one or more fields for which to get statistics information. Each specified
            field must be facet-enabled in the domain configuration. The fields are specified
            in JSON using the form:
            </para>
             <code>{"FIELD-A":{},"FIELD-B":{}}</code> 
            <para>
            There are currently no options supported for statistics.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchResponse">
            <summary>
            The result of a <code>Search</code> request. Contains the documents that match the
            specified search criteria and any requested fields, highlights, and facet information.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResponse.Facets">
            <summary>
            Gets and sets the property Facets. 
            <para>
            The requested facet information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResponse.Hits">
            <summary>
            Gets and sets the property Hits. 
            <para>
            The documents that match the search criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResponse.Stats">
            <summary>
            Gets and sets the property Stats. 
            <para>
            The requested field statistics information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status information returned for the search request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchStatus">
            <summary>
            Contains the resource id (<code>rid</code>) and the time it took to process the request
            (<code>timems</code>).
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchStatus.Rid">
            <summary>
            Gets and sets the property Rid. 
            <para>
            The encrypted resource ID for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchStatus.Timems">
            <summary>
            Gets and sets the property Timems. 
            <para>
            How long it took to process the request, in milliseconds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestionMatch">
            <summary>
            An autocomplete suggestion that matches the query string specified in a <code>SuggestRequest</code>.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestionMatch.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The document ID of the suggested document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestionMatch.Score">
            <summary>
            Gets and sets the property Score. 
            <para>
            The relevance score of a suggested match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestionMatch.Suggestion">
            <summary>
            Gets and sets the property Suggestion. 
            <para>
            The string that matches the query string specified in the <code>SuggestRequest</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestModel">
            <summary>
            Container for the suggestion information returned in a <code>SuggestResponse</code>.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestModel.Found">
            <summary>
            Gets and sets the property Found. 
            <para>
            The number of documents that were found to match the query string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestModel.Query">
            <summary>
            Gets and sets the property Query. 
            <para>
            The query string specified in the suggest request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestModel.Suggestions">
            <summary>
            Gets and sets the property Suggestions. 
            <para>
            The documents that match the query string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestRequest">
            <summary>
            Container for the parameters to the Suggest operation.
            Retrieves autocomplete suggestions for a partial query string. You can use suggestions
            enable you to display likely matches before users finish typing. In Amazon CloudSearch,
            suggestions are based on the contents of a particular text field. When you request
            suggestions, Amazon CloudSearch finds all of the documents whose values in the suggester
            field start with the specified query string. The beginning of the field must match
            the query string to be considered a match. 
            
             
            <para>
            For more information about configuring suggesters and retrieving suggestions, see
            <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html">Getting
            Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
             
            <para>
            The endpoint for submitting <code>Suggest</code> requests is domain-specific. You
            submit suggest requests to a domain's search endpoint. To get the search endpoint
            for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestRequest.Query">
            <summary>
            Gets and sets the property Query. 
            <para>
            Specifies the string for which you want to get suggestions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            Specifies the maximum number of suggestions to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestRequest.Suggester">
            <summary>
            Gets and sets the property Suggester. 
            <para>
            Specifies the name of the suggester to use to find suggested matches.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestResponse">
            <summary>
            Contains the response to a <code>Suggest</code> request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a <code>SuggestRequest</code>. Contains the resource ID (<code>rid</code>)
            and how long it took to process the request (<code>timems</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestResponse.Suggest">
            <summary>
            Gets and sets the property Suggest. 
            <para>
            Container for the matching search suggestion information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestStatus">
            <summary>
            Contains the resource id (<code>rid</code>) and the time it took to process the request
            (<code>timems</code>).
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestStatus.Rid">
            <summary>
            Gets and sets the property Rid. 
            <para>
            The encrypted resource ID for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestStatus.Timems">
            <summary>
            Gets and sets the property Timems. 
            <para>
            How long it took to process the request, in milliseconds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse">
            <summary>
            Contains the response to an <code>UploadDocuments</code> request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse.Adds">
            <summary>
            Gets and sets the property Adds. 
            <para>
            The number of documents that were added to the search domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse.Deletes">
            <summary>
            Gets and sets the property Deletes. 
            <para>
            The number of documents that were deleted from the search domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of an <code>UploadDocumentsRequest</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            Any warnings returned by the document service about the documents being uploaded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException">
            <summary>
             Common exception for the CloudSearchDomain service.
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudSearchDomainException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudSearchDomainException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudSearchDomainException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudSearchDomainException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudSearchDomainException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCloudSearchDomainException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainRequest">
            <summary>
            Base class for CloudSearchDomain operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.ContentType">
            <summary>
            Constants used for properties of type ContentType.
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.ContentType.ApplicationJson">
            <summary>
            Constant ApplicationJson for ContentType
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.ContentType.ApplicationXml">
            <summary>
            Constant ApplicationXml for ContentType
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.ContentType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.ContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.ContentType.op_Implicit(System.String)~Amazon.CloudSearchDomain.ContentType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudSearchDomain.QueryParser">
            <summary>
            Constants used for properties of type QueryParser.
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Dismax">
            <summary>
            Constant Dismax for QueryParser
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Lucene">
            <summary>
            Constant Lucene for QueryParser
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Simple">
            <summary>
            Constant Simple for QueryParser
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Structured">
            <summary>
            Constant Structured for QueryParser
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.QueryParser.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.QueryParser.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.QueryParser.op_Implicit(System.String)~Amazon.CloudSearchDomain.QueryParser">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain">
             <summary>
             Interface for accessing CloudSearchDomain
            
             You use the AmazonCloudSearch2013 API to upload documents to a search domain and search
             those documents. 
             
              
             <para>
             The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and
             <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain,
             use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action.
             The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch
             console. You submit suggest requests to the search endpoint. 
             </para>
              
             <para>
             For more information, see the <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide">Amazon
             CloudSearch Developer Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.Search(Amazon.CloudSearchDomain.Model.SearchRequest)">
            <summary>
            Retrieves a list of documents that match the specified search criteria. How you specify
            the search criteria depends on which query parser you use. Amazon CloudSearch supports
            four query parsers:
            
             <ul> <li><code>simple</code>: search all <code>text</code> and <code>text-array</code>
            fields for the specified string. Search for phrases, individual terms, and prefixes.
            </li> <li><code>structured</code>: search specific fields, construct compound queries
            using Boolean operators, and use advanced features such as term boosting and proximity
            searching.</li> <li><code>lucene</code>: specify search criteria using the Apache
            Lucene query parser syntax.</li> <li><code>dismax</code>: specify search criteria
            using the simplified subset of the Apache Lucene query parser syntax defined by the
            DisMax query parser.</li> </ul> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
             
            <para>
            The endpoint for submitting <code>Search</code> requests is domain-specific. You submit
            search requests to a domain's search endpoint. To get the search endpoint for your
            domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the Search service method.</param>
            
            <returns>The response from the Search service method, as returned by CloudSearchDomain.</returns>
            <exception cref="T:Amazon.CloudSearchDomain.Model.SearchException">
            Information about any problems encountered while processing a search request.
            </exception>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.SearchAsync(Amazon.CloudSearchDomain.Model.SearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Search operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Search operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.Suggest(Amazon.CloudSearchDomain.Model.SuggestRequest)">
            <summary>
            Retrieves autocomplete suggestions for a partial query string. You can use suggestions
            enable you to display likely matches before users finish typing. In Amazon CloudSearch,
            suggestions are based on the contents of a particular text field. When you request
            suggestions, Amazon CloudSearch finds all of the documents whose values in the suggester
            field start with the specified query string. The beginning of the field must match
            the query string to be considered a match. 
            
             
            <para>
            For more information about configuring suggesters and retrieving suggestions, see
            <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html">Getting
            Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
             
            <para>
            The endpoint for submitting <code>Suggest</code> requests is domain-specific. You
            submit suggest requests to a domain's search endpoint. To get the search endpoint
            for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the Suggest service method.</param>
            
            <returns>The response from the Suggest service method, as returned by CloudSearchDomain.</returns>
            <exception cref="T:Amazon.CloudSearchDomain.Model.SearchException">
            Information about any problems encountered while processing a search request.
            </exception>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.SuggestAsync(Amazon.CloudSearchDomain.Model.SuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Suggest operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Suggest operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.UploadDocuments(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest)">
            <summary>
            Posts a batch of documents to a search domain for indexing. A document batch is a
            collection of add and delete operations that represent the documents you want to add,
            update, or delete from your domain. Batches can be described in either JSON or XML.
            Each item that you want Amazon CloudSearch to return as a search result (such as a
            product) is represented as a document. Every document has a unique ID and one or more
            fields that contain the data that you want to search and return in results. Individual
            documents cannot contain more than 1 MB of data. The entire batch cannot exceed 5
            MB. To get the best possible upload performance, group add and delete operations in
            batches that are close the 5 MB limit. Submitting a large volume of single-document
            batches can overload a domain's document service. 
            
             
            <para>
            The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific.
            To get the document endpoint for your domain, use the Amazon CloudSearch configuration
            service <code>DescribeDomains</code> action. A domain's endpoints are also displayed
            on the domain dashboard in the Amazon CloudSearch console. 
            </para>
             
            <para>
            For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more information
            about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading
            Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UploadDocuments service method.</param>
            
            <returns>The response from the UploadDocuments service method, as returned by CloudSearchDomain.</returns>
            <exception cref="T:Amazon.CloudSearchDomain.Model.DocumentServiceException">
            Information about any problems encountered while processing an upload request.
            </exception>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.UploadDocumentsAsync(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadDocuments operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadDocuments operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
