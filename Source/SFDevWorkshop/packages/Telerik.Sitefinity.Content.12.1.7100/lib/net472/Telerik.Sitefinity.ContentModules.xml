<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Sitefinity.ContentModules</name>
    </assembly>
    <members>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogResources">
            <summary>
            Localizable strings for the Blogs module
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogResources.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogResources"/> class with the default <see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogResources.#ctor(Telerik.Sitefinity.Localization.Data.ResourceDataProvider)">
            <summary>
            Initializes new instance of <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogResources"/> class with the provided <see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/>.
            </summary>
            <param name="dataProvider"><see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/></param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogResourcesTitle">
            <summary>
            Configuration element singular name
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogResourcesTitlePlural">
            <summary>
            Configuration element plural name
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogResourcesDescription">
            <summary>
            Configuration element description
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CategoriesMetafieldTitle">
            <summary>
            Messsage: Category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CategoriesMetafieldDescription">
            <summary>
            Messsage: Defines the category of this content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.TagsMetafieldTitle">
            <summary>
            Messsage: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.TagsMetafieldDescription">
            <summary>
            Messsage: Defines the category of this content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsTitle">
            <summary>
            Messsage: Blogs
            </summary>
            <value>Title for the Blogs module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsHtmlTitle">
            <summary>
            Messsage: Blogs
            </summary>
            <value>Html Title for the Blogs module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsUrlName">
            <summary>
            Messsage: Blogs
            </summary>
            <value>Blogs URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsPostsPluralTypeName">
            <summary>
            Messsage: type name Blog Posts
            </summary>
            <value>Blog Posts</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsPostsSingleTypeName">
            <summary>
            Messsage: type name Blog Posts
            </summary>
            <value>Blog Posts</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsPluralTypeName">
            <summary>
            Messsage: type name Blog Posts
            </summary>
            <value>Blog Posts</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsSingleTypeName">
            <summary>
            Messsage: type name Blog Posts
            </summary>
            <value>Blog Posts</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsTitle">
            <summary>
            Messsage: Posts
            </summary>
            <value>Title for the Blog Posts.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsHtmlTitle">
            <summary>
            Messsage: Blog Posts
            </summary>
            <value>Html Title for the Blog Posts.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsUrlName">
            <summary>
            Messsage: BlogPosts
            </summary>
            <value>Blog Posts URL</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsTitle">
            <summary>
            Messsage: Comments
            </summary>
            <value>Title for the comments page module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsHtmlTitle">
            <summary>
            Messsage: Blog Posts Comments
            </summary>
            <value>Html Title for the comments page module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsUrlName">
            <summary>
            Messsage: Comments
            </summary>
            <value>Comments URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsDescription">
            <summary>
            Message: Manage comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PageGroupNodeTitle">
            <summary>
            Messsage: BlogPages
            </summary>
            <value>Title of the blogs page group.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PageGroupNodeDescription">
            <summary>
            Messsage: Root page group for all pages in the the blogs module.
            </summary>
            <value>Description of the blogs page group</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsToolboxSectionTitle">
            <summary>
            Messsage: Blogs.
            </summary>
            <value>Blogs module toolbox title</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsToolboxSectionDescription">
            <summary>
            Messsage: Blogs module toolbox title.
            </summary>
            <value>Description of the blogs module toolbox title</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsViewTitle">
            <summary>
            Messsage: Blog Posts.
            </summary>
            <value>BlogPostsView title in the toolbox</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsViewDescription">
            <summary>
            Messsage: BlogPostsView title in the toolbox
            </summary>
            <value>Describes the BlogPostsView title in the toolbox</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsCommandPanelTitle">
            <summary>
            Messsage: Blogs
            </summary>
            <value>Title of the blogs command panel (the panel shown when viewing all blogs).</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsCommandPanelTitle">
            <summary>
            Messsage: Posts
            </summary>
            <value>Title of the blog posts command panel (the panel shown when viewing a blog's posts)</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsTitleFormat">
            <summary>
            Messsage: <em>{0}</em> posts
            </summary>
            <value>Title of the blog posts command panel (the panel shown when viewing a blog's posts)</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Create">
            <summary>
            Messsage: Create
            </summary>
            <value>Label for the buttons that create a new blog post and a new blog.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Blog_General">
            <summary>
            Message: Data
            </summary>
            <value>"Data" section name for Blog</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Blog_Behaviour">
            <summary>
            Message: Behaviour
            </summary>
            <value>"Behaviour" section name for Blog</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Blog_AdditionalInfo">
            <summary>
            Message: AdditionalInfo
            </summary>
            <value>"AdditionalInfo" section name for Blog</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Post_Data">
            <summary>
            Message: Data
            </summary>
            <value>"Data" section name for BlogPost</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Post_Behaviour">
            <summary>
            Message: Behaviour
            </summary>
            <value>"Behaviour" section name for BlogPost</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Post_AdditionalInfo">
            <summary>
            Message: AdditionalInfo
            </summary>
            <value>"AdditionalInfo" section name for BlogPost</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AlternativePublishing">
            <summary>
            Message: Alternative publishing (RSS)
            </summary>
            <value>"Alternative publishing (RSS)" section name for Blog</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BackToAllBlogs">
            <summary>
            Messsage: Go back to all blogs.
            </summary>
            <value>Blogs URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BackToBlogs">
            <summary>
            Back to Blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BackToItems">
            <summary>
            Back to Posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BackToPosts">
            <summary>
            Back to Posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AreYouSureYouWantToDeleteThisBlogPost">
            <summary>
            Message: Are you sure you want to delete this blog post?
            </summary>
            <value>Confirmation message sent to the he user prior to deleting an item.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.GroupDeleteBlogPosts">
            <summary>
            Message: Delete
            </summary>
            <value>Text of the button that performs a group delete for blog posts.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CreateBlogPost">
            <summary>
            Message: Create Blog Post
            </summary>
            <value>Text of the button that creates a new blog post.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ViewAllBlogs">
            <summary>
            Message: View all blogs
            </summary>
            <value>Text of the link that will show the view that lists all blog posts.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostTitle">
            <summary>
            Message: Title
            </summary>
            <value>Text of the items grid header showing a blog post's title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostActions">
            <summary>
            Message: Actions
            </summary>
            <value>Header text of the items grid column that shows the list of actions you can perform on a blog post.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ViewBlogPost">
            <summary>
            Message: View
            </summary>
            <value>Text of the link that will preview a blog post</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DeleteBlogPost">
            <summary>
            Message: Delete
            </summary>
            <value>Text of the action that will delete a blog post.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostComments">
            <summary>
            Message: Comments
            </summary>
            <value>Label for blog post comments</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostAuthor">
            <summary>
            Message: Comments
            </summary>
            <value>Label for blog post author</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostDateCreated">
            <summary>
            Message: Comments
            </summary>
            <value>Label for the blog post creation date.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ViewBlog">
            <summary>
            Message: View blog
            </summary>
            <value>Label for 'view blog' command.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.EditPosts">
            <summary>
            Message: Edit posts
            </summary>
            <value>Edit posts</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DeleteBlog">
            <summary>
            Message: Delete
            </summary>
            <value>Label for the 'delete blog' command.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AreYouSureYouWantToDeleteThisBlog">
            <summary>
            Messsage: Are you sure you want to delete this blog?
            </summary>
            <value>Confirmation message when a blog is deleted.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CreateBlog">
            <summary>
            Messsage: Create a blog
            </summary>
            <value>Label of the dialog that creates a new blog.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.GroupDeleteBlogs">
            <summary>
            Message: Delete
            </summary>
            <value>Label for the 'group delete blog' command.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogHeaderTitle">
            <summary>
            Message: Delete
            </summary>
            <value>Header text for the items grid view column showing a blog's title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsForAllPostsInABlog">
            <summary>
            Message: Comments
            </summary>
            <value>Header text for the items grid view column showing a blog's title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsMoreActions">
            <summary>
            Message: More Actions
            </summary>
            <value>Label for the 'more actions' header for blogs</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PostsLiteral">
            <summary>
            Message: Posts
            </summary>
            <value>A literal for 'posts'.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.LastPostLiteral">
            <summary>
            Message: Last post
            </summary>
            <value>A literal for 'Last post'.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.TodayLiteral">
            <summary>
            Message: Today
            </summary>
            <value>A literal for 'Today'.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.LastCommentLiteral">
            <summary>
            Message: Today
            </summary>
            <value>A literal for 'Last comment'.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ByLiteral">
            <summary>
            Message: By
            </summary>
            <value>A literal for 'By'.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ForAllBlogs">
            <summary>
            phrase: For all blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PermissionsForBlogs">
            <summary>
            phrase: Permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsDataFields">
            <summary>
            Blogs data fields
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostsDataFields">
            <summary>
            phrase: Blogs posts data fields
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.SettingsForBlogs">
            <summary>
            phrase: Settings for blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PagesWhereBlogPostsArePublished">
            <summary>
            Pages where Blog Posts are published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogSelectorSearchBoxTitle">
            <summary>
            phrase: Start typing {0} name...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogSelectorTitle">
            <summary>
            phrase: Select an {0} where to move {1} {2}
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Move">
            <summary>
            word: Move
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ThisOperationCanTakeConsiderableAmountOfTime">
            <summary>
            phrase: Moving items may take a while. You will not be able to continue with your work until the process finishes
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MoveToAnotherBlog">
            <summary>
            The text of the button for moving blog post to another blog in the action menu.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Post">
            <summary>
            Messsage: Post
            </summary>
            <value>Title for the Blog Posts.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PermissionsForPosts">
            <summary>
            phrase: Permissions for posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Permissions">
            <summary>
            word: Permissions
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Properties" -->
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.WhatDoYouWantToDoNow">
            <summary>
            phrase: What do you want to do now?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.NoBlogs">
            <summary>
            phrase: No blogs have been created yet.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.NoPosts">
            <summary>
            phrase: No posts have been created yet.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ForAllBlogsLabel">
            <summary>
            Title: For all blogs ...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsWithoutPosts">
            <summary>
            Title: For all blogs ...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Blog_BackToAllItems">
            <summary>
            phrase: Back to all blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BackToAllItems">
            <summary>
            phrase: Back to all blog posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BackToComments">
            <summary>
            phrase: Back to comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CreateNewBlog">
            <summary>
            The title of the create new blog dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.EditBlog">
            <summary>
            The title of the edit blog dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CreateNewPost">
            <summary>
            The title of the create new post dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.EditItem">
            <summary>
            The title of the edit post dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CreateThisBlog">
            <summary>
            phrase: Create this blog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CreateThisPost">
            <summary>
            phrase: Create this post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Blog_EditItem">
            <summary>
            phrase: Edit a blog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPost_EditItem">
            <summary>
            phrase: Edit a post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Edit">
            <summary>
            word: <strong>Edit...</strong>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Publish">
            <summary>
            word: Publish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Unpublish">
            <summary>
            word: Unpublish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MoreActionsWithPosts">
            <summary>
            phrase: More actions with posts.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.SearchPosts">
            <summary>
            phrase: Search posts...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.FilterPosts">
            <summary>
            phrase: Filter posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ManageAlso">
            <summary>
            phrase: Manage also.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsForPosts">
            <summary>
            phrase: Comments for blogs.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Settings">
            <summary>
            phrase: Blogs Settings.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CustomFields">
            <summary>
            phrase: Custom Fields for posts.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Title">
            <summary>
            word: Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PostUrlName">
            <summary>
            phrase: URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogUrlName">
            <summary>
            phrase: Blog URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Actions">
            <summary>
            word: Actions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Categories">
            <summary>
            word: Categories
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Tags">
            <summary>
            word: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Author">
            <summary>
            word: Author
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Date">
            <summary>
            word: Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.View">
            <summary>
            word: View
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ViewProperties">
            <summary>
            word: Properties
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Delete">
            <summary>
            word: Delete
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Duplicate">
            <summary>
            word: Duplicate
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Content">
            <summary>
            word: Content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.History">
            <summary>
            word: History
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.SaveChanges">
            <summary>
            phrase: Save changes
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Cancel">
            <summary>
            Messsage: Cancel
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Summary">
            <summary>
            word: Summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MoreOptions">
            <summary>
            phrase: More Options
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MoreOptionsURL">
            <summary>
            phrase: More options <em class='sfNote'>(URL, Comments)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PublicationDate">
            <summary>
            phrase: Publication Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PublicationDateCannotBeEmpty">
            <summary>
            Phrase: PublicationDate cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExpirationDate">
            <summary>
            phrase: Expiration Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DeleteThisItem">
            <summary>
            Used in the actions menu in the Backend Detail View form
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.SetPermissions">
            <summary>
            Used in the actions menu in the Backend Detail View form
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ReviewHistory">
            <summary>
            Used in the actions menu in the Backend Detail View form
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.TitleCannotBeEmpty">
            <summary>
            Phrase: Title cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ContentCannotBeEmpty">
            <summary>
            Phrase: Content cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.UrlNameCannotBeEmpty">
            <summary>
            Phrase: URL cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ClickToAddSummary">
            <summary>
            Phrase: Click to add summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Status">
            <summary>
            Word: Status
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PublishOn">
            <summary>
            Phrase: Publish on:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExpiresOn">
            <summary>
            Phrase: Expires on:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Language">
            <summary>
            Word: Language
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogProperties">
            <summary>
            Phrase: Blog properties
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostViewPropertyEditorTitle">
            <summary>
            word: Blogs
            </summary>
            <value>word: Blogs</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Category">
            <summary>
            Word: Category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ManageBlogs">
            <summary>
            Word: Manage Blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ManagePosts">
            <summary>
            Word: Manage Posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CategoriesAndTags">
            <summary>
            phrase: Categories and tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Owner">
            <summary>
            word: Owner
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PostsByCategory">
            <summary>
            Phrase: Posts by category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PostsByTag">
            <summary>
            Phrase: Posts by tag
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AllPosts">
            <summary>
            Phrase: All posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MyPosts">
            <summary>
            The text of my posts sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.PublishedPosts">
            <summary>
            phrase: Published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DraftPosts">
            <summary>
            word: Drafts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.WaitingForApproval">
            <summary>
            phrase: Awaiting approval
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.WaitingForReview">
            <summary>
            phrase: Awaiting Review
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.WaitingForPublishing">
            <summary>
            phrase: Awaiting Publishing
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ScheduledPosts">
            <summary>
            word: Scheduled
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ByDateModified">
            <summary>
            phrase: Drafts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CloseDateFilter">
            <summary>
            Phrase: Close date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DisplayLastUpdatedPosts">
            <summary>
            The text of last updated posts sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AllBlogs">
            <summary>
            Phrase: All posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.EditBlogPostsSettings">
            <summary>
            Phrase: Edit Blog posts settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MyBlogs">
            <summary>
            The text of my posts sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Generate">
            <summary>
            Translated message, similar to "Generate..."
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsList">
            <summary>
            Translated message, similar to "BlogsListViewTitle"
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsListDescription">
            <summary>
            BlogsListDescription
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.WhoCanPostComments">
            <summary>
            Phrase: Who can post comments?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.OnlyRegisteredUsers">
            <summary>
            Phrase: Only registered user
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Anyone">
            <summary>
            Phrase: Anyone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CommentsApproved">
            <summary>
            Phrase: CommentsApproved
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.EmailAuthor">
            <summary>
            Phrase: Email the post author when a new comment is submitted
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AllowTrackBacks">
            <summary>
            Phrase: AllowTrackbacks
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.AllowComments">
            <summary>
            Phrase: AllowComments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.SortBlogPosts">
            <summary>
            phrase: Sort blog posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DefaultPage">
            <summary>
            Phrase: Default page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogSingularItemName">
            <summary>
            Word: blog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPluralItemName">
            <summary>
            Word: blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogPostPluralItemName">
            <summary>
            Word: blog posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsMasterViewFriendlyName">
            <summary>
            Phrase: Blog posts - list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsDetailViewFriendlyName">
            <summary>
            Phrase: Blog posts - single
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CustomFieldsForBlogs">
            <summary>
            phrase: Custom fields for blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.UrlNameInvalidSymbols">
            <summary>
            Phrase: URL contains invalid symbols
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.DefaultPageNotSet">
            <summary>
            Phrase: Default page for this blog is not set.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsListControlFriendlyName">
            <summary>
            Phrase: Title of the blogs list template.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsOlderThan">
            <summary>
            Phrase: Only blogs that have posts not older than
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Months">
            <summary>
            Phrase: Only blogs that have posts not older than
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogsMoreThan">
            <summary>
            Phrase: Only blogs that have posts not older than
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.WhichBlog">
            <summary>
            Phrase: Which blogs to display?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.SortByLastPostDate">
            <summary>
            Phrase:By date of the last post (newest on top)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogSettingsProblem">
            <summary>
            Phrase:There is a problem with this blog settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Posts">
            <summary>
            word: posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.NoBlogsSelectedYet">
            <summary>
            Phrase: No blogs selected yet
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.FullStory">
            <summary>
            Phrase: Full story
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.Sort">
            <summary>
            phrase: Sort
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ByTitleAsc">
            <summary>
            phrase: By Title (A-Z)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ByTitleDesc">
            <summary>
            phrase: By Title (Z-A)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogModifiedFirst">
            <summary>
            phrase: NewModifiedFirst
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.BlogCreatedFirst">
            <summary>
            phrase: Last created on top.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.MostUsedOnTop">
            <summary>
            phrase: Most used on top.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.CustomSorting">
            <summary>
            Phrase: Custom sorting...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.IncludeInSitemap">
            <summary>
            phrase: Include in sitemap
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkCreatingBlogsAndBlogPosts">
            <summary>
            Gets External Link: Creating blogs and blog posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkInsertingBlogContentInPages">
            <summary>
            Gets External Link: Inserting blog content in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkBlogsRevisionHistory">
            <summary>
            Gets External Link: Blogs revision history
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkUseBlogsInPages">
            <summary>
            Gets External Link: Use blogs in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkLabelUseBlogsInPages">
            <summary>
            Gets External Link Label: Use blogs in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkLabelAddCustomFields">
            <summary>
            Gets External Link Label: Add custom fields in blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogResources.ExternalLinkLabelWorkWithRevisionHistory">
            <summary>
            Gets External Link Label: Work with revision history
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer">
            <summary>
            Implements functionality for converting items from blogs content in transferable format.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer.GetItemsQueries(Telerik.Sitefinity.Packaging.Content.ExportParams)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer.Area">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer.Delete(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsContentTransfer.OnItemImported(Telerik.Sitefinity.Model.IDataItem,Telerik.Sitefinity.Publishing.WrapperObject,Telerik.Sitefinity.Data.IManager)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider">
            <summary>
            Defines the basic functionality that should be implemented by blogs module data providers
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateBlog">
            <summary>
            Create a new <c>Blog</c> and choose a random identity
            </summary>
            <returns>Created <c>Blog</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateBlog(System.Guid)">
            <summary>
            Create a new <c>Blog</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>Blog</c> identity</param>
            <returns>Created <c>Blog</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetBlogs">
            <summary>
            Get a queryable object for all blogs
            </summary>
            <returns>Queryable object for all blogs</returns>     
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetBlog(System.Guid)">
            <summary>
            Search for a blog by its identity
            </summary>
            <param name="id">Searched blog identity</param>
            <returns>Found blog, or <c>null</c> if not found.</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.Delete(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Mark a blog for removal
            </summary>
            <param name="blogToDelete">The blog to delete.</param>       
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateBlogPost">
            <summary>
            Create a new blog post and choose a random identity
            </summary>
            <returns>Created BlogPost instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateBlogPost(System.Guid)">
            <summary>
            Create a blog post by explicitly set its identity
            </summary>
            <param name="id">Identity of the BlogPost to create</param>
            <returns>Created BlogPost instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetBlogPosts">
            <summary>
            Get a query for all blog posts
            </summary>
            <returns>Queryable object for all blog posts</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetBlogPost(System.Guid)">
            <summary>
            Search for a blog post by its identity
            </summary>
            <param name="id">Identity of the searched blog post</param>
            <returns>Found blog post, or <c>null</c> if it wasn't found.</returns>       
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.Delete(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Mark a blog post for removal
            </summary>
            <param name="blogPostToDelete">The blog post to delete.</param>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetParentTypeFor(System.Type)">
            <summary>
            Override this method in order to return the type of the Parent object of the specified content type.
            If the type has no parent type, return null.
            </summary>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetParentType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetParent(Telerik.Sitefinity.Model.IDataItem)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateItem(System.Type,System.Guid)">
            <summary>
            Creates new data item.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetItem(System.Type,System.Guid)">
            <summary>
            Gets the data item with the specified ID.
            An exception should be thrown if an item with the specified ID does not exist.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="id">The ID of the item to return.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetItemOrDefault(System.Type,System.Guid)">
            <summary>
            Get item by primary key without throwing exceptions if it doesn't exist
            </summary>
            <param name="itemType">Type of the item to get</param>
            <param name="id">Primary key</param>
            <returns>Item or default value</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetItems(System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the items.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="orderExpression">The order expression.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">Total count of the items that are filtered by <paramref name="filterExpression"/></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.DeleteItem(System.Object)">
            <summary>
            Marks the provided persistent item for deletion.
            The item is deleted form the storage when the transaction is committed.
            </summary>
            <param name="item">The item to be deleted.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetUrlFormat(Telerik.Sitefinity.GenericContent.Model.ILocatable)">
            <summary>
            Gets the url format for the specified data item that implements <see cref="T:Telerik.Sitefinity.GenericContent.Model.ILocatable"/> interface.
            </summary>
            <param name="item">The locatable item for which the url format should be returned.</param>
            <returns>
            Regular expression used to format the url.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetItemsByTaxon(System.Guid,System.Boolean,System.String,System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the items by taxon.
            </summary>
            <param name="taxonId">The taxon id.</param>
            <param name="isSingleTaxon">Determines whether the examined taxon is a single taxon or a collection of taxons.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="itemType">Type of the item.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="orderExpression">The order expression.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">The total count.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.RootKey">
            <summary>
            Gets a unique key for each data provider base.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetUrlTypeFor(System.Type)">
            <summary>
            Gets the actual type of the <see cref="T:Telerik.Sitefinity.GenericContent.Model.UrlData"/> implementation for the specified content type.
            </summary>
            <param name="urlType">Type of the URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetSecurityRoot(System.Boolean)">
            <summary>
            Gets the security root.
            </summary>
            <param name="create">if set to <c>true</c> a security root will be created for the provider if there is no root.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.SetRootPermissions(Telerik.Sitefinity.Security.Model.SecurityRoot)">
            <summary>
            Sets the root permissions.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            To be overridden by relevant providers (which involve security roots)
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CommitTransaction">
            <summary>
            Commits the provided transaction.
            
            Explanation for the permission sets/actions:
            Both blog details modification, and blog post update/create/delete are on the BlogPost.Manage action.
            (that is the BlogPost permission set, because it needs to affect all levels: root, blog and blog post).
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.FlushTransaction">
            <summary>
            Flush all dirty and new instances to the database and evict all instances from the local cache.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetKnownTypes">
            <summary>
            Get a list of types served by this manager
            </summary>
            <returns>Collection of known types for this manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetItemFromUrl(System.Type,System.String,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDataProvider.GetItemFromUrl(System.Type,System.String,System.Boolean,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="published">The published.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions">
            <summary>
            This is a static class used to initialize the properties for all ContentView control views
            of supplied by default for the blogs module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.DefineBlogsBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for Blogs on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.DefinePostsBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for Posts on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.DefinePostsFrontendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Define blog posts view definitions for the public side
            </summary>
            <param name="parent">Parent element.</param>
            <returns>Frontend config definition for the blog posts</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.CreateBlogsBackendSections(Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade)">
            <summary>
            Creates the blogs backend sections.
            </summary>
            <param name="fluentDetailView">The detail view.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.CreateBackendSections(Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade)">
            <summary>
            Creates the backend sections.
            </summary>
            <param name="fluentDetailView">The fluent detail view.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.CreateBackendSections(Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade,Telerik.Sitefinity.Web.UI.Fields.Enums.FieldDisplayMode)">
            <summary>
            Creates the backend sections.
            </summary>
            <param name="fluentDetailView">The fluent detail view.</param>
            <param name="displayMode">The display mode.</param>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogPostsDefinitionName">
            <summary>
            Name of the configuration element for the frontend blog posts control definition
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogPostsMasterViewName">
            <summary>
            Name of the default frontend blog posts view - titles, dates, content
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogPostsTitlesDatesViewName">
            <summary>
            Name of the frontend blog posts view - titles, dates
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogPostsTitlesDatesSummariesViewName">
            <summary>
            Name of the default frontend blog posts view - titles, dates, summaries
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogPostsTitlesDatesContentViewName">
            <summary>
            The frontend blog posts titles dates content view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogsListFullViewName">
            <summary>
            The frontend blogs list full view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontentBlogPostsDetailViewName">
            <summary>
            Name of the default frontend blog post details view
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogPostsFullBlogPostViewName">
            <summary>
            The frontend blog posts full blog post view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogViewName">
            <summary>
            The frontend blog view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendBlogDatesViewName">
            <summary>
            The name for frontend blog dates view.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> for the blogs module
            in the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogsListViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the list view of the blogs
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogEditViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the edit view of the blogs
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogInsertViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the insert view of the blogs
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogEditPostViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the edit view of the blog posts
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogInsertPostViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the insert view of the blog posts
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogDuplicatePostViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the duplicate view of the blog posts
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendBlogPreviewPostViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the view blog posts on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendPostsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> definition for the blog posts control
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendPostsListName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> definition for the list view of the
            blog posts on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendCommentsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> 
            definition for the ContentView control for blogs module comments on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.FrontendCommentsDefinitionName">
            <summary>
            Definition name for the frontend comments list.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.BackendVersionPreviewViewName">
            <summary>
            Definition name for the frontend comments list.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.VersionComparisonView">
            <summary>
            Version Comparison View Name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.CreatePostCommandName">
            <summary>
            Name of the command used by the client side components to indicate that a new blog post
            should be created.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.CreateGridPostCommandName">
            <summary>
            Name of the command used by the client side components to indicate that a new blog post
            should be created from the MasterGridView link
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.ModuleName">
            <summary>
            The module name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsDefinitions.ResourceClassId">
            <summary>
            The resource class identifier
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsExtensions">
            <summary>
            Extension methods which extend Sitefinity type <see cref="T:Telerik.Sitefinity.Blogs.Model.Blog"/> with helper methods.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsManager">
            <summary>
            Manages the data layer for Blogs
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.#cctor">
            <summary>
            Initializes the <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogsManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogsManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogsManager"/> class.
            </summary>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.BlogsManager"/> class.
            </summary>
            <param name="providerName">
            The name of the provider. If empty string or null the default provider is set
            </param>
            <param name="transactionName">
            The name of a distributed transaction. If empty string or null this manager will use separate transaction.
            </param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsManager.DefaultProviderDelegate">
            <summary>
            Gets the default provider for this manager.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsManager.ModuleName">
            <summary>
            The name of the module that this manager belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsManager.ProvidersSettings">
            <summary>
            Returns all providers from the configuration
            </summary>
            <value>Collection of providers</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetManager">
            <summary>
            Get an instance of the blogs manager using the default provider
            </summary>
            <returns>Instance of blogs manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetManager(System.String)">
            <summary>
            Get an instance of the blogs manager by explicitly specifying the required provider to use
            </summary>
            <param name="providerName">Name of the provider to use, or null/empty string to use the default provider.</param>
            <returns>Instance of the blogs manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetManager(System.String,System.String)">
            <summary>
            Get an instance of the blogs manager by explicitly specifying the required provider to use
            </summary>
            <param name="providerName">Name of the provider to use, or null/empty string to use the default provider.</param>
            <param name="transactionName">Name of the transaction.</param>
            <returns>Instance of the blogs manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetItems``1">
            <summary>
            Gets the items.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CreateBlog">
            <summary>
            Create a new <c>Blog</c> and choose a random identity
            </summary>
            <returns>Created <c>Blog</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CreateBlog(System.Guid)">
            <summary>
            Create a new <c>Blog</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>Blog</c> identity</param>
            <returns>Created <c>Blog</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetBlogs">
            <summary>
            Get a queryable object for all blogs
            </summary>
            <returns>Queryable object for all blogs</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetBlog(System.Guid)">
            <summary>
            Search for a blog by its identity
            </summary>
            <param name="id">Searched blog identity</param>
            <returns>Found blog, or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.DeleteBlog(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Mark a blog for removal
            </summary>
            <param name="blogToDelete">The blog to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CreateBlogPost">
            <summary>
            Create a new blog post and choose a random identity
            </summary>
            <returns>Created BlogPost instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CreateBlogPost(System.Guid)">
            <summary>
            Create a blog post by explicitly set its identity
            </summary>
            <param name="id">Identity of the BlogPost to create</param>
            <returns>Created BlogPost instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetBlogPosts">
            <summary>
            Get a query for all blog posts
            </summary>
            <returns>Queryable object for all blog posts</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetBlogPost(System.Guid)">
            <summary>
            Search for a blog post by its identity
            </summary>
            <param name="id">Identity of the searched blog post</param>
            <returns>Found blog post, or <c>null</c> if it wasn't found.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.DeleteBlogPost(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Mark a blog post for removal
            </summary>
            <param name="blogPostToDelete">The blog post to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CheckIn(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CheckOut(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>A content that was checked out in temp state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Edit(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>A content that was edited in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Publish(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Unpublish(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Schedule(Telerik.Sitefinity.Blogs.Model.BlogPost,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>   
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetCheckedOutBy(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <param name="itemsQuery">Query of all BlogPosts</param>
            <returns>ID of the user that ckecked out the item or Guid.Empty if the item is not checked out.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.IsCheckedOut(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <param name="itemsQuery">Query of all BlogPostss</param>
            <returns>True if the item is checked out, false otherwize.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.IsCheckedOutBy(Telerik.Sitefinity.Blogs.Model.BlogPost,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <param name="itemsQuery">Query of all BlogPosts.</param>
            <returns>True if it was checked out by a user with the specified id, false otherwize</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Copy(Telerik.Sitefinity.Blogs.Model.BlogPost,Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Copies the contents of a blog post to another blog post. Used primarily in content lifecycle management.
            </summary>
            <param name="source">Blog post to copy from</param>
            <param name="destination">Blog post to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetLive(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Gets the public (live) version of <paramref name="cnt"/>, if it exists
            </summary>
            <param name="cnt">Type of the content item</param>        
            <returns>Public (live) version of <paramref name="cnt"/>, if it exists</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetTemp(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Get a temp for <paramref name="cnt"/>, if it exists.
            </summary>        
            <param name="cnt">Content item to get a temp for</param>        
            <returns>Temp version of <paramref name="cnt"/>, if it exists.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetMaster(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Accepts a content item and returns an item in master state
            </summary>        
            <param name="cnt">Content item whose master to get</param>        
            <returns>
            If <paramref name="cnt"/> is master itself, returns cnt.
            Otherwize, looks up the master associated with <paramref name="cnt"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="cnt"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Unpublish(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not Supported
            </summary>
            <param name="cnt">Not used</param>
            <returns>throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CheckIn(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CheckOut(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Edit(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Publish(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetCheckedOutBy(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <param name="itemsQuery">Not used.</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.IsCheckedOut(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <param name="itemsQuery">Not used.</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.IsCheckedOutBy(Telerik.Sitefinity.Blogs.Model.Blog,System.Guid)">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <param name="itemsQuery">Not used.</param>
            <returns>Nothing. Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blogs don't support content lifecycle management.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetLive(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported 
            </summary>
            <param name="cnt">Not used</param>
            <returns>Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blog is not supported.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetTemp(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported 
            </summary>
            <param name="cnt">Not used</param>
            <returns>Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blog is not supported.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetMaster(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Not supported 
            </summary>
            <param name="cnt">Not used</param>
            <returns>Throws exception.</returns>
            <exception cref="T:System.NotSupportedException">Always. Blog is not supported.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Schedule(Telerik.Sitefinity.Blogs.Model.Blog,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Not supported
            </summary>
            <param name="item">Not used</param>
            <param name="publicationDate">Not used</param>
            <param name="expirationDate">Not used</param>
            <exception cref="T:System.NotSupportedException">Always. Blog is not supported.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CheckIn(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CheckOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>
            A content that was checked out in temp state.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Edit(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>
            A content that was edited in master state.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Publish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
            <returns>Published content item</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Unpublish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Schedule(Telerik.Sitefinity.GenericContent.Model.Content,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>
            <returns>Scheduled content item</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <param name="itemsQuery">Query of all <typeparamref name="Content"/>-s</param>
            <returns>
            ID of the user that ckecked out the item or Guid.Empty if the item is not checked out.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.IsCheckedOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <param name="itemsQuery">Query of all <typeparamref name="Content"/>-s</param>
            <returns>
            True if the item is checked out, false otherwize.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.IsCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <param name="itemsQuery">Query of all <typeparamref name="Content"/>-s.</param>
            <returns>
            True if it was checked out by a user with the specified id, false otherwize
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetLive(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Gets the public (live) version of <paramref name="cnt"/>, if it exists
            </summary>
            <param name="cnt">Type of the content item</param>
            <returns>
            Public (live) version of <paramref name="cnt"/>, if it exists
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetTemp(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Get a temp for <paramref name="cnt"/>, if it exists.
            </summary>
            <param name="cnt">Content item to get a temp for</param>
            <returns>
            Temp version of <paramref name="cnt"/>, if it exists.
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetMaster(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Accepts a content item and returns an item in master state
            </summary>
            <param name="cnt">Content item whose master to get</param>
            <returns>
            If <paramref name="cnt"/> is master itself, returns cnt.
            Otherwize, looks up the master associated with <paramref name="cnt"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="cnt"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsManager.Lifecycle">
            <summary>
            Gets the lifecycle decorator
            </summary>
            <value>The lifecycle.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CreateLanguageData">
            <summary>
            Creates a language data instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data instance
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetLanguageData(System.Guid)">
            <summary>
            Gets language data instance by its Id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsManager.RecycleBin">
            <summary>
            Gets the strategy that encapsulates the Recycle Bin operations 
            like moving an item to, and restoring from the Recycle Bin.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsManager.GetConfigType">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsManager.ProviderNameDefaultPrefix">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsModule">
            <summary>
            Entry point for the Blogs Module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsModule.Managers">
            <summary>
            Gets the CLR types of all data managers provided by this module.
            </summary>
            <value>An array of <see cref="T:System.Type"/> objects.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsModule.LandingPageId">
            <summary>
            Gets the /// Gets the identity of the home (landing) page for the Blogs module.
            </summary>
            <value>The landing page id.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.DeleteRssForBlog(Telerik.Sitefinity.Data.Events.IDataEvent)">
            <summary>
            Deletes all pipes that are connected to a RSS feed after the blog is deleted
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.Initialize(Telerik.Sitefinity.Services.ModuleSettings)">
            <summary>
            Initializes the service with specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.InstallPages(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the pages.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.InstallTaxonomies(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the taxonomies.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.GetModuleConfig">
            <summary>
            Gets the module config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.InstallConfiguration(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs module's toolbox configuration.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.Upgrade(Telerik.Sitefinity.Abstractions.SiteInitializer,System.Version)">
            <summary>
            Upgrades this module from the specified version.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
            <param name="upgradeFrom">The version this module us upgrading from.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.GetTypeLandingPagesMapping">
            <summary>
            Gets the type landing pages mapping.
            </summary>
            <returns>A dictionary containing the page ids by their type.</returns>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.ModuleName">
            <summary>
            Name of the blogs module. (e.g. used in BlogsManager)
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogsPageGroupName">
            <summary>
            Name of the blogs page group (taxon name)
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogsPageGroupId">
            <summary>
            Identity of the Blogs home group (taxon pageId)
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.HomePageId">
            <summary>
            Identity of the home (landing) page for the Blogs module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogPostsPageId">
            <summary>
            Identity of the Blog posts page
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.CommentsPageId">
            <summary>
            Identity of the comments page
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.ResourceClassId">
            <summary>
            Localization resources' class Id for blogs
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogsViewConfigKey">
            <summary>
            Defines the configuration key that the BlogsView control will use to load its sub-views
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.PublicBlogsViewConfigKey">
            <summary>
            Defines the configuration key that the PublicBlogsView control will use to load its sub-views
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogsBackendContentViewControlId">
            <summary>
            The blogs content view control id.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogPostsBackendContentViewControlId">
            <summary>
            The blog posts content view control id.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsModule.BlogPostCommentssBackendContentViewControlId">
            <summary>
            The blog post comments content view control id.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.InitializeSortingExpressionSettings(Telerik.Sitefinity.Configuration.ConfigElementList{Telerik.Sitefinity.Data.Configuration.SortingExpressionElement})">
            <summary>
            Initializes the sorting expression settings.
            </summary>
            <param name="sortingExpressions">The sorting expressions.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsModule.Telerik#Sitefinity#Modules#IExportableModule#ModuleName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsModule.Telerik#Sitefinity#Modules#IExportableModule#GetModuleMetaTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsFilterStrategy.GetFiltersInternal(System.Type)">
            <summary>
            Gets all filters registered for specific item type from this strategy
            </summary>
            <param name="itemType">The item type</param>
            <returns>Available filters</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets">
            <summary>
            Constants related to Permission Sets
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog">
            <summary>
            General permisson set action names
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog.SetName">
            <summary>
            Name of the general permission set
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog.View">
            <summary>
            View action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog.Create">
            <summary>
            Create action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog.Delete">
            <summary>
            Delete action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog.ChangeOwner">
            <summary>
            ChangeOwner action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.Blog.ChangePermissions">
            <summary>
            ChangePermissions action name
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost">
            <summary>
            BlogPost permission set
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost.SetName">
            <summary>
            BlogPost permission set name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost.View">
            <summary>
            ViewBlogPost action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost.Manage">
            <summary>
            ManageBlogPost action name. Also used for setting the blog properties at the higher level.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost.Unlock">
            <summary>
            Unlock action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost.ChangeOwner">
            <summary>
            ChangeBlogPostOwner action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Blogs.BlogsPermissions.Sets.BlogPost.ChangePermissions">
            <summary>
            ChangeBlogPostPermissions action name
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogsStructureTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogsStructureTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old">
            <summary>
            Represents summary information about a blog
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:BlogViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.#ctor(Telerik.Sitefinity.Blogs.Model.Blog,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Initializes a new instance of the <see cref="!:BlogViewModel"/> class.
            </summary>
            <param name="blogItem">The blog item.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.#ctor(Telerik.Sitefinity.Blogs.Model.Blog,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="!:VideoViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
            <param name="isEditable">if set to <c>true</c> if the content is editable.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.PostCount">
            <summary>
            Gets the number of posts in this blog
            </summary>
            <value>The number of posts in this blog.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.LastPostDate">
            <summary>
            Gets or sets the last post date.
            </summary>
            <value>The last post date.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.GetLive">
            <summary>
            Get live version of this.ContentItem using this.provider
            </summary>
            <returns>Live version of this.ContentItem</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.BlogViewModel_old.GetTemp">
            <summary>
            Get temp version of this.ContentItem using this.provider
            </summary>
            <returns>Temp version of this.ContentItem</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Configuration.BlogsConfig">
            <summary>
            Represents the configuration section for blogs.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Configuration.BlogsConfig.InitializeDefaultProviders(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Configuration.DataProviderSettings})">
            <summary>
            Initializes the default providers.
            </summary>
            <param name="providers"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Configuration.BlogsConfig.InitializeDefaultViews(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement})">
            <summary>
            Initializes the default views.
            </summary>
            <param name="contentViewControls"></param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Data.BlogsMetadataSource">
            <summary>
            This class implements the Events module OpenAccess data provider ORM mappings
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.BlogsMetadataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Data.BlogsMetadataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.BlogsMetadataSource.#ctor(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Data.BlogsMetadataSource"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider">
            <summary>
            Implements the blogs data layer with OpenAccess
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CreateBlog">
            <summary>
            Create a new <c>Blog</c> and choose a random identity
            </summary>
            <returns>Created <c>Blog</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CreateBlog(System.Guid)">
            <summary>
            Create a new <c>Blog</c> with a explicitly specified identity
            </summary>
            <param name="pageId"><c>Blog</c> identity</param>
            <returns>Created <c>Blog</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetBlog(System.Guid)">
            <summary>
            Search for a blog by its identity
            </summary>
            <param name="pageId">Searched blog identity</param>
            <returns>Found blog, or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetBlogs">
            <summary>   
            Get a queryable object for all blogs
            </summary>
            <returns>Queryable object for all blogs</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.Delete(Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Mark a blog for removal
            </summary>
            <param name="blogToDelete">The blog to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CreateBlogPost">
            <summary>
            Create a new blog post and choose a random identity
            </summary>
            <returns>Created BlogPost instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CreateBlogPost(System.Guid)">
            <summary>
            Create a blog post by explicitly set its identity
            </summary>
            <param name="pageId">Identity of the BlogPost to create</param>
            <returns>Created BlogPost instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.BlogPost_ParentChanged(Telerik.Sitefinity.Blogs.Model.BlogPost,Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Handler for the event in which a blog post is assigned to a specific blog (as a parent).
            Makes sure the blog post is added as a permission inheritor of the blog, and copies the blog's permissions.
            </summary>
            <param name="sender">The sender.</param>
            <param name="parentBlog">The parent blog.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetBlogPosts">
            <summary>
            Get a query for all blog posts
            </summary>
            <returns>Queryable object for all blog posts</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetBlogPost(System.Guid)">
            <summary>
            Search for a blog post by its identity
            </summary>
            <param name="pageId">Identity of the searched blog post</param>
            <returns>
            Found blog post, or <c>null</c> if it wasn't found.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.Delete(Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Mark a blog post for removal
            </summary>
            <param name="blogPostToDelete">The blog post to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetMetaDataSource(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Gets the meta data source.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.Context">
            <summary>
            Gets or sets the OpenAccess context. Alternative to Database.
            </summary>
            <value>The context.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.CurrentSchemaVersionNumber">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.OnUpgrading(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Data.OpenAccessBlogProvider.OnUpgraded(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.RecycleBin.BlogPostAdapter">
            <summary>
            A component that can populated blog post specific properties into <see cref="!:RecycleBinDataItem"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.RecycleBin.BlogPostAdapter.FillProperties(Telerik.Sitefinity.RecycleBin.IRecycleBinDataItem,Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Populates the properties of the specified <paramref name="recycleBinItem" /> from the specified <paramref name="dataItem" />.
            </summary>
            <param name="recycleBinItem">The recycle bin item which properties will be populated.</param>
            <param name="dataItem">The data item to get values from.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.RecycleBin.BlogsRecycleBinFactory">
            <summary>
            Recycle Bin item factory that can fill Recycle Bin items from a <see cref="T:Telerik.Sitefinity.Blogs.Model.BlogPost"/> object.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.RecycleBin.BlogsRecycleBinFactory.GetRecycleBinItemAdapters(Telerik.Sitefinity.Model.IDataItem)">
            <summary>
            Gets a list of <see cref="T:Telerik.Sitefinity.RecycleBin.IRecycleBinItemAdapter" /> for the specified <paramref name="item" />.
            </summary>
            <param name="item">The item that will be inspected to configure what adapters will be used.</param>
            <returns>
            List of <see cref="T:Telerik.Sitefinity.RecycleBin.IRecycleBinItemAdapter" /> for the specified <paramref name="item" />.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector" /> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.ItemsName">
            <summary>
            A localized string representing the item in plural (for example Images). 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.ItemName">
            <summary>
            A localized string representing the item in singular (for example Image). 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.BlogName">
            <summary>
            A localized string representing the library type (for example Album).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.DoneSelectingButton">
            <summary>
            The LinkButton for "Done"
            </summary>
            
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelector.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog" /> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.ClientComponentType">
            <summary>
            Gets the type of the client component.
            </summary>
            <value>The type of the client component.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.ParentSelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Choose item" dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.ItemsName">
            <summary>
            A localized string representing the item in plural (for example Blog Posts). 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.ItemName">
            <summary>
            A localized string representing the item in singular (for example Blog Post). 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.BlogName">
            <summary>
            A localized string representing the content type (in this case Blog)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.Provider">
            <summary>
            Gets the provider name.
            </summary>
            <value>The provider name</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.SelectContentButtonWrapper">
            <summary>
            Gets a reference to btnSelectSingleItemWrapper control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.BlogSelector">
            <summary>
            A content selector for the retrieved items
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
            
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogSelectorDialog.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView">
            <summary>
            Displays views related to blog posts in the frontend
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.Item">
            <summary>
            When in detail view, this will contain the blog post resolved from URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.ModuleName">
            <summary>
            Gets or sets the name of the module which initialization should be ensured prior to rendering this control.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.ControlDefinitionName">
            <summary>
            Gets or sets the name of the configuration definition for the whole control. From this definition
            control can find out all other configurations needed in order to construct views.
            </summary>
            <value>The name of the control definition.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.MasterViewName">
            <summary>
            Gets or sets the name of the master view to be loaded when
            control is in the ContentViewDisplayMode.Master
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.DetailViewName">
            <summary>
            Gets or sets the name of the detail view to be loaded when
            control is in the ContentViewDisplayMode.Detail
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.EmptyLinkText">
            <summary>
            Gets or sets the text to be shown when the box in the designer is empty
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogPostView.Title">
            <summary>
            Gets or sets the title of the control.
            </summary>
            <value>The title of the control.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl">
            <summary>
            Represents a control that displays blogs based on specific criteria
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl" /> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.Repeater">
            <summary>
            Reference to the control that binds to the data item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.ErrorLabel">
            <summary>
            Reference to the control that binds to the data item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.ProviderName">
            <summary>
            Name of the provider to use for the blogs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.BlogsListTitle">
            <summary>
            Title to be displayed at the top of the widget
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.MinimumPostsCount">
            <summary>
            Specifies the least amount of posts needed to show a blog in the list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.MinimumPostAgeInMonths">
            <summary>
            Specifies the minimum age of the posts in months
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.OrderByBlogsWithNewestPosts">
            <summary>
            If set to true will put the blogs with the newest posts on the top
            <remarks>By default sorting is by blog title (A-Z)</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.BlogsManager">
            <summary>
            Gets the reference to the <see cref="!:ListsManager"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Name of the provider to use for the blogs
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">
            An <see cref="T:System.EventArgs"/> object that contains the
            event data.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.GetBlogItems">
            <summary>
            Gets the filtered and sorted blogs list before binding it to the container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.FilterBlogs">
            <summary>
            Filters the blogs to be displayed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.BlogsListControl.ApplyBlogsSorting(System.Linq.IQueryable{Telerik.Sitefinity.Blogs.Model.Blog})">
            <summary>
            
            </summary>
            <param name="blogsQuery"></param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView">
            <summary>
             Represents the Blogs Content Selectors designer view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.ContentTitleCssClass">
            <summary>
            Gets or sets the css class of the content selector title.
            </summary>
            <value>The css class of the content title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.AllowMultipleSelection">
            <summary>
            Gets or sets a value indicating whether multiple blogs can be selected. By default <c>true</c>.
            </summary>
            <value>
            	<c>true</c> if multiple blogs can be selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.DisableNarrowSelection">
            <summary>
            Gets or sets a value indicating whether the narrow selection functinality is disabled (hidden)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.ChoicesTitleHeading">
            <summary>
            Gets the radio choices title literal parent.
            </summary>
            <value>The choices title heading.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.SelectParentButton">
            <summary>
            Gets the button blog posts.
            </summary>
            <value>The button blog posts.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.ParentContentSelector">
            <summary>
            Gets or sets the blog posts content selector.
            </summary>
            <value>The blog posts content selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.SelectedParentLabel">
            <summary>
            Gets or sets the selected blog post title.
            </summary>
            <value>The selected blog post title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.BlogsManager">
            <summary>
            Gets the blogs manager.
            </summary>
            <value>The blogs manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.SelectedParentLabelText">
            <summary>
            Gets or sets the selected parent content title text.
            </summary>
            <value>The selected parent content title text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.ParentSelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Choose item" dialog
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.InitView(Telerik.Sitefinity.Web.UI.ControlDesign.ControlDesignerBase)">
            <summary>
            Initializes the view.
            </summary>
            <param name="designer"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.ShowBlog(System.Guid)">
            <summary>
            Shows the title of the selected blog or a warning if it was deleted.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.CheckForNoBlogs">
            <summary>
            Checks if no blogs were created 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsContentSelectorsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsDesigner">
            <summary>
            Blogs content view deisgner control
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsDesigner.ScriptDescriptorTypeName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsDesigner.AddViews(System.Collections.Generic.Dictionary{System.String,Telerik.Sitefinity.Web.UI.ControlDesign.ControlDesignerView})">
            <summary>
            Adds the designer views.
            </summary>
            <param name="views">The views.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner">
            <summary>
            Designer for the blogs list control
            </summary>    
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.RadWindowManager">
            <summary>
            Gets the correct instance of RadWindowManager
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.EditTemplateLink">
            <summary>
            Gets the link that opens up the dialog for editing the currently selected control template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.CreateTemplateLink">
            <summary>
            Gets the link that opens up the dialog for creating a new control template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.TopMessageText">
            <summary>
            Gets or sets the message text - used to show any warnings and errors on the designers
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.TopMessageType">
            <summary>
            Gets or sets the type of the top message.
            </summary>
            <value>The type of the top message.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.ModifyWidgetTemplatePermission">
            <summary>
            Gets whether the user has the permissions to modify the widget templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.BlogsManager">
            <summary>
            Gets the blogs manager.
            </summary>
            <value>The blogs manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.SortBlogs">
            <summary>
            Gets the reference to the SortBlogs choice field selector.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.DesignedMasterViewType">
            <summary>
            The type name of the view used to display the designed control in master mode.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.MasterViewNameList">
            <summary>
            Gets the choice field listing all possible layout templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.TemplateTitle">
            <summary>
            Gets the Label control representing the title of the selected control template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.ProvidersSelector">
            <summary>
            Gets the providers selector control.
            </summary>
            <value>The providers selector control.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.Message">
            <summary>
            Gets the message control.
            </summary>
            <value>The message control.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.GetScriptDescriptors">
            <summary>
            Gets the script descriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Designers.BlogsListDesigner.GetScriptReferences">
            <summary>
            Gets the script references.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView">
            <summary>
            Shows a single blog post in the frontend
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.DetailsView">
            <summary>
            Reference to the data-bound control that displays the blog post's details
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.DetailsView_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemDataBound event of the DetailsView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.DetailPostView.DetailsView_ItemCreated(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemCreated event of the DetailsView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView">
            <summary>
            Displays blog posts in the frontend
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.Definition">
            <summary>
            Gets/Sets the definition.
            </summary>
            <value>The definition.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.PostList">
            <summary>
            Reference to the template control that lists blog posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.Pager">
            <summary>
            Gets the pager.
            </summary>
            <value>The pager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.InitializeListView(System.Linq.IQueryable{Telerik.Sitefinity.Blogs.Model.BlogPost},System.Nullable{System.Int32})">
            <summary>
            Initializes the list view control with the items from the query.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.GetItemsList(System.Nullable{System.Int32}@)">
            <summary>
            Gets the list with blog posts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.UI.Public.MasterPostsView.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService">
            <summary>
            This web service is used to work with <see cref="T:Telerik.Sitefinity.Blogs.Model.BlogPost"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService.GetContentItems(System.String)">
            <summary>
            Gets the content of a specified type from the given provider.
            </summary>
            <param name="providerName">
            The provider from which the content ought to be retrieved.
            </param>
            <returns>Query of the content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService.GetChildContentItems(System.Guid,System.String)">
            <summary>
            Gets the child content of a specified content item from the given provider.
            </summary>
            <param name="parentId">Id of the parent content for which the children ought to be retrieved.</param>
            <param name="providerName">The provider from which the content ought to be retrieved.</param>
            <returns>Query of the child content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService.GetContentItem(System.Guid,System.String)">
            <summary>
            Gets a single content.
            </summary>
            <param name="id">Id of the content to be retrieved.</param>
            <param name="providerName">Name of the provider from which the content ought to be retrieved.</param>
            <returns>A single content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService.GetParentContentItem(System.Guid,System.String)">
            <summary>
            Gets the parent content item.
            </summary>
            <param name="id">The id.</param>
            <param name="providerName">Name of the provider.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService.GetManager(System.String)">
            <summary>
            Gets the manager to be used by the service. Concrete implementation of the service must provide this.
            </summary>
            <param name="providerName">Name of the provider with which the manager ought to be instantiated.</param>
            <returns>An instance of the manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Blogs.Model.BlogPost},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Blogs.Model.BlogPost},System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Blogs.Model.BlogPost})">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <param name="liveItem">The dictionary  of live content items related to the master content items</param>
            <param name="tempItem">The dictionary  of temp content items related to the master content items</param>
            <returns>
            An enumerable of view model content objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.Blogs.Model.BlogPost"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel.#ctor(Telerik.Sitefinity.Blogs.Model.BlogPost,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel.#ctor(Telerik.Sitefinity.Blogs.Model.BlogPost,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,Telerik.Sitefinity.Blogs.Model.BlogPost,Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
            <param name="liveItem">The live blog post relevant to the master blog post.</param>
            <param name="tempItem">The temp blog post relevant to the master blog post.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel.ParentId">
            <summary>
            Id of the blog this post belongs to
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel.GetLive">
            <summary>
            Get live version of this.ContentItem using this.provider
            </summary>
            <returns>Live version of this.ContentItem</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogPostViewModel.GetTemp">
            <summary>
            Get temp version of this.ContentItem using this.provider
            </summary>
            <returns>Temp version of this.ContentItem</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService">
            <summary>
            This web service is used to work with <see cref="T:Telerik.Sitefinity.Blogs.Model.Blog"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetContentItems(System.String)">
            <summary>
            Gets the content of a specified type from the given provider.
            </summary>
            <param name="providerName">
            The provider from which the content ought to be retrieved.
            </param>
            <returns>Query of the content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetChildContentItems(System.Guid,System.String)">
            <summary>
            Gets the child content of a specified content item from the given provider.
            </summary>
            <param name="parentId">Id of the parent content for which the children ought to be retrieved.</param>
            <param name="providerName">The provider from which the content ought to be retrieved.</param>
            <returns>Query of the child content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetContentItem(System.Guid,System.String)">
            <summary>
            Gets a single content.
            </summary>
            <param name="id">Id of the content to be retrieved.</param>
            <param name="providerName">Name of the provider from which the content ought to be retrieved.</param>
            <returns>A single content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetParentContentItem(System.Guid,System.String)">
            <summary>
            Gets the parent content item.
            </summary>
            <param name="id">The id.</param>
            <param name="providerName">Name of the provider.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetManager(System.String)">
            <summary>
            Gets the manager to be used by the service. Concrete implementation of the service must provide this.
            </summary>
            <param name="providerName">Name of the provider with which the manager ought to be instantiated.</param>
            <returns>An instance of the manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.SaveContent(Telerik.Sitefinity.Web.Services.ContentItemContext{Telerik.Sitefinity.Blogs.Model.Blog},System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Saves the content item and returns the saved content item in JSON format. If the content item
            with the specified pageId exists the content item will be updates; otherwise new content item will
            be created.
            </summary>
            <param name="content">The content object to be saved.</param>
            <param name="contentId">The pageId of the content item to be saved.</param>
            <param name="providerName">Name of the content provider that is to be used to save the content item.</param>
            <param name="version">Ignored.</param>
            <param name="published">Ignored.</param>
            <param name="checkOut">Ignored.</param>
            <param name="workflowOperation">The workflow operation used for the content item to be saved.</param>
            <returns>
            An instance of ContentItemContext that contains the content item that was saved.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Blogs.Model.Blog},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Blogs.Model.Blog},System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Blogs.Model.Blog})">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <param name="liveItem">The dictionary  of live blog related to the master blogs</param>
            <param name="tempItem">The dictionary  of temp blogs related to the master blogs</param>
            <returns>
            An enumerable of view model content objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Blogs.Model.Blog},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <returns>An enumerable of view model content objects.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.ProcessFilter(System.String@)">
            <summary>
            Override to implement filtering for backend blogs
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogService.SetupItemPublishing(Telerik.Sitefinity.Web.Services.ContentItemContext{Telerik.Sitefinity.Blogs.Model.Blog})">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.Blogs.Model.Blog"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.#ctor(Telerik.Sitefinity.Blogs.Model.Blog,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.#ctor(Telerik.Sitefinity.Blogs.Model.Blog,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,Telerik.Sitefinity.Blogs.Model.Blog,Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
            <param name="liveItem">The live blog related to the master blog.</param>
            <param name="tempItem">The temp blog related to the master blog.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.PostCount">
            <summary>
            Gets the number of posts in this blog
            </summary>
            <value>The number of posts in this blog.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.LastPostDate">
            <summary>
            Gets or sets the last post date.
            </summary>
            <value>The last post date.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.GetLive">
            <summary>
            Get live version of this.ContentItem using this.provider
            </summary>
            <returns>Live version of this.ContentItem</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.BlogViewModel.GetTemp">
            <summary>
            Get temp version of this.ContentItem using this.provider
            </summary>
            <returns>Temp version of this.ContentItem</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext">
            <summary>
            Collection context for blog posts
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext.#ctor(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlogPost})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext"/> class.
            </summary>
            <param name="items">The items of the collection.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext.NumOfAllPosts">
            <summary>
            Stats for the number of all blog post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext.NumOfMyPosts">
            <summary>
            Stats for the number of the post written by the current user
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext.NumOfDrafts">
            <summary>
            Stats for the number of posts that are "draft"
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext.NumOfPublished">
            <summary>
            Stats for the number of posts that are "published"
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogPostsCollectionContext.NumOfScheduled">
            <summary>
            Stats for the number of posts that are scheduled for future publishing
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogsCollectionContext">
            <summary>
            Collection context for the Blogs service
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogsCollectionContext.#ctor(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.BlogsCollectionContext"/> class.
            </summary>
            <param name="items">The items of the collection.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog">
            <summary>
            This item is returned by the Blogs service instead of blogs when returning a collection
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.Blog">
            <summary>
            The blog itself
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.Id">
            <summary>
            Shortcut for Blog.Id
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.Posts">
            <summary>
            Total number of blog posts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.LastPost">
            <summary>
            Specifies when the last blog post was written
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.LastComment">
            <summary>
            Specifies when the last comment was written
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.LastCommentAuthorName">
            <summary>
            Name of the lastest post's author
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.CommentsToday">
            <summary>
            Number of comments written today
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlog.Comments">
            <summary>
            Number of all comments in this blog
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlogPost">
            <summary>
            Combines a post with some custom statistics
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlogPost.Post">
            <summary>
            The Blog Post Iteself
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlogPost.Id">
            <summary>
            Id of the blog post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlogPost.Comments">
            <summary>
            Number of comments for this blog post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Blogs.Web.Services.Data.WebBlogPost.AuthorName">
            <summary>
            Name of the author of this blog post
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions.#cctor">
            <summary>
            Initializes the <see cref="T:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions.DefineBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for Calendars on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions.BackendDefinitionName">
            <summary>
            Name of the control definition used for defining <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.ContentView"/> control
            to manage calendars on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions.BackendListViewName">
            <summary>
            Name of the view used to display list of calendars on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions.BackendEditDetailsViewName">
            <summary>
            Name of the view used to edit calendars on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.CalendarsDefinitions.BackendInsertDetailsViewName">
            <summary>
            Name of the view used to instert calendars on the backend.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement">
            <summary>
            The configuration element for CalendarViewMasterElement
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.GetDefinition">
            <summary>
            Gets the definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.AllowChangeCalendarView">
            <summary>
            A value indicating whether to allow change calendar view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.AllowCreateEvents">
            <summary>
            A value indicating whether to allow create events.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.AllowCreateCalendars">
            <summary>
            A value indicating whether to allow create calendars.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.AllowCalendarExport">
            <summary>
            A value indicating whether to allow calendar export.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.DefaultCalendarView">
            <summary>
            A value indicating whether to allow create calendars.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.CalendarViewMasterElement.CalendarViewMasterProps">
            <summary>
            Constants to hold the string keys for configuration properties of DownloadListViewMasterElement
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsViewDetailElement">
            <summary>
            The configuration element for EventsViewDetailElement
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.EventsViewDetailElement.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsViewDetailElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.EventsViewDetailElement.GetDefinition">
            <summary>
            Gets the definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.EventsViewDetailElement.AllowCalendarExport">
            <summary>
            A value indicating whether to allow calendar export.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsViewDetailElement.EventsViewDetailProps">
            <summary>
            Constants to hold the string keys for configuration properties of EventsViewDetailDefinition
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsListViewMasterElement">
            <summary>
            The configuration element for EventsListViewMasterElement
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.EventsListViewMasterElement.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsListViewMasterElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.EventsListViewMasterElement.GetDefinition">
            <summary>
            Gets the definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.EventsListViewMasterElement.AllowCalendarExport">
            <summary>
            A value indicating whether to allow calendar export.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsListViewMasterElement.EventsListViewMasterProps">
            <summary>
            Constants to hold the string keys for configuration properties of EventsListViewMasterElement
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Configuration.EventsConfig">
            <summary>
            Provides configuration information about the events module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.EventsConfig.FirstDayOfWeek">
            <summary>
            Specifies the first day of the week for the calendar UI
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Configuration.EventsConfig.LastDayOfWeek">
            <summary>
            Specifies the last day of the week for the calendar UI
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.EventsConfig.InitializeDefaultProviders(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Configuration.DataProviderSettings})">
            <summary>
            Initializes the default providers.
            </summary>
            <param name="providers"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Configuration.EventsConfig.InitializeDefaultViews(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement})">
            <summary>
            Initializes the default views.
            </summary>
            <param name="contentViewControls"></param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventOccurrence">
            <summary>
            Represents a single occurrence of an event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.StartDate">
            <summary>
            Gets the start date/time of the occurrence
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.EndDate">
            <summary>
            Gets the end date/time of the occurrence
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.TimeZoneId">
            <summary>
            Gets the TimeZoneId of the occurrence
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.Title">
            <summary>
            Gets the title (name) of the occurrence
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.Description">
            <summary>
            Gets the description of the occurrence
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.Location">
            <summary>
            Gets the location of the occurrence 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.IsRecurrent">
            <summary>
            Gets whether the occurrence is part of given series of recurrence 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.Duration">
            <summary>
            Gets the duration of the occurrence
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventOccurrence.Event">
            <summary>
            Gets the event to which this occurrence applies
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsContentTransfer">
            <summary>
            Implements functionality for converting items from events content in transferable format.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.ItemsImporter">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.GetItemsQueries(Telerik.Sitefinity.Packaging.Content.ExportParams)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.Area">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.Delete(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsContentTransfer.DeleteItems(System.Type,System.Type,System.String,System.Collections.Generic.IList{System.Guid})">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsFilterStrategy.GetFiltersInternal(System.Type)">
            <summary>
            Gets all filters registered for specific item type from this strategy
            </summary>
            <param name="itemType">The item type</param>
            <returns>Available filters</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsStructureTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsStructureTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Model.Properties.EventDateUtcOffsetProperty">
            <summary>
            A calculated property for retrieving Event date UTC offset of items.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Model.Properties.EventDateUtcOffsetProperty.ReturnType">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Model.Properties.EventDateUtcOffsetProperty.GetValues(System.Collections.IEnumerable,Telerik.Sitefinity.Data.IManager)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.ICalEventExportHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.ICalEventExportHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.
            </summary>
            <returns>true if the <see cref="T:System.Web.IHttpHandler" /> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.ICalEventExportHandler.GetEventFromQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the event from query string.
            </summary>
            <param name="queryString">The query string.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Serialization.ICalDDayMapper">
            <summary>
            Class that handles the transfer between objects of types <see cref="T:Telerik.Sitefinity.Events.Model.Event"/> and <see cref="T:DDay.iCal.Event"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Serialization.ICalDDayMapper.MapFromSfEvent(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Creates an <see cref="T:DDay.iCal.Event"/> from <see cref="T:Telerik.Sitefinity.Events.Model.Event"/>.
            </summary>
            <param name="sitefinityEvent">The Sitefinity event.</param>
            <exception cref="T:System.ArgumentNullException">If passed Sitefinity event or calEvent is null.</exception>
            <returns>The iCalEvent.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Serialization.ICalSerializer">
            <summary>
            Class that handles serialization of events to iCal format
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Serialization.ICalSerializer.SerializeEvent(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Serializes the specified Sitefinity event.
            </summary>
            <param name="sitefinityEvent">The Sitefinity event.</param>
            <returns>iCal format string.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService">
            <summary>
            The WCF service used for working with items of type <see cref="T:Telerik.Sitefinity.Events.Model.Calendar"/>
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.GetCalendar(System.String,System.String)">
            <summary>
            Gets the single calendar and returns it in JSON format.
            </summary>
            <param name="calendarId">Id of the calendar that ought to be retrieved.</param>
            <param name="providerName">Name of the content provider that is to be used to retrieve the content item.</param>
            <returns>An instance of ItemContext that contains the calendar to be retrieved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.GetCalendarInXml(System.String,System.String)">
            <summary>
            Gets the single calendar and returns it in XML format.
            </summary>
            <param name="calendarId">Id of the calendar that ought to be retrieved.</param>
            <param name="providerName">Name of the content provider that is to be used to retrieve the content item.</param>
            <returns>
            An instance of ItemContext that contains the calendar to be retrieved.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.SaveCalendar(Telerik.Sitefinity.Web.Services.ItemContext{Telerik.Sitefinity.Events.Model.Calendar},System.String,System.String)">
            <summary>
            Saves the calendar and returns the saved content item in JSON format. If the calendar
            with the specified calendarId exists the calendar will be updated; otherwise new calendar will
            be created.
            </summary>
            <param name="context">The calendar object to be saved.</param>
            <param name="calendarId">The id of the calendar to be saved.</param>
            <param name="providerName">Name of the content provider that is to be used to save the calendar.</param>
            <returns>An instance of ItemContext that contains the calendar that was saved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.SaveCalendarInXml(Telerik.Sitefinity.Web.Services.ItemContext{Telerik.Sitefinity.Events.Model.Calendar},System.String,System.String)">
            <summary>
            Saves the calendar and returns the saved content item in JSON format. If the calendar
            with the specified calendarId exists the calendar will be updated; otherwise new calendar will
            be created.
            </summary>
            <param name="context">The calendar object to be saved.</param>
            <param name="calendarId">The id of the calendar to be saved.</param>
            <param name="providerName">Name of the content provider that is to be used to save the calendar.</param>
            <returns>An instance of ContentItemContext that contains the calendar that was saved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.GetCalendars(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets the collection of calendar objects and returns them in JSON format.
            </summary>
            <param name="sortExpression">Sort expression used to order the calendars in the result set.</param>
            <param name="skip">The number of items to skip before starting to take the items in the result set.</param>
            <param name="take">The number of items to take into the result set.</param>
            <param name="filter">Filter expression to be used to filter the items that will be taken into the result set.</param>
            <param name="providerName">Name of the content provider to be used to get the calendars.</param>
            <returns>An instance of CollectionContext object that contains the collection of <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.GetCalendarsInXml(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets the collection of calendar objects and returns them in XML format.
            </summary>
            <param name="sortExpression">Sort expression used to order the calendars in the result set.</param>
            <param name="skip">The number of items to skip before starting to take the items in the result set.</param>
            <param name="take">The number of items to take into the result set.</param>
            <param name="filter">Filter expression to be used to filter the items that will be taken into the result set.</param>
            <param name="providerName">Name of the content provider to be used to get the calendars.</param>
            <returns>An instance of CollectionContext object that contains the collection of <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.DeleteCalendar(System.String,System.String,System.String)">
            <summary>
            Deletes the calendar and returns true if the calendar has been deleted; otherwise false.
            Result is returned in JSON format.
            </summary>
            <param name="calendarId">Id of the calendar to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.DeleteCalendarInXml(System.String,System.String,System.String)">
            <summary>
            Deletes the calendar and returns true if the calendar has been deleted; otherwise false.
            Result is returned in XML format.
            </summary>
            <param name="calendarId">Id of the calendar to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.BatchDeleteCalendars(System.String[],System.String,System.String)">
            <summary>
            Deletes an array of calendars.
            Result is returned in JSON format.
            </summary>
            <param name="Ids">An array containing the Ids of the calendars to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarService.BatchDeleteCalendarsInXml(System.String[],System.String,System.String)">
            <summary>
            Deletes an array of calendars.
            Result is returned in Xml format.
            </summary>
            <param name="Ids">An array containing the Ids of the calendars to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.Events.Model.Calendar"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.#ctor(Telerik.Sitefinity.Events.Model.Calendar)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> class.
            </summary>
            <param name="calendar">The calendar.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.Title">
            <summary>
            Gets or sets the calendar title.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.Id">
            <summary>
            Gets or sets the calendar id.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.EventsCount">
            <summary>
            Gets or sets the events count.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.AvailableLanguages">
            <summary>
            Gets languages available for this item.
            </summary>
            <value>The available languages.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel.AdditionalStatus">
            <summary>
            Gets or sets the additional status.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.EventItemContext`1">
            <summary>
            Provides context information for event item that is exposed in a web service
            </summary>
            <typeparam name="T">Event type or inheritor</typeparam>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventItemContext`1.GoogleExportUrl">
            <summary>
            Gets or sets the URL used for exporting the event to Google Calendar.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService">
            <summary>
            The WCF service contract used for working with items of type <see cref="T:Telerik.Sitefinity.Events.Model.Calendar"/>
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.GetCalendar(System.String,System.String)">
            <summary>
            Gets the single calendar and returns it in JSON format.
            </summary>
            <param name="calendarId">Id of the calendar that ought to be retrieved.</param>
            <param name="providerName">Name of the content provider that is to be used to retrieve the content item.</param>
            <returns>An instance of ItemContext that contains the calendar to be retrieved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.GetCalendarInXml(System.String,System.String)">
            <summary>
            Gets the single calendar and returns it in XML format.
            </summary>
            <param name="calendarId">Id of the calendar that ought to be retrieved.</param>
            <param name="providerName">Name of the content provider that is to be used to retrieve the content item.</param>
            <returns>
            An instance of ItemContext that contains the calendar to be retrieved.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.SaveCalendar(Telerik.Sitefinity.Web.Services.ItemContext{Telerik.Sitefinity.Events.Model.Calendar},System.String,System.String)">
            <summary>
            Saves the calendar and returns the saved content item in JSON format. If the calendar
            with the specified contentId exists the calendar will be updated; otherwise new calendar will
            be created.
            </summary>
            <param name="context">The calendar object to be saved.</param>
            <param name="calendarId">The id of the calendar to be saved.</param>
            <param name="providerName">Name of the content provider that is to be used to save the calendar.</param>
            <returns>An instance of ItemContext that contains the calendar that was saved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.SaveCalendarInXml(Telerik.Sitefinity.Web.Services.ItemContext{Telerik.Sitefinity.Events.Model.Calendar},System.String,System.String)">
            <summary>
            Saves the calendar and returns the saved content item in JSON format. If the calendar
            with the specified contentId exists the calendar will be updated; otherwise new calendar will
            be created.
            </summary>
            <param name="context">The calendar object to be saved.</param>
            <param name="calendarId">The id of the calendar to be saved.</param>
            <param name="providerName">Name of the content provider that is to be used to save the calendar.</param>
            <returns>An instance of ContentItemContext that contains the calendar that was saved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.GetCalendars(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets the collection of calendar objects and returns them in JSON format.
            </summary>
            <param name="sortExpression">Sort expression used to order the calendars in the result set.</param>
            <param name="skip">The number of items to skip before starting to take the items in the result set.</param>
            <param name="take">The number of items to take into the result set.</param>
            <param name="filter">Filter expression to be used to filter the items that will be taken into the result set.</param>
            <param name="providerName">Name of the content provider to be used to get the calendars.</param>
            <returns>An instance of CollectionContext object that contains the collection of <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.GetCalendarsInXml(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets the collection of calendar objects and returns them in XML format.
            </summary>
            <param name="sortExpression">Sort expression used to order the calendars in the result set.</param>
            <param name="skip">The number of items to skip before starting to take the items in the result set.</param>
            <param name="take">The number of items to take into the result set.</param>
            <param name="filter">Filter expression to be used to filter the items that will be taken into the result set.</param>
            <param name="providerName">Name of the content provider to be used to get the calendars.</param>
            <returns>An instance of CollectionContext object that contains the collection of <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.DeleteCalendar(System.String,System.String,System.String)">
            <summary>
            Deletes the calendar and returns true if the calendar has been deleted; otherwise false.
            Result is returned in JSON format.
            </summary>
            <param name="calendarId">Id of the calendar to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.DeleteCalendarInXml(System.String,System.String,System.String)">
            <summary>
            Deletes the calendar and returns true if the calendar has been deleted; otherwise false.
            Result is returned in XML format.
            </summary>
            <param name="calendarId">Id of the calendar to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.BatchDeleteCalendars(System.String[],System.String,System.String)">
            <summary>
            Deletes an array of calendars.
            Result is returned in JSON format.
            </summary>
            <param name="Ids">An array containing the Ids of the calendars to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.ICalendarService.BatchDeleteCalendarsInXml(System.String[],System.String,System.String)">
            <summary>
            Deletes an array of calendars.
            Result is returned in Xml format.
            </summary>
            <param name="Ids">An array containing the Ids of the calendars to be deleted.</param>
            <param name="providerName">Name of the content provider to be used when deleting the item.</param>
            <param name="deletedLanguage">The language version to delete. If null, all versions are deleted(e.g. the item itself is deleted).</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService">
            <summary>
            Interface that defines the members of the service working with RadScheduler appointments.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.GetAppointments(Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo)">
            <summary>
            Gets the appointments corresponding to specified time period
            </summary>
            <param name="schedulerInfo">Contains the current time period and the timezone of the RadScheduler.</param>
            <example>
            <code lang="CS">
            	[WebMethod]
            	public SitefinitySchedulerOperationResult GetAppointments(SchedulerInfo schedulerInfo)
            	{
            	    var result = new SitefinitySchedulerOperationResult();
            	    result.Apointments = Controller.GetAppointments(schedulerInfo);
            		return result;
            	}
            </code>
            </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.InsertAppointment(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Inserts the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which contains the appointment properties.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; InsertAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData)
            {
            	return Controller.InsertAppointment(schedulerInfo, appointmentData);
            }
            </code>
            </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.UpdateAppointment(Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Updates the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period and the timezone of the RadScheduler.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which contains the appointment properties.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public SitefinitySchedulerOperationResult UpdateAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData)
            {
            	var result = new SitefinitySchedulerOperationResult();
            	result.Apointments = Controller.UpdateAppointment(schedulerInfo, appointmentData);
            	return result;
            }
            </code>
            </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.CreateRecurrenceException(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Creates a recurrence exception with the specified appointment data and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="recurrenceExceptionData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which contains the exception properties.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; CreateRecurrenceException(SchedulerInfo schedulerInfo, AppointmentData recurrenceExceptionData)
            {
            	return Controller.CreateRecurrenceException(schedulerInfo, recurrenceExceptionData);
            }
            </code>
            </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.RemoveRecurrenceExceptions(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Removes all recurrence exceptions of the specified recurrence master and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="masterAppointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> object which is the recurrence master.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; RemoveRecurrenceExceptions(SchedulerInfo schedulerInfo, AppointmentData masterAppointmentData)
            {
            	return Controller.RemoveRecurrenceExceptions(schedulerInfo, masterAppointmentData);
            }
            </code>
            </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.DeleteAppointment(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData,System.Boolean)">
            <summary>
            Deletes the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo"/> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData"/> which represents the apointment that shoud be deleted.</param>
            <param name="deleteSeries">Specified wether to delete the recurring series if the specified appointment is recurrence master.</param>
            <example>
            <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; DeleteAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData, bool deleteSeries)
            {
            	return Controller.DeleteAppointment(schedulerInfo, masterAppointmentData, deleteSeries);
            }
            </code>
            </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.GetResources(Telerik.Web.UI.SchedulerInfo)">
            <summary>
            Returns the resources of all appointments within the specified time period.
            </summary>
            <param name="schedulerInfo">The time period</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.GetCalendars(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets the collection of calendar objects and returns them in JSON format.
            </summary>
            <param name="sortExpression">Sort expression used to order the calendars in the result set.</param>
            <param name="skip">The number of items to skip before starting to take the items in the result set.</param>
            <param name="take">The number of items to take into the result set.</param>
            <param name="filter">Filter expression to be used to filter the items that will be taken into the result set.</param>
            <param name="providerName">Name of the content provider to be used to get the calendars.</param>
            <returns>An instance of CollectionContext object that contains the collection of <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel"/> items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.GetEvent(System.String,System.String)">
            <summary>
            Gets the event.
            </summary>
            <param name="eventId">The event id.</param>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.IRadSchedulerService.GetEventDetailsUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the event details URL.
            </summary>
            <param name="eventId">The event id.</param>
            <param name="detailsPageId">The details page id.</param>
            <param name="hostUrlKeyPrefix">The host URL key prefix.</param>
            <param name="providerName">Name of the provider.</param>
            <param name="virtualPath">The virtual path. It is used in multisite mode to get the actual site name.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService">
            <summary>
            Service that provides method for working with appointments.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetAppointments(Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo)">
             <summary>
             Gets the appointments corresponding to specified time period
             </summary>
             <param name="schedulerInfo">Contains the current time period</param>
             <returns></returns>
             <example>
               <code lang="CS">
             [WebMethod]
            public SitefinitySchedulerOperationResult GetAppointments(SchedulerInfo schedulerInfo)
             {
             var result = new SitefinitySchedulerOperationResult();
             result.Apointments = Controller.GetAppointments(schedulerInfo);
             return result;
             }
               </code>
               </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.InsertAppointment(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Inserts the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo" /> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData" /> object which contains the appointment properties.</param>
            <returns></returns>
            <example>
              <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; InsertAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData)
            {
            return Controller.InsertAppointment(schedulerInfo, appointmentData);
            }
              </code>
              </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.UpdateAppointment(Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Updates the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo" /> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData" /> object which contains the appointment properties.</param>
            <returns></returns>
            <example>
              <code lang="CS">
            [WebMethod]
            public SitefinitySchedulerOperationResult UpdateAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData)
            {
            var result = new SitefinitySchedulerOperationResult();
            result.Apointments = Controller.UpdateAppointment(schedulerInfo, appointmentData);
            return result;
            }
              </code>
              </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.CreateRecurrenceException(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Creates a recurrence exception with the specified appointment data and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo" /> object which contains the current time period.</param>
            <param name="recurrenceExceptionData">A <see cref="T:Telerik.Web.UI.AppointmentData" /> object which contains the exception properties.</param>
            <returns></returns>
            <example>
              <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; CreateRecurrenceException(SchedulerInfo schedulerInfo, AppointmentData recurrenceExceptionData)
            {
            return Controller.CreateRecurrenceException(schedulerInfo, recurrenceExceptionData);
            }
              </code>
              </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.RemoveRecurrenceExceptions(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData)">
            <summary>
            Removes all recurrence exceptions of the specified recurrence master and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo" /> object which contains the current time period.</param>
            <param name="masterAppointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData" /> object which is the recurrence master.</param>
            <returns></returns>
            <example>
              <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; RemoveRecurrenceExceptions(SchedulerInfo schedulerInfo, AppointmentData masterAppointmentData)
            {
            return Controller.RemoveRecurrenceExceptions(schedulerInfo, masterAppointmentData);
            }
              </code>
              </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.DeleteAppointment(Telerik.Web.UI.SchedulerInfo,Telerik.Web.UI.AppointmentData,System.Boolean)">
            <summary>
            Deletes the specified appointment and returns the available appointments.
            </summary>
            <param name="schedulerInfo">A <see cref="T:Telerik.Web.UI.ISchedulerInfo" /> object which contains the current time period.</param>
            <param name="appointmentData">A <see cref="T:Telerik.Web.UI.AppointmentData" /> which represents the apointment that shoud be deleted.</param>
            <param name="deleteSeries">Specified wether to delete the recurring series if the specified appointment is recurrence master.</param>
            <returns></returns>
            <example>
              <code lang="CS">
            [WebMethod]
            public IEnumerable&lt;AppointmentData&gt; DeleteAppointment(SchedulerInfo schedulerInfo, AppointmentData appointmentData, bool deleteSeries)
            {
            return Controller.DeleteAppointment(schedulerInfo, masterAppointmentData, deleteSeries);
            }
              </code>
              </example>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetResources(Telerik.Web.UI.SchedulerInfo)">
            <summary>
            Returns the resources of all appointments within the specified time period.
            </summary>
            <param name="schedulerInfo">The time period</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetCalendars(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets the collection of calendar objects and returns them in JSON format.
            </summary>
            <param name="sortExpression">Sort expression used to order the calendars in the result set.</param>
            <param name="skip">The number of items to skip before starting to take the items in the result set.</param>
            <param name="take">The number of items to take into the result set.</param>
            <param name="filter">Filter expression to be used to filter the items that will be taken into the result set.</param>
            <param name="providerName">Name of the content provider to be used to get the calendars.</param>
            <returns>
            An instance of CollectionContext object that contains the collection of <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.CalendarViewModel" /> items.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetEvent(System.String,System.String)">
            <summary>
            Gets the event.
            </summary>
            <param name="eventId">The event id.</param>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetEventDetailsUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the event details URL.
            </summary>
            <param name="eventId">The event id.</param>
            <param name="detailsPageId">The details page id.</param>
            <param name="hostUrlKeyPrefix">The host URL key prefix.</param>
            <param name="providerName">Name of the provider.</param>
            <param name="virtualPath">The virtual path. It is used in multisite mode to get the actual site name.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetAdjustment(System.TimeZoneInfo.AdjustmentRule[],System.Int32)">
            <summary>
            Gets the adjustment for a year.
            </summary>
            <param name="adjustments">The adjustment rules.</param>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetTransitionDate(System.TimeZoneInfo.TransitionTime,System.Int32)">
            <summary>
            Gets the transition date for a giver transition and year.
            </summary>
            <param name="transition">The transition.</param>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.GetTransitionTimes(System.Int32,System.String)">
            <summary>
            Gets the transition times for a given year and time zone.
            </summary>
            <param name="year">The year.</param>
            <param name="TimeZoneID">The time zone ID.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.RadSchedulerService.UpdateServiceResult(Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo,Telerik.Sitefinity.Modules.Events.Web.Services.SitefinitySchedulerOperationResult)">
            <summary>
            Updates the service result according to the current TimeZone. This method sets the StartDST, EndDST and DaylightDelta properties of the result object.
            We use this method because we need to workaround a missing feature from the RadScheduler - missing support for DST.
            </summary>
            <param name="schedulerInfo">The scheduler info.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinitySchedulerOperationResult">
            <summary>
            This class defines an operation result contract that can be optionally used by the web service methods.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinitySchedulerOperationResult.StartDST">
            <summary>
            Gets or sets the start of the DST for the current SitefinitySchedulerOperationResult.
            If the value of this property is null DST is not observed for the SitefinitySchedulerOperationResult.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinitySchedulerOperationResult.EndDST">
            <summary>
            Gets or sets the end of the DST for the current SitefinitySchedulerOperationResult.
            If the value of this property is null DST is not observed for the SitefinitySchedulerOperationResult.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinitySchedulerOperationResult.DaylightDelta">
            <summary>
            Gets or sets the daylight delta in milliseconds for the current SitefinitySchedulerOperationResult.
            The daylight delta is the difference between the UTC offset within the DST and the UTC offset outside of the DST.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.CalendarIds">
            <summary>
            Gets or sets the calendar ids.
            </summary>
            <value>
            The calendar ids.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.UiCulture">
            <summary>
            Gets or sets the UI culture.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.FilterExpression">
            <summary>
            Gets or sets the filter expression.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.SortExpression">
            <summary>
            Gets or sets the sort expression.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.EnableDescriptionField">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadScheduler.EnableDescriptionField">RadScheduler.EnableDescriptionField</see>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.MinutesPerRow">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadScheduler.MinutesPerRow">RadScheduler.MinutesPerRow</see>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.TimeZoneOffset">
            <summary>
            Time Zone Offset in milliseconds
            See <see cref="P:Telerik.Web.UI.RadScheduler.TimeZoneOffset">RadScheduler.TimeZoneOffset</see>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.ViewEnd">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadScheduler.VisibleRangeEnd">RadScheduler.VisibleRangeEnd</see>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.ViewStart">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadScheduler.VisibleRangeStart">RadScheduler.VisibleRangeStart</see>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.VisibleAppointmentsPerDay">
            <summary>
            Limit of visible appointments per day. A value of 0 means no limit.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.TimeZoneId">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadScheduler.TimeZoneID">RadScheduler.TimeZoneID</see>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.SitefinityShedulerInfo.UpdateMode">
            <summary>
            See <see cref="P:Telerik.Web.UI.RadScheduler.AppointmentUpdateMode"></see>
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.EventService">
            <summary>
            This web service is used to work with <see cref="T:Telerik.Sitefinity.Events.Model.Event"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetContentItems(System.String)">
            <summary>
            Gets the content of a specified type from the given provider.
            </summary>
            <param name="providerName">
            The provider from which the content ought to be retrieved.
            </param>
            <returns>Query of the content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetChildContentItems(System.Guid,System.String)">
            <summary>
            Gets the child content of a specified content item from the given provider.
            </summary>
            <param name="parentId">Id of the parent content for which the children ought to be retrieved.</param>
            <param name="providerName">The provider from which the content ought to be retrieved.</param>
            <returns>Query of the child content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetContentItem(System.Guid,System.String)">
            <summary>
            Gets a single content.
            </summary>
            <param name="id">Id of the content to be retrieved.</param>
            <param name="providerName">Name of the provider from which the content ought to be retrieved.</param>
            <returns>A single content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetParentContentItem(System.Guid,System.String)">
            <summary>
            Gets the parent content item.
            </summary>
            <param name="id">The id.</param>
            <param name="providerName">Name of the provider.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetManager(System.String)">
            <summary>
            Gets the manager to be used by the service. Concrete implementation of the service must provide this.
            </summary>
            <param name="providerName">Name of the provider with which the manager ought to be instantiated.</param>
            <returns>An instance of the manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Events.Model.Event},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Events.Model.Event},System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Events.Model.Event})">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <param name="liveItem">The dictionary  of live events related to the master events</param>
            <param name="tempItem">The dictionary  of temp events related to the master events</param>
            <returns>
            An enumerable of view model content objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Events.Model.Event},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <returns>An enumerable of view model content objects.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.SaveChildContent(Telerik.Sitefinity.Web.Services.ContentItemContext{Telerik.Sitefinity.Events.Model.Event},System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Saves the child content item and returns the saved child content item in JSON format. If the child
            content item with the specified pageId exists the content item will be updated; otherwise a new child
            content item will be created.
            </summary>
            <param name="content">The content object to be saved.</param>
            <param name="parentId">Id of the parent content item.</param>
            <param name="contentId">Id of the content item to be saved.</param>
            <param name="checkOut">Ignored.</param>
            <param name="published">Ignored.</param>
            <param name="version">Ignored.</param>
            <param name="providerName">Name of the content provider that is to be used to save the child content item.</param>
            <returns>An instance of ContentItemContext that contains the content item that was saved.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventService.SaveChildContentInXml(Telerik.Sitefinity.Web.Services.ContentItemContext{Telerik.Sitefinity.Events.Model.Event},System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Saves the child content item and returns the saved child content item in XML format. If the child
            content item with the specified pageId exists the content item will be updated; otherwise a new child
            content item will be created.
            </summary>
            <param name="content">The content object to be saved.</param>
            <param name="parentId">Id of the parent content item.</param>
            <param name="contentId">Id of the content item to be saved.</param>
            <param name="checkOut">Ignored.</param>
            <param name="published">Ignored.</param>
            <param name="version">Ignored.</param>
            <param name="providerName">Name of the content provider that is to be used to save the child content item.</param>
            <returns>An instance of ContentItemContext that contains the content item that was saved.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.Events.Model.Event"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.#ctor(Telerik.Sitefinity.Events.Model.Event,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Initializes a new instance of the <see cref="!:BlogPostViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.#ctor(Telerik.Sitefinity.Events.Model.Event,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,Telerik.Sitefinity.Events.Model.Event,Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
            <param name="liveItem">The live event related to the master event.</param>
            <param name="tempItem">The temp event related to the master event.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.EventStart">
            <summary>
            Gets or sets the start date/time of the event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.EventEnd">
            <summary>
            Gets or sets the end date/time of the event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.EventStartUtcOffset">
            <summary>
            Gets or sets the Utc offset of the event start in respect to the TimeZoneId property.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.EventEndUtcOffset">
            <summary>
            Gets or sets the Utc offset of the event end in respect to the TimeZoneId property.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.CalendarTitle">
            <summary>
            Gets or sets the calendar title.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.CalendarColor">
            <summary>
            Gets or sets the color of the calendar.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.ParentId">
            <summary>
            Gets or sets the parent id.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.AllDayEvent">
            <summary>
            Gets or sets whether the current event lasts during the whole day
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.GetLive">
            <summary>
            Get live version of this.ContentItem using this.provider
            </summary>
            <returns>Live version of this.ContentItem</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.Services.EventViewModel.GetTemp">
            <summary>
            Get temp version of this.ContentItem using this.provider
            </summary>
            <returns>Temp version of this.ContentItem</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.NewCalendarButton">
            <summary>
            Gets the reference to the new calendar button.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.Wrapper">
            <summary>
            Gets the reference to the span wrapper tag.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.CalendarTitleTextField">
            <summary>
            Gets the reference to the calendar title text field.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.ColorPicker">
            <summary>
            Gets the reference to the calendar title text field.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.CreateCalendarButton">
            <summary>
            Gets the reference to the create calendar button.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.CancelButton">
            <summary>
            Gets the reference to the cancel button.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference" /> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.GetRequiredCoreScripts" -->
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.AddCalendarSection.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventAddDialog.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventAddDialog.GetScriptDescriptors">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventAddDialog.GetScriptReferences">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.AllowDeleteCalendar">
            <summary>
            Gets or sets a value indicating whether [allow delete calendar].
            </summary>
            <value>
              <c>true</c> if [allow delete calendar]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.CalendarsListWrapper">
            <summary>
            Gets the reference to the wrapper of the <see cref="T:System.Web.UI.WebControls.Repeater"/> that lists the available
            calendars.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference" /> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.GetRequiredCoreScripts" -->
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsCheckBoxList.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventEditDialog.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventEditDialog.GetScriptDescriptors">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventEditDialog.GetScriptReferences">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView">
            <summary>
            A <see cref="T:Telerik.Sitefinity.Web.UI.SelectorResultView"/> control that works with date ranges.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.UICulture">
            <summary>
            Gets or sets the UI culture used by the client manager.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>
            The name of the provider.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.ChooseButtonTextControl">
            <summary>
            Gets the choose button control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.CalendarSelector">
            <summary>
            Gets the control that selects calendars.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The container.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarsSelectorResultView.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition">
            <summary>
            A definition class containing all information needed to construct an instance of the respective detail view control.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition"/> class.
            </summary>
            <param name="configDefinition">The config definition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition.GetDefinition">
            <summary>
            Gets the definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsViewDetailDefinition.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporterHelper">
            <summary>
            Helper class for Google events export operations
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporterHelper.GenerateGoogleUrl(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Generates Google export URL for event
            </summary>
            <param name="eventToExport">The event</param>
            <returns>Google event URL</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.GenerateICalUrl(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Generates the event ICal url.
            </summary>
            <param name="eventToExport">The event to export.</param>
            <returns>The event ICal url.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.ShowIcon">
            <summary>
            Gets or sets a value indicating whether the icon is to be shwon.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.Title">
            <summary>
            The title of the control. 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.ExportEventLink">
            <summary>
            Gets the reference to the link of the export event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.ExportEventImage">
            <summary>
            Gets the reference to the image.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.ICalEventExporter.Initialize(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes the control with the specified event.
            </summary>
            <param name="sfEvent">The event.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.EventToExport">
            <summary>
            Gets or sets the event to export.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.ShowExportControls">
            <summary>
            Gets or sets a value indicating whether the export controls are to be shown.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.ShowIcons">
            <summary>
            Gets or sets a value indicating whether the icons of the export controls are to be shown.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.Wrapper">
            <summary>
            Gets the reference to the label wrapper control.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.EventExporterWidget.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.ShowIcon">
            <summary>
            Gets or sets a value indicating whether the icon is to be shwon.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.ExportEventLink">
            <summary>
            Gets the reference to the link of the export event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.ExportEventImage">
            <summary>
            Gets the reference to the image.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.GoogleEventExporter.Initialize(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes the control with the specified event.
            </summary>
            <param name="sfEvent">The event.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.GenerateOutlookUrl(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Generates the event Outlook export url.
            </summary>
            <param name="eventToExport">The event to export.</param>
            <returns>The event Outlook export url.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.ShowIcon">
            <summary>
            Gets or sets a value indicating whether the icon is to be shwon.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.Title">
            <summary>
            The title of the control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.ExportEventLink">
            <summary>
            Gets the reference to the link of the export event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.ExportEventImage">
            <summary>
            Gets the reference to the image.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Export.OutlookEventExporter.Initialize(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes the control with the specified event.
            </summary>
            <param name="sfEvent">The event.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.IEventsViewDetailDefinition">
            <summary>
            Declares the contract for the base ContentViewMaster. Implemented by each detail view and the configuration element for the view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.IEventsViewDetailDefinition.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition">
            <summary>
            A definition class containing all information needed to construct an instance of the respective master view control.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition"/> class.
            </summary>
            <param name="configDefinition">The config definition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition.GetDefinition">
            <summary>
            Gets the definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsListViewMasterDefinition.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.IEventsListViewMasterDefinition">
            <summary>
            Declares the contract for the base ContentViewMaster. Implemented by each master view and the configuration element for the view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.IEventsListViewMasterDefinition.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector">
            <summary>
            represents the list view designer
            TODO: register script resources
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.MasterViewNameText">
            <summary>
            Gets or sets the master view name text.
            </summary>
            <value>The master view name text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.CreateNewTemplateLinkText">
            <summary>
            Gets or sets the create new template link text.
            </summary>
            <value>The create new template link text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.DesignedMasterViewType">
            <summary>
            The type name of the view used to display the designed control in master mode.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.ModifyWidgetTemplatePermission">
            <summary>
            Gets whether the user has the permissions to modify the widget templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.MasterViewNameList">
            <summary>
            Gets the choice field listing all possible layout templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.TemplateTitle">
            <summary>
            Gets the Label control representing the title of the selected control template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.EditTemplateLink">
            <summary>
            Gets the link that opens up the dialog for editing the currently selected control template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.CreateTemplateLink">
            <summary>
            Gets the link that opens up the dialog for creating a new control template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.RadWindowManager">
            <summary>
            Gets the correct instance of RadWindowManager
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.GetRequiredCoreScripts" -->
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsTemplateSelector.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.MainFilterSelector">
            <summary>
            Gets the main filter selector.
            </summary>
            <value>The main filter selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.MainContentFilterSelector">
            <summary>
            Gets the content filter selector.
            </summary>
            <value>The content filter selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.SelectorTag">
            <summary>
            Gets the jQuery UI dialog which shows "Choose event" dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.Parent">
            <summary>
            Gets a reference to the server control's parent control in the page control hierarchy.
            </summary>
            <returns>A reference to the server control's parent control.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The container.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSettingsDesignerView.ConfigureMainFilterSelector">
            <summary>
            Sets the query items for each of the main filters
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ViewName">
            <summary>
            Gets the name of the view.
            </summary>
            <value>The name of the view.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ViewTitle">
            <summary>
            Gets the view title.
            </summary>
            <value>The view title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ModifyWidgetTemplatePermission">
            <summary>
            Gets whether the user has the permissions to modify the widget templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.SelectedPageText">
            <summary>
            Gets or sets the selected page text.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.SelectedContentTitleText">
            <summary>
            Gets or sets the selected content title text.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ModeRadioButtons">
            <summary>
            Gets the mode radio buttons.
            </summary>
            <value>The mode radio buttons.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.MultiPage">
            <summary>
            Gets the RadMultiPage containing all panels for the different modes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ListContentSettings">
            <summary>
            Gets the RadMultiPage containing all panels for the different modes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ListSettings">
            <summary>
            Gets the RadMultiPage containing all panels for the different modes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarOptionList">
            <summary>
            Gets a reference to the li tag that wraps the optional 3rd choice in the main radio buttons.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarLinkList">
            <summary>
            Gets the counter detail link.
            </summary>
            <value>The counter detail link.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarDetailList">
            <summary>
            Gets the counter detail container.
            </summary>
            <value>The counter detail container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ListTemplatesSectionButton">
            <summary>
            Gets the button for paging section.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ListTemplatesSection">
            <summary>
            Gets the narrow paging section container.
            </summary>
            <value>The paging selection container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ListTemplatesSelector">
            <summary>
            Gets the EventsTemplateSelector control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.ListSingleItemTS">
            <summary>
            Gets the EventsTemplateSelector control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.OpenInCurrentPageRadioChoice">
            <summary>
            Gets the item page setting_current page.
            </summary>
            <value>The item page setting_current page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.SingleItemSettings">
            <summary>
            Gets the RadMultiPage containing all panels for the different modes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.SingleTemplatesSectionButton">
            <summary>
            Gets the button for paging section.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.SingleTemplatesSection">
            <summary>
            Gets the narrow paging section container.
            </summary>
            <value>The paging selection container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.SingleItemTS">
            <summary>
            Gets the EventsTemplateSelector control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarOptionSingle">
            <summary>
            Gets a reference to the li tag that wraps the optional 3rd choice in the main radio buttons.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarLinkSingle">
            <summary>
            Gets the counter detail link.
            </summary>
            <value>The counter detail link.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarDetailSingle">
            <summary>
            Gets the counter detail container.
            </summary>
            <value>The counter detail container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarContentSettings">
            <summary>
            Gets the RadMultiPage containing all panels for the different modes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarOptionCalendar">
            <summary>
            Gets a reference to the li tag that wraps the optional 3rd choice in the main radio buttons.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarLinkCalendar">
            <summary>
            Gets the counter detail link.
            </summary>
            <value>The counter detail link.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AddToCalendarDetailCalendar">
            <summary>
            Gets the counter detail container.
            </summary>
            <value>The counter detail container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarTemplatesSectionButton">
            <summary>
            Gets the button for paging section.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarTemplatesSection">
            <summary>
            Gets the narrow paging section container.
            </summary>
            <value>The paging selection container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarItemTS">
            <summary>
            Gets the EventsTemplateSelector control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarSingleItemPage">
            <summary>
            Gets the page fiedl control
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarAppearanceSectionButton">
            <summary>
            Gets the button for expanding Calendar appearance section.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarAppearanceSection">
            <summary>
            Gets the Calendar appearance section.
            </summary>
            <value>The paging selection container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AllowCreateEvents">
            <summary>
            Gets a reference to Allow Create Events choice field.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AllowCreateCalendars">
            <summary>
            Gets a reference to Allow Create Calendars choice field.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.CalendarDefaultView">
            <summary>
            Gets a reference to Change calendar view choice field.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.AllowChangeCalendarView">
            <summary>
            Gets a reference to Allow Change Calendar view field.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.RadWindowManager">
            <summary>
            Gets the correct instance of RadWindowManager
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.InitView(Telerik.Sitefinity.Web.UI.ControlDesign.ControlDesignerBase)">
            <summary>
            Inits the view.
            </summary>
            <param name="ParentDesigner">The parent designer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.GetSelectedDetailItem">
            <summary>
            Gets the detail item that was selected
            </summary>
            <returns>null if the item was deleted</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSettingsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView">
            <summary>
            Represents the list view designer
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.PagingText">
            <summary>
            Gets or sets the paging text.
            </summary>
            <value>The paging text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.DividePagesText">
            <summary>
            Gets or sets the divide pages text.
            </summary>
            <value>The divide pages text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.TotalLimitText">
            <summary>
            Gets or sets the total limit text.
            </summary>
            <value>The total limit text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.ListLimitText">
            <summary>
            Gets or sets the list limit text.
            </summary>
            <value>The list limit text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.SortItemsText">
            <summary>
            Gets or sets the sort items text.
            </summary>
            <value>The sort items text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.DesignedMasterViewType">
            <summary>
            The type name of the view used to display the designed control in master mode.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.ViewName">
            <summary>
            Gets the name of the view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.ViewTitle">
            <summary>
            Gets the view title.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.ListLimitControl">
            <summary>
            Gets a refernce to the list limit control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.SortExpressionControl">
            <summary>
            Gets a reference to the sort expression control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.RadWindowManager">
            <summary>
            Gets the correct instance of RadWindowManager
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.ItemsPerPageCustomFieldsPanel">
            <summary>
            Gets a reference to the items per page custom fields panel.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.PagingSectionButton">
            <summary>
            Gets the button for paging section.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.PagingSection">
            <summary>
            Gets the narrow paging section container.
            </summary>
            <value>The paging selection container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.CountersDetailsLink">
            <summary>
            Gets the counter detail link.
            </summary>
            <value>The counter detail link.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.CountersDetails">
            <summary>
            Gets the counter detail container.
            </summary>
            <value>The counter detail container.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.PagingLabel">
            <summary>
            Gets a reference to the paging label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.DividePagesLabel">
            <summary>
            Gets a reference to the divide pages label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.TotalLimitLabel">
            <summary>
            Gets a reference to the total limit label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.ListLimitLabel">
            <summary>
            Gets a reference to the list limit label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.SortItemsLabel">
            <summary>
            Gets a reference to the sort items label.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.GetRequiredCoreScripts" -->
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsListSettingsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView">
            <summary>
            Represents the single item designer
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ViewName">
            <summary>
            Gets the name of the view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ViewTitle">
            <summary>
            Gets the view title.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.DesignedDetailViewType">
            <summary>
            The type name of the view used to display the designed control in details mode.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.SelectedContentTitleText">
            <summary>
            Gets or sets the selected content title text.
            </summary>
            <value>The selected content title text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.NoSingleItemSelectedLabel">
            <summary>
            No single item selected label, shown when there is no item selected in front of the single item selector
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ContentSelectorTitle">
            <summary>
            Gets or sets the content selector title.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ContentSelectorItemTypeName">
            <summary>
            Gets or sets the name of the content selector item type.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ContentSelectorFilter">
            <summary>
            Gets or sets the content selector filter.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.AddCultureToFilter">
            <summary>
            Gets or sets a value indicating whether to add the culture of the property editor to the filter.
            </summary>
            <value><c>true</c> if the culture will be added to the filter; otherwise, <c>false</c>.</value>
            <remarks>
            If not set a value, the property will return the value of the <see cref="M:Telerik.Sitefinity.Model.IAppSettings.Multilingual"/>.;
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ProvidersSelector">
            <summary>
            Gets the providers selector control.
            </summary>
            <value>The providers selector control.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.Parent">
            <summary>
            Gets or sets the parent designer.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.SelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Choose event" dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.ContentSelector">
            <summary>
            Gets the single item content selector control. example - news selector or events selector
            </summary>
            <value>The content selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.RadioChoiceAll">
            <summary>
            Gets the radio choice for 'show all items'.
            </summary>
            <value>The radio choice all.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.RadioChoiceSingle">
            <summary>
            Gets the radio choice for 'sjow singleitem'.
            </summary>
            <value>The radio choice single.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.SelectedContentLabel">
            <summary>
            Gets the selected content label.
            </summary>
            <value>The selected content label.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.SelectContentButtonWrapper">
            <summary>
            Gets a reference to btnSelectSingleItemWrapper control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.SelectContentButton">
            <summary>
            Gets the select signle item button.
            </summary>
            <value>The select content button.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.GetRequiredCoreScripts" -->
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsSingleItemSettingsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.ContentTitleCssClass">
            <summary>
            Gets or sets the css class of the content selector title.
            </summary>
            <value>The css class of the content title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.AllowMultipleSelection">
            <summary>
            Gets or sets a value indicating whether multiple calendars can be selected. By default <c>true</c>.
            </summary>
            <value>
            	<c>true</c> if multiple calendars can be selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.DisableNarrowSelection">
            <summary>
            Gets or sets a value indicating whether the narrow selection functinality is disabled (hidden)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.ChoicesTitleHeading">
            <summary>
            Gets the radio choices title literal parent.
            </summary>
            <value>The choices title heading.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.SelectParentButton">
            <summary>
            Gets the button events.
            </summary>
            <value>The button events.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.ParentContentSelector">
            <summary>
            Gets or sets the events content selector.
            </summary>
            <value>The events content selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.SelectedParentLabel">
            <summary>
            Gets or sets the selected event title.
            </summary>
            <value>The selected event title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.EventsManager">
            <summary>
            Gets the events manager.
            </summary>
            <value>The events manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.SelectedParentLabelText">
            <summary>
            Gets or sets the selected parent content title text.
            </summary>
            <value>The selected parent content title text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.ParentSelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Choose item" dialog
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.InitView(Telerik.Sitefinity.Web.UI.ControlDesign.ControlDesignerBase)">
            <summary>
            Initializes the view.
            </summary>
            <param name="designer"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.ShowCalendar(System.Guid)">
            <summary>
            Shows the title of the selected calendar or a warning if it was deleted.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.CheckForNoCalendars">
            <summary>
            Checks if no calendars were created 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Designers.EventsContentSelectorsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition">
            <summary>
            A definition class containing all information needed to construct an instance of the respective master view control.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition"/> class.
            </summary>
            <param name="configDefinition">The config definition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.GetDefinition">
            <summary>
            Gets the definition.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.AllowChangeCalendarView">
            <summary>
            Allow users to change view mode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.AllowCreateEvents">
            <summary>
            Allow users to create events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.AllowCreateCalendars">
            <summary>
            Allow users to create calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarViewMasterDefinition.DefaultCalendarView">
            <summary>
            Gets or sets the Default calendar view mode
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.ICalendarViewMasterDefinition">
            <summary>
            Declares the contract for the base ContentViewMaster. Implemented by each master view and the configuration element for the view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ICalendarViewMasterDefinition.AllowChangeCalendarView">
            <summary>
            Allow users to change view mode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ICalendarViewMasterDefinition.AllowCreateEvents">
            <summary>
            Allow users to create events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ICalendarViewMasterDefinition.AllowCreateCalendars">
            <summary>
            Allow users to create calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ICalendarViewMasterDefinition.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ICalendarViewMasterDefinition.DefaultCalendarView">
            <summary>
            Gets or sets the Default calendar view mode.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView">
            <summary>
            Control that displays a tooltip for recurrent event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.DataItem">
            <summary>
            Gets the data item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.FrequencyLiteral">
            <summary>
            Gets the frequency literal.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.StartTimeLiteral">
            <summary>
            Gets the start time literal.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.EndTimeLiteral">
            <summary>
            Gets the end time literal.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.StartTimeParagraph">
            <summary>
            Gets the start time paragraph.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.EventDates">
            <summary>
            Gets the dates paragraph.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.TimeZoneParagraph">
            <summary>
            Gets the timezone paragraph.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.StartsAt">
            <summary>
            Gets the event start date.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.EndsAt">
            <summary>
            Gets the event end date.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.TimeZoneLiteral">
            <summary>
            Gets the User's TimeZone display name.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Remove the outer span on the control
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.RecurrenceTooltipView.SetFrequencyLiteral(Telerik.Sitefinity.RecurrentRules.RecurrenceInfo)">
            <summary>
            Sets the frequency literal.
            </summary>
            <param name="recurrenceDescriptor">The recurrence descriptor.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView">
            <summary>
            View that displays events in calendar.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.MasterDefinition">
            <summary>
            Gets the master definition.
            </summary>
            <value>The master definition.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>
            The name of the provider.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>
            The layout template path.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.ScriptDescriptorTypeName">
            <summary>
            The script control type name passed to the <see cref="T:System.Web.UI.ScriptControlDescriptor"/>. It defaults to the full name
            of the current object class. E.g. can be overriden to reuse the script of some of the base classes and just customize
            some controls server-side.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.AllowChangeCalendarView">
            <summary>
            Allow users to change view mode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.AllowCreateEvents">
            <summary>
            Allow users to create events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.AllowCreateCalendars">
            <summary>
            Allow users to create calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.DefaultCalendarView">
            <summary>
            Gets or sets the Default calendar view mode.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.FilterExpression">
            <summary>
            Gets or sets the filter expression.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.SortExpression">
            <summary>
            Gets or sets the sort expression for the list of items
            </summary>
            <value>The sort expression.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.WindowManager">
            <summary>
            Gets the reference to RadWindowManager.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.Scheduler">
            <summary>
            Gets the reference to RadScheduler.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.CalendarEventAddDialog">
            <summary>
            Gets the reference to Quick add event window.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.CalendarEventEditDialog">
            <summary>
            Gets the reference to Quick add event window.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.AddEventDialog">
            <summary>
            Gets the reference to Add event window.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.EditEventDialog">
            <summary>
            Gets the reference to Add event window.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.ViewEventDialog">
            <summary>
            Gets the reference to edit event window.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.CreateEventButton">
            <summary>
            Gets the reference to the create event button.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.CalendarsList">
            <summary>
            Gets the reference to the <see cref="!:ChoiceField"/> that lists the available
            calendars.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.CreateCalendarSection">
            <summary>
            Gets the reference to the <see cref="!:ChoiceField"/> that lists the available
            calendars.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference" /> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.GetRequiredCoreScripts" -->
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.CalendarView.EvaluateUrl">
            <summary>
            Evaluates the URL.
            </summary>        
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView">
            <summary>
            Displays a single event on the public side
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.SingleItemContainer">
            <summary>
            Reference to the control that binds to the data item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.SingleItemContainer_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemDataBound event of the SingleItemContainer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.DetailsView.SingleItemContainer_ItemCreated(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemCreated event of the SingleItemContainer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView">
            <summary>
            Displays a list of events on the public side
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.EventsList">
            <summary>
            Reference to the control in the template that is responsible for listing event items
            </summary>        
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.Pager">
            <summary>
            Gets the pager.
            </summary>
            <value>The pager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.InitializeListView(System.Linq.IQueryable{Telerik.Sitefinity.Events.Model.Event},System.Nullable{System.Int32})">
            <summary>
            Initializes the list view control with the items specified in the query.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.GetItemsList(System.Nullable{System.Int32}@)">
            <summary>
            Gets the items list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.EventsList_ItemCreated(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemCreated event of the EventsList control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.Public.MasterView.Item_DataBinding(System.Object,System.EventArgs)">
            <summary>
            Handles the DataBinding event of the Item control of the EventsList control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog">
            <summary>
            Dialog for editing the event and exporting in iCal format.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.OuterDiv">
            <summary>
            Gets a reference to the outer div containing the window content.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.DetailsPageId">
            <summary>
            Gets or sets the details page id.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.AllowCalendarExport">
            <summary>
            Allow users to export calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.HostUrlKeyPrefix">
            <summary>
            Gets or sets the URL key prefix. Used when building or evaluating URLs for paging and filtering
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container"></param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference" /> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.
            </returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.TitleLink">
            <summary>
            Gets the reference to the title link control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.StartDateLabel">
            <summary>
            Gets a reference to the start date label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.StartTimeLabel">
            <summary>
            Gets a reference to the start date label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.TimeZoneDisplayNameLabel">
            <summary>
            Gets a reference to the timezone display name label.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.EditEventWrapper">
            <summary>
            Gets the hyper link used to go to the CalendarEventEditDialog 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.EditEventButton">
            <summary>
            Gets the hyper link used to go to the CalendarEventEditDialog 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.ExportDiv">
            <summary>
            Gets a reference to the export div.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.ExportToGoogleLink">
            <summary>
            Gets a reference to the export to Google link.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.ExportToOutlookLink">
            <summary>
            Gets a reference to the export to outlook link.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.ViewEventDialog.ExportToICalLink">
            <summary>
            Gets a reference to the export to ICal link.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.ClientComponentType">
            <summary>
            Gets the type of the client component.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.DialogToShowKey">
            <summary>
            The key for opening the corresponding dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.LayoutTemplatePath">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>
            The name of the provider.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.EventId">
            <summary>
            Gets or sets the event id.
            </summary>
            <value>
            The event id.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.GetScriptReferences">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.GetScriptDescriptors">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.GetRequiredCoreScripts" -->
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.MoreDetailsButton">
            <summary>
            Gets the reference to the <see cref="T:System.Web.UI.WebControls.HyperLink"/>, used to open a new dialog.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.EventTitle">
            <summary>
            Gets the reference to the <see cref="T:Telerik.Sitefinity.Web.UI.Fields.TextField"/> that holds the 
            title of the event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.CalendarsList">
            <summary>
            Gets the calendars list.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.AllDayEvent">
            <summary>
            Gets the reference to the <see cref="T:Telerik.Sitefinity.Web.UI.Fields.ChoiceField"/> that specifies weather the event
            is an all day event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.EventStart">
            <summary>
            Gets the reference to the <see cref="T:Telerik.Sitefinity.Web.UI.Fields.DateField"/> that holds the event
            start date.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.EventEnd">
            <summary>
            Gets the reference to the <see cref="T:Telerik.Sitefinity.Web.UI.Fields.DateField"/> that holds the event
            end date.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.EventTimeZoneId">
            <summary>
            Gets the reference to the <see cref="T:Telerik.Sitefinity.Web.UI.Fields.TextField"/> that holds the event timezone id.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.CancelButton">
            <summary>
            Gets the reference to the <see cref="T:System.Web.UI.WebControls.HyperLink"/>, used to cancel the event creation/edit.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.TitleLabel">
            <summary>
            Gets the reference to the Label that holds the CreateEvent Text.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.SubmitButton">
            <summary>
            Gets the reference to the button for create/edit.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.DeleteButton">
            <summary>
            Gets the reference to the button for delete.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.MessageControl">
            <summary>
            Gets a reference to the message control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.CalendarEventDialog.ClientLabelManager">
            <summary>
            Gets a reference to the message control.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView">
            <summary>
            Master view controller for the Events module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.Item">
            <summary>
            Get/set the event data item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.ModuleName">
            <summary>
            Gets or sets the name of the module which initialization should be ensured prior to rendering this control.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.ViewMode">
            <summary>
            Gets or sets the view mode of the control.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.SingleViewMode">
            <summary>
            Gets or sets the single view mode of the control.
            </summary>
            <value>
            The single view mode.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.ControlDefinitionName">
            <summary>
            Gets or sets the name of the configuration definition for the whole control. From this definition
            control can find out all other configurations needed in order to construct views.
            </summary>
            <value>The name of the control definition.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.MasterViewName">
            <summary>
            Gets or sets the name of the master view to be loaded when
            control is in the ContentViewDisplayMode.Master
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.CalendarViewName">
            <summary>
            Gets or sets the name of the master view to be loaded when
            control is in the ContentViewDisplayMode.Master
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.DetailViewName">
            <summary>
            Gets or sets the name of the detail view to be loaded when
            control is in the ContentViewDisplayMode.Detail
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.EmptyLinkText">
            <summary>
            Gets or sets the text to be shown when the box in the designer is empty
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.DateEvaluatorPropertyName">
            <summary>
            Gets or sets the property name used to build the filter expression when evaluating URLs by date. The default value is EventStart.
            </summary>
            <value>The property name used to build the filter expression when evaluating URLs by date.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.CalendarViewDefinition">
            <summary>
            Gets the definition for the calendar view specified through the
            CalendarViewName property.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Web.UI.EventsView.Title">
            <summary>
            Gets or sets the title of the control.
            </summary>
            <value>The title of the control.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.EventViewModes">
            <summary>
            Available event view modes
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Web.UI.SingleViewMode">
            <summary>
            Available event single view modes
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Data.EventsMetadataSource">
            <summary>
            This class implements the Events module OpenAccess data provider ORM mappings
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.EventsMetadataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Data.EventsMetadataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.EventsMetadataSource.#ctor(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.Data.EventsMetadataSource"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.EventsMetadataSource.BuildCustomMappings">
            <summary>
            Builds the custom mappings for the data provider.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider">
            <summary>
            Implements the Events module data layer with OpenAccess
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.CreateEvent">
            <summary>
            Creates a new event and chooses a random identity.
            </summary>
            <returns>The newly created Event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.CreateEvent(System.Guid)">
            <summary>
            Creates a new event with the given identity
            </summary>
            <param name="pageId">Identity of the event to create.</param>
            <returns>The created event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.GetEvent(System.Guid)">
            <summary>
            Search for an Event by its ID
            </summary>
            <param name="pageId">The pageId of the event to search for.</param>
            <returns>The event with the specified pageId</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.GetEvents">
            <summary>
            Gets a query for all Events
            </summary>
            <returns>An IQueriable object for all events</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.Delete(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Mark an event for removal.
            </summary>
            <param name="eventToDelete">The event to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.GetMetaDataSource(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Gets the meta data source.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.Context">
            <summary>
            Gets or sets the OpenAccess context. Alternative to Database.
            </summary>
            <value>The context.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.CurrentSchemaVersionNumber">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.OnUpgrading(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.Data.OpenAccessEventProvider.OnUpgraded(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsDataProvider">
            <summary>
            An abstract base provider for the events module
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateCalendar">
            <summary>
            Create a new <c>Calendar</c> and choose a random identity
            </summary>
            <returns>Created <c>Calendar</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateCalendar(System.Guid)">
            <summary>
            Create a new <c>Calendar</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>Calendar</c> identity</param>
            <returns>Created <c>Calendar</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetCalendars">
            <summary>
            Get a queryable object for all calendars
            </summary>
            <returns>Queryable object for all calendars</returns>     
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetCalendar(System.Guid)">
            <summary>
            Search for a Calendar by its identity
            </summary>
            <param name="id">Searched Calendar identity</param>
            <returns>Found Calendar, or <c>null</c> if not found.</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.Delete(Telerik.Sitefinity.Events.Model.Calendar)">
            <summary>
            Mark a Calendar for removal
            </summary>
            <param name="calendarToDelete">The Calendar to delete.</param>       
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetParentTypeFor(System.Type)">
            <summary>
            Override this method in order to return the type of the Parent object of the specified content type.
            If the type has no parent type, return null.
            </summary>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetParentType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetParent(Telerik.Sitefinity.Model.IDataItem)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateEvent">
            <summary>
            Creates a new event and chooses a random identity.
            </summary>
            <returns>The newly created Event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateEvent(System.Guid)">
            <summary>
            Creates a new event with the given identity
            </summary>
            <param name="pageId">Identity of the event to create.</param>
            <returns>The created event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetEvents">
            <summary>
            Gets a query for all Events
            </summary>
            <returns>An IQueriable object for all events</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetEvent(System.Guid)">
            <summary>
            Search for an Event by its ID
            </summary>
            <param name="id">The id of the event to search for.</param>
            <returns>The event with the specified id</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.Delete(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Mark an event for removal.
            </summary>
            <param name="eventToDelete">The event to delete.</param>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetItemsByTaxon(System.Guid,System.Boolean,System.String,System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the items by taxon.
            </summary>
            <param name="taxonId">The taxon pageId.</param>
            <param name="isSingleTaxon"></param>
            <param name="propertyName">Name of the property.</param>
            <param name="itemType">Type of the item.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="orderExpression">The order expression.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">The total count.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsDataProvider.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            To be overridden by relevant providers (which involve security roots)
            </summary>
            <value>The supported permission sets.</value>
            <remarks>
            Default supported permission sets for the Events module are General and SitemapGeneration.
            General is used for Event items and SitemapGeneration is used for view the event link in menu.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.SetRootPermissions(Telerik.Sitefinity.Security.Model.SecurityRoot)">
            <summary>
            Sets the root permissions.
            </summary>
            <param name="root">Security root to set initial permissions to.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsDataProvider.RootKey">
            <summary>
            Gets a unique key for each data provider base.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetUrlTypeFor(System.Type)">
            <summary>
            Gets the actual type of the <see cref="T:Telerik.Sitefinity.GenericContent.Model.UrlData"/> implementation for the specified content type.
            </summary>
            <param name="urlType">Type of the URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateItem(System.Type,System.Guid)">
            <summary>
            Creates new data item.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="pageId">The pageId.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetItem(System.Type,System.Guid)">
            <summary>
            Gets the data item with the specified ID.
            An exception should be thrown if an item with the specified ID does not exist.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="pageId">The ID of the item to return.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetItemOrDefault(System.Type,System.Guid)">
            <summary>
            Get item by primary key without throwing exceptions if it doesn't exist
            </summary>
            <param name="itemType">Type of the item to get</param>
            <param name="id">Primary key</param>
            <returns>Item or default value</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetItems(System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the items.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="orderExpression">The order expression.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">Total count of the items that are filtered by <paramref name="filterExpression"/></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.DeleteItem(System.Object)">
            <summary>
            Marks the provided persistent item for deletion.
            The item is deleted form the storage when the transaction is committed.
            </summary>
            <param name="item">The item to be deleted.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsDataProvider.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permission set object titles.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CommitTransaction">
            <summary>
            Commits the provided transaction.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.FlushTransaction">
            <summary>
            Flush all dirty and new instances to the database and evict all instances from the local cache.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetUrlFormat(Telerik.Sitefinity.GenericContent.Model.ILocatable)">
            <summary>
            Gets the url format for the specified data item that implements <see cref="T:Telerik.Sitefinity.GenericContent.Model.ILocatable"/> interface.
            </summary>
            <param name="item">The locatable item for which the url format should be returned.</param>
            <returns>
            Regular expression used to format the url.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetKnownTypes">
            <summary>
            Gets the known persistent types for this data provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.InitializeDefaultData">
            <summary>
            Initializes the provider with default data. Returns true if there are any changes for committing
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetItemFromUrl(System.Type,System.String,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDataProvider.GetItemFromUrl(System.Type,System.String,System.Boolean,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="published">The published.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsDefinitions">
            <summary>
            This is a static class used to initialize the properties for all ContentView control views
            of supplied by default for the events module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDefinitions.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Sitefinity.Modules.Events.EventsDefinitions" /> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDefinitions.DefineEventsBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for Events on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDefinitions.DefineFrontendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for Events on the frontend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsDefinitions.CreateBackendSections(Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade,Telerik.Sitefinity.Web.UI.Fields.Enums.FieldDisplayMode)">
            <summary>
            Creates the backend sections.
            </summary>
            <param name="fluentDetailView">A facade that defines the definition for DetailedFormView.</param>
            <param name="displayMode">The display mode of the field control.</param>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendDetailViewName">
            <summary>
            Name of the view used for displaying the events in detail mode on the frontend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendListViewName">
            <summary>
            Name of the view used for displaying the events in the "Titles, cities, dates" mode on the frontend - default mode.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendCalendarViewName">
            <summary>
            Name of the view used for displaying the events in the "Titles, cities, dates" mode on the frontend - default mode.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendTitlesCitiesDatesSummariesViewName">
            <summary>
            Name of the view used for displaying the events in the "Titles, cities, dates, summaries" mode on the frontend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendTitlesCitiesDatesViewName">
            <summary>
            Name of the view used for displaying the events in the "Titles, cities, dates" mode on the frontend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendDefinitionName">
            <summary>
            Name of the control definition used for defining <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.ContentView"/> control to
            manage events on the frontend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendFullEventItemViewName">
            <summary>
            Name of the view used for displaying the "Full event item view" on the frontend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendDefinitionName">
            <summary>
            Name of the control definition used for defining <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.ContentView"/> control
            to manage events on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendListViewName">
            <summary>
            Name of the view used to display list of events on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendEditDetailsViewName">
            <summary>
            Name of the view used to edit events on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendInsertDetailsViewName">
            <summary>
            Name of the view used to insert events on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendDuplicateDetailsViewName">
            <summary>
            Name of the view used to duplicate events on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendCommentsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> 
            definition for the ContentView control for events module comments on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.FrontendCommentsDefinitionName">
            <summary>
            Definition name for the frontend comments list.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendVersionPreviewViewName">
            <summary>
            Name of the view used to preview history version of an event.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.BackendPreviewViewName">
            <summary>
            Name of the view used to preview an event.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.ModuleName">
            <summary>
            Name of the module.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.ComparisonViewHistoryScreenQueryParameter">
            <summary>
            Name of the query parameter of the comparison view history screen.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.VersionComparisonView">
            <summary>
            Version Comparison View Name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsDefinitions.ResourceClassId">
            <summary>
            The class Id of the Events resource.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsHelper">
            <summary>
            Helper class for the Events module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsHelper.GetEventStaticQueryItems(System.String)">
            <summary>
            Gets the static query items for an event.
            </summary>
            <param name="queryDataName">The name of the filtering query.</param>
            <returns>The query items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsHelper.GetEventStaticQueryItems(Telerik.Sitefinity.Modules.Events.EventsFilteringType)">
            <summary>
            Gets the static query items for an event.
            </summary>
            <param name="filteringType">The type of the filtering.</param>
            <returns>The query items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsHelper.SetEventDatesFormat(Telerik.Sitefinity.Web.UI.FieldListView,Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Sets the format for displaying the event dates.
            </summary>
            <param name="control">The control which format will be set.</param>
            <param name="eventItem">The event item.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsManager">
            <summary>
            A manager for the events module
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.EventsManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.EventsManager"/> class with the given provider name.
            </summary>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.EventsManager"/> class.
            </summary>
            <param name="providerName">
            The name of the provider. If empty string or null the default provider is set
            </param>
            <param name="transactionName">
            The name of a distributed transaction. If empty string or null this manager will use separate transaction.
            </param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsManager.DefaultProviderDelegate">
            <summary>
            Gets the default provider for this manager.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsManager.ModuleName">
            <summary>
            The name of the module that this manager belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsManager.ProvidersSettings">
            <summary>
            Collection of data provider settings.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetManager">
            <summary>
            Get an instance of the events manager using the default provider
            </summary>
            <returns>Instance of events manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetManager(System.String)">
            <summary>
            Get an instance of the events manager explicitly specifying the required provider
            </summary>
            <returns>Instance of events manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetManager(System.String,System.String)">
            <summary>
            Get an instance of the blogs manager by explicitly specifying the required provider to use
            </summary>
            <param name="providerName">Name of the provider to use, or null/empty string to use the default provider.</param>
            <param name="transactionName">Name of the transaction.</param>
            <returns>Instance of the blogs manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetItems``1">
            <summary>
            Gets the items.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetLive(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Gets the public (live) version of <paramref name="cnt"/>, if it exists
            </summary>
            <param name="cnt">Type of the content item</param>        
            <returns>Public (live) version of <paramref name="cnt"/>, if it exists</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetTemp(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Get a temp for <paramref name="cnt"/>, if it exists.
            </summary>        
            <param name="cnt">Content item to get a temp for</param>        
            <returns>Temp version of <paramref name="cnt"/>, if it exists.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetMaster(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Accepts a content item and returns an item in master state
            </summary>
            <typeparam name="TContent">Type of the content item</typeparam>
            <param name="cnt">Content item whose master to get</param>        
            <returns>
            If <paramref name="cnt"/> is master itself, returns cnt.
            Otherwize, looks up the master associated with <paramref name="cnt"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="cnt"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Schedule(Telerik.Sitefinity.Events.Model.Event,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>   
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CreateCalendar">
            <summary>
            Creates a new calendar and chooses a random identity.
            </summary>
            <returns>The newly created Calendar</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CreateCalendar(System.Guid)">
            <summary>
            Creates a new calendar with the given identity
            </summary>
            <param name="if">Identity of the calendar to create.</param>
            <returns>The created calendar</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetCalendars">
            <summary>
            Gets a query for all Calendars
            </summary>
            <returns>An IQueriable object for all calendars</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetCalendar(System.Guid)">
            <summary>
            Search for an Calendar by its ID
            </summary>
            <param name="id">The id of the calendar to search for.</param>
            <returns>The calendar with the specified id</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.DeleteCalendar(Telerik.Sitefinity.Events.Model.Calendar)">
            <summary>
            Mark a calendar for removal.
            </summary>
            <param name="calendarToDelete">The calendar to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetCalendarEvents(System.Guid)">
            <summary>
            Gets a query for all events in the specified calendar
            </summary>
            <param name="calendarId">The id of the calendar</param>
            <returns>A query for all events in the specified calendar</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CreateEvent">
            <summary>
            Creates a new event and chooses a random identity.
            </summary>
            <returns>The newly created Event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CreateEvent(System.Guid)">
            <summary>
            Creates a new event with the given identity
            </summary>
            <param name="pageId">Identity of the event to create.</param>
            <returns>The created event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetEvents">
            <summary>
            Gets a query for all Events
            </summary>
            <returns>An IQueriable object for all events</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetEvent(System.Guid)">
            <summary>
            Search for an Event by its ID
            </summary>
            <param name="pageId">The pageId of the event to search for.</param>
            <returns>The event with the specified pageId</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.DeleteEvent(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Mark an event for removal.
            </summary>
            <param name="eventToDelete">The event to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CheckIn(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CheckOut(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>A content that was checked out in temp state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Edit(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>A content that was edited in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Publish(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Unpublish(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetCheckedOutBy(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <param name="itemsQuery">Query of all Events</param>
            <returns>ID of the user that ckecked out the item or Guid.Empty if the item is not checked out.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.IsCheckedOut(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <param name="itemsQuery">Query of all Events</param>
            <returns>True if the item is checked out, false otherwize.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.IsCheckedOutBy(Telerik.Sitefinity.Events.Model.Event,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <param name="itemsQuery">Query of all Events.</param>
            <returns>True if it was checked out by a user with the specified id, false otherwize</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Copy(Telerik.Sitefinity.Events.Model.Event,Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Copy one event to another for the uses of content lifecycle management
            </summary>
            <param name="source">Event to copy from</param>
            <param name="destination">Event to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Copy(Telerik.Sitefinity.GenericContent.Model.Content,Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Copy one event to another for the uses of content lifecycle management
            </summary>
            <param name="source">News item to copy from</param>
            <param name="destination">News item to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetEventsOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Gets the occurrences of all live events for the specified period of time
            </summary>
            <param name="startDate">The start date of the period</param>
            <param name="endDate">The end date of the period</param>
            <returns>The occurrences of all live events for the specified period of time</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetEventsOccurrences(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Events.Model.Event},System.DateTime,System.DateTime)">
            <summary>
            Gets the occurrences of the specified events for the specified period of time
            </summary>
            <param name="events">The events.</param>
            <param name="startDate">The start date of the period</param>
            <param name="endDate">The end date of the period</param>
            <returns>The occurrences of the specified events for the specified period of time</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CheckIn(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CheckOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>
            A content that was checked out in temp state.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Edit(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>
            A content that was edited in master state.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Publish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
            <returns>Published content item</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Unpublish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.Schedule(Telerik.Sitefinity.GenericContent.Model.Content,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>
            <returns>Scheduled content item</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <param name="itemsQuery">Query of all <typeparamref name="Content"/>-s</param>
            <returns>
            ID of the user that ckecked out the item or Guid.Empty if the item is not checked out.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.IsCheckedOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <param name="itemsQuery">Query of all <typeparamref name="Content"/>-s</param>
            <returns>
            True if the item is checked out, false otherwize.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.IsCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <param name="itemsQuery">Query of all <typeparamref name="Content"/>-s.</param>
            <returns>
            True if it was checked out by a user with the specified id, false otherwize
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetLive(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Gets the public (live) version of <paramref name="cnt"/>, if it exists
            </summary>
            <param name="cnt">Type of the content item</param>
            <returns>
            Public (live) version of <paramref name="cnt"/>, if it exists
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetTemp(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Get a temp for <paramref name="cnt"/>, if it exists.
            </summary>
            <param name="cnt">Content item to get a temp for</param>
            <returns>
            Temp version of <paramref name="cnt"/>, if it exists.
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetMaster(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Accepts a content item and returns an item in master state
            </summary>
            <param name="cnt">Content item whose master to get</param>
            <returns>
            If <paramref name="cnt"/> is master itself, returns cnt.
            Otherwize, looks up the master associated with <paramref name="cnt"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="cnt"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsManager.Lifecycle">
            <summary>
            Gets the lifecycle decorator
            </summary>
            <value>The lifecycle.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CreateLanguageData">
            <summary>
            Creates a language data instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data instance
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetLanguageData(System.Guid)">
            <summary>
            Gets language data instance by its Id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsManager.RecycleBin">
            <summary>
            Gets the strategy that encapsulates the Recycle Bin operations like moving an item to, and restoring from the Recycle Bin.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsManager.GetConfigType">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsManager.ProviderNameDefaultPrefix">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsModule">
            <summary>
            A module for managing events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsModule.Managers">
            <summary>
            Gets the CLR types of all data managers provided by this module.
            </summary>
            <value>An array of <see cref="T:System.Type"/> objects.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsModule.LandingPageId">
            <summary>
            Gets the identity of the home (landing) page for the Events module.
            </summary>
            <value>The landing page id.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.Initialize(Telerik.Sitefinity.Services.ModuleSettings)">
            <summary>
            Initializes the service with specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.InstallPages(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the pages.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.InstallTaxonomies(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the taxonomies.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.GetModuleConfig">
            <summary>
            Gets the module config.
            </summary>
            <returns>An instance of the <see cref="T:Telerik.Sitefinity.Configuration.ConfigSection"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.InstallConfiguration(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs module's toolbox configuration.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.Upgrade(Telerik.Sitefinity.Abstractions.SiteInitializer,System.Version)">
            <summary>
            Upgrades this module from the specified version.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
            <param name="upgradeFrom">The version this module us upgrading from.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.CreateCalendarsViewTemplate(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Creates the calendars view template.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.UpdateEventsWithTimeZone(System.TimeZoneInfo)">
            <summary>
            Updates all events that were created before 7.0 setting them a timezone and recalculating their recurrence expression.
            If not all events were created with the same TimeZone an additional script has to be executed on the clients side. The script and its unit tests can be found
            under the Telerik.Sitefinity.Test project in EventsModuleTests.cs file. The method that should be used is FixBrokenEvent. 
            </summary>
            <param name="timeZoneInfo">The time zone info.</param>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.ModuleName">
            <summary>
            Name of the events module. (e.g. used in EventsManager)
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.ResourceClassId">
            <summary>
            Localization resources' class Id for events
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.EventsPageGroupId">
            <summary>
            Page group taxon for the events module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.CommentsPageId">
            <summary>
            Id of the comments page for the events module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.EventsViewConfigKey">
            <summary>
            Defines the configuration key that the EventsView control will use to load its sub-views
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.PublicEventsViewConfigKey">
            <summary>
            Defines the configuration key that the EventsView control will use to load its sub-views
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.EventsBackednContentViewControlId">
            <summary>
            The Backend Content View control ID for the events screen.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.EventCommentsBackednContentViewControlId">
            <summary>
            The Backend Content View control ID for the comments screen.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.HomePageId">
            <summary>
            Id of the home (landing) page for the Events module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.CalendarsPageId">
            <summary>
            Id of the Calendars page for the Events module 
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Events.EventsModule.CalendarsBackednContentViewControlId">
            <summary>
            The Backend Content View control ID for the Calendars screen.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.InitializeSortingExpressionSettings(Telerik.Sitefinity.Configuration.ConfigElementList{Telerik.Sitefinity.Data.Configuration.SortingExpressionElement})">
            <summary>
            Initializes the sorting expression settings.
            </summary>
            <param name="sortingExpressions">The sorting expressions.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.GetFixedRecurrenceDescriptor(System.String,System.TimeZoneInfo)">
            <summary>
            For recurrent events that were created before 7.0 there was an issue related to TimeZones.
            e.g. If an event was created from a machine with local time zone in Brisbane (+10 UTC) with a start earlier than 10 (the UTC offset) it was wrongly constructed.
            This method rebuilds an IRecurrenceDescriptor by a recurrence expression and a time zone info.
            This method is internal for unit testing purposes.
            </summary>
            <param name="recurrenceExpression">The recurrence expression.</param>
            <param name="timeZoneInfo">The time zone info.</param>
            <returns>The <see cref="T:Telerik.Sitefinity.RecurrentRules.IRecurrenceDescriptor"/>.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsModule.Telerik#Sitefinity#Modules#IExportableModule#ModuleName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsModule.Telerik#Sitefinity#Modules#IExportableModule#GetModuleMetaTypes">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.EventsResources">
            <summary>
            Localizable strings for the Events module
            </summary>
            
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsResources.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.EventsResources"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.EventsResources.#ctor(Telerik.Sitefinity.Localization.Data.ResourceDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Events.EventsResources"/> class with the given ResourceDataProvider
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsResourcesTitle">
            <summary>
            Gets the events resources title.
            </summary>
            <value>The events resources title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsResourcesTitlePlural">
            <summary>
            Gets the events resources title plural.
            </summary>
            <value>Gets the events resources title plural.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsResourcesDescription">
            <summary>
            Description of this resource class - contains localizable resources for the UI of events module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ModuleTitle">
            <summary>
            Description of this resource class - contains localizable resources for the UI of events module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ModuleDescription">
            <summary>
            Provides user interface for managing generic content.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsHtmlTitle">
            <summary>
            Messsage: Events
            </summary>
            <value>HTML title of the Events module landing page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsPremissionsHtmltitle">
            <summary>
            Messsage: Events
            </summary>
            <value>HTML title of the page handling permissions for the Events module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SettingsForEvents">
            <summary>
            phrase: Settings for events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PagesWhereEventsArePublished">
            <summary>
            Pages where Events are published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsUrlName">
            <summary>
            Messsage: Events
            </summary>
            <value>Events URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CategoriesMetafieldTitle">
            <summary>
            Messsage: Category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CategoriesMetafieldDescription">
            <summary>
            Messsage: Defines the category of this content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.TagsMetafieldTitle">
            <summary>
            Messsage: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.TagsMetafieldDescription">
            <summary>
            Messsage: Defines the category of this content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PageGroupNodeTitle">
            <summary>
            Messsage: Events
            </summary>
            <value>Page group for the events module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PageGroupNodeDescription">
            <summary>
            Messsage: Page group for the events module
            </summary>
            <value>Events Page Group Description</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsToolboxSectionTitle">
            <summary>
            Messsage: Events
            </summary>
            <value>Events toolbox section title</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsToolboxSectionDescription">
            <summary>
            Messsage: Events toolbox section title
            </summary>
            <value>Describes the event toolbox section title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsViewTitle">
            <summary>
            Messsage: Events View
            </summary>
            <value>Provides a UI for displaying events.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsViewDescription">
            <summary>
            Messsage: Provides a UI for displaying events.
            </summary>
            <value>Describes the purpose of the EventsView control.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CommentsTitle">
            <summary>
            Messsage: Comments
            </summary>
            <value>Title of the comments page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CommentsUrlName">
            <summary>
            Messsage: Comments
            </summary>
            <value>Comments URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CommentsDescription">
            <summary>
            Message: Manage comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EndDateShouldNotBeEarlierThanStartDate">
            <summary>
            Message: Event's end date cannot be set earlier than its start date.
            </summary>
            <value>Event's end date cannot be set earlier than its start date.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EndTimeShouldNotBeEarlierThanStartTime">
            <summary>
            Message: Event's end time cannot be set earlier than its start time.
            </summary>
            <value>Event's end time cannot be set earlier than its start time.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AreYouSureYouWantToDeleteThisEvent">
            <summary>
            Messsage: Are you sure you want to delete this event?
            </summary>
            <value>Confirmation message when an event is deleted.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateEvent">
            <summary>
            Messsage: Create an event
            </summary>
            <value>Label of the dialog that creates an event.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Create">
            <summary>
            Messsage: Create
            </summary>
            <value>Label for the buttons that create an event.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Delete">
            <summary>
            Messsage: Delete
            </summary>
            <value>Label for the buttons that delete an event.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Permissions">
            <summary>
            Messsage: Permissions
            </summary>
            <value>Label for the buttons that switch to the permissions dialog.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Event">
            <summary>
            Messsage: Event
            </summary>
            <value>Event word.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Search">
            <summary>
            Messsage: Search
            </summary>
            <value>Search.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CloseSearch">
            <summary>
            Messsage: Close search
            </summary>
            <value>Close search.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.TitleCannotBeEmpty">
            <summary>
            Title cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ContentCannotBeEmpty">
            <summary>
            Content cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ClickToAddSummary">
            <summary>
            Phrase: Click to add summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lLocation">
            <summary>
            Word: Location <em class='sfNote'>(Street, City, Country, State)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lStreet">
            <summary>
            Word: Street
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lCity">
            <summary>
            Word: City
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lCountry">
            <summary>
            Word: Country
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lState">
            <summary>
            Word: State
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lContactInformation">
            <summary>
            Phrase: Contact information <em class='sfNote'>(Email, Web, Contact name, Phone)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ContactInformation">
            <summary>
            Phrase: Contact information
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Location">
            <summary>
            Phrase: Location
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lEmail">
            <summary>
            Word: Email
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lWeb">
            <summary>
            Word: Web
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lWebExample">
            <summary>
            Example: Start with http://
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lContactName">
            <summary>
            Word: Name
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lCellPhone">
            <summary>
            Word: Cell phone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lPhone">
            <summary>
            Word: Phone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lUrlName">
            <summary>
            Word: URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.UrlNameCannotBeEmpty">
            <summary>
            Phrase: URL cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Status">
            <summary>
            Word: Status
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PublishOn">
            <summary>
            Phrase: Publish on:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ExpiresOn">
            <summary>
            Phrase: Expires on:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Language">
            <summary>
            Word: Language
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.BackToAllItems">
            <summary>
            phrase: Back to all events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.BackToItems">
            <summary>
            Back to Events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateNewItem">
            <summary>
            The title of the create new event dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EditItem">
            <summary>
            The title of the edit event dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateThisItem">
            <summary>
            phrase: Create this event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SaveChanges">
            <summary>
            phrase: Save changes
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsSingleTypeName">
            <summary>
            Messsage: type name Events class
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsPluralTypeName">
            <summary>
            Messsage: type name Events class
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Categories">
            <summary>
            word: Categories
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Tags">
            <summary>
            word: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Comments">
            <summary>
            word: Comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Date">
            <summary>
            word: Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Publish">
            <summary>
            word: Publish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Unpublish">
            <summary>
            word: Unpublish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.MoreActions">
            <summary>
            phrase: More actions with events.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.LearnMoreWithVideoTutorials">
            <summary>
            Label: Learn more with video tutorials
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SearchEvents">
            <summary>
            phrase: Search events...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.FilterEvents">
            <summary>
            phrase: Filter events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ManageEvents">
            <summary>
            phrase: Manage Events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ManageAlso">
            <summary>
            phrase: Manage also.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CommentsForEvents">
            <summary>
            phrase: Comments for events.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Settings">
            <summary>
            phrase: Events settings.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PermissionsForEvents">
            <summary>
            phrase: Permissions for events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CustomFields">
            <summary>
            phrase: Custom Fields for events.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Title">
            <summary>
            word: Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Author">
            <summary>
            word: Author
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Actions">
            <summary>
            word: Actions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.View">
            <summary>
            word: View
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ViewProperties">
            <summary>
            word: Properties
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Duplicate">
            <summary>
            word: Duplicate
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Content">
            <summary>
            word: Content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.History">
            <summary>
            word: History
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.WhatDoYouWantToDoNow">
            <summary>
            phrase: What do you want to do now?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.NoEvents">
            <summary>
            phrase: No events have been created yet.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Edit">
            <summary>
            word: <strong>Edit...</strong>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Cancel">
            <summary>
            Messsage: Cancel
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.MoreOptions">
            <summary>
            phrase: More Options
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.MoreOptionsURL">
            <summary>
            phrase: More options <em class='sfNote'>(URL, Comments)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PublicationDate">
            <summary>
            phrase: Publication Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PublicationDateCannotBeEmpty">
            <summary>
            Phrase: PublicationDate cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ExpirationDate">
            <summary>
            phrase: Expiration Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventStart">
            <summary>
            phrase: Event Start
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventStartCannotBeEmpty">
            <summary>
            Phrase: EventStart cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventEnd">
            <summary>
            phrase: Event End
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventTimeZone">
            <summary>
            phrase: Event time zone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.DeleteThisItem">
            <summary>
            phrase: Delete this event item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SetPermissions">
            <summary>
            phrase: Set permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ReviewHistory">
            <summary>
            phrase: ReviewHistory
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Where">
            <summary>
            phrase: ReviewHistory
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ContactName">
            <summary>
            phrase: Contact Name
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ContactEmail">
            <summary>
            phrase: Contact Email
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.WebSite">
            <summary>
            phrase: Web Site
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Email">
            <summary>
            phrase: Email
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ContactPhone">
            <summary>
            phrase: Phone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ContactCell">
            <summary>
            phrase: Cell Phone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Dates">
            <summary>
            phrase: Dates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Address">
            <summary>
            phrase: Address
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsViewPropertyEditorTitle">
            <summary>
            word: Events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.lSummary">
            <summary>
            Word: Summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Category">
            <summary>
            Word: Category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CategoriesAndTags">
            <summary>
            phrase: Categories and tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Owner">
            <summary>
            word: Owner
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsByCategory">
            <summary>
            Phrase: Events by category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsByTag">
            <summary>
            Phrase: Events by tag
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllEvents">
            <summary>
            Phrase: All events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.MyEvents">
            <summary>
            The text of my events sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PublishedEvents">
            <summary>
            phrase: Published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.WaitingForApproval">
            <summary>
            phrase: Awaiting approval
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.WaitingForReview">
            <summary>
            phrase: Awaiting Review
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.WaitingForPublishing">
            <summary>
            phrase: Awaiting Publishing
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.DraftEvents">
            <summary>
            word: Drafts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ScheduledEvents">
            <summary>
            word: Scheduled
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ByDateModified">
            <summary>
            phrase: Drafts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CloseDateFilter">
            <summary>
            Phrase: Close date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.DisplayLastUpdatedEvents">
            <summary>
            The text of last updated events sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SortEvents">
            <summary>
            phrase: Sort events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AutoListAndSingleItem">
            <summary>
            phrase: Auto: List + single item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ListOnly">
            <summary>
            phrase: List only
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SingleItemOnly">
            <summary>
            phrase: Single item only
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Step1Title">
            <summary>
            phrase: What events functionality to use?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Step2Title">
            <summary>
            phrase: Settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.DefaultPage">
            <summary>
            Phrase: Default page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllowComments">
            <summary>
            Phrase: AllowComments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventSingularItemName">
            <summary>
            Word: event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventPluralItemName">
            <summary>
            Word: events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EditEventsSettings">
            <summary>
            Phrase: Edit Events settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsMasterViewFriendlyName">
            <summary>
            Phrase: Events - list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsDetailViewFriendlyName">
            <summary>
            Phrase: Events - single
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsDataFields">
            <summary>
            phrase: Events data fields
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.UrlNameInvalidSymbols">
            <summary>
            Phrase: URL contains invalid symbols
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CommentsHtmlTitle">
            <summary>
            Messsage: Comments
            </summary>
            <value>Html Title for the comments events module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.NoEventsSelectedYet">
            <summary>
            Phrase: No events selected yet
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Sort">
            <summary>
            phrase: Sort
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ByTitleAsc">
            <summary>
            phrase: By Title (A-Z)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ByTitleDesc">
            <summary>
            phrase: By Title (Z-A)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventModifiedFirst">
            <summary>
            phrase: NewModifiedFirst
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventCreatedFirst">
            <summary>
            phrase: NewCreatedFirst
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CustomSorting">
            <summary>
            Phrase: Custom sorting...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.OutlookEventExporterTitle">
            <summary>
            The title for the outlook export widget.
            </summary>
            <value>Outlook</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ICalEventExporterTitle">
            <summary>
            The title for the ICal export widget.
            </summary>
            <value>ICal</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.GoogleEventExporterTitle">
            <summary>
            The title for the Google Calendar export widget.
            </summary>
            <value>Google Calendar</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AddEventTo">
            <summary>
            The text preceding  the event exporters.
            </summary>
            <value>Add event to:</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CurrentEvents">
            <summary>
            Phrase: Current events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.UpcomingEvents">
            <summary>
            Phrase: Upcoming events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PastEvents">
            <summary>
            Phrase: Past events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Start">
            <summary>
            Word: Start
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.End">
            <summary>
            Word: End
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.RepeatEvent">
            <summary>
            Phrase: Repeat event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.RecurringEvent">
            <summary>
            Phrase: Repeat event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventEndEllipsis">
            <summary>
            phrase: Event end...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EditEvent">
            <summary>
            Phrase: Edit event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PagingSectionComplementoryText">
            <summary>
            Paging, limit and sorting
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AddEventsToCalendarOption">
            <summary>
            phrase: Allow users to add events to their calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AddEventsToOutlook">
            <summary>
            phrase: The users can add events to Outlook, Google Calendar and iCal
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CurrentOpenedEventItem">
            <summary>
            phrase: Current opened event item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarsTitle">
            <summary>
            Messsage: Calendars
            </summary>
            <value>Title of the Calendars page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarsUrlName">
            <summary>
            Messsage: Calendars
            </summary>
            <value>Calendars URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarsDescription">
            <summary>
            Message: Manage calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarsHtmlTitle">
            <summary>
            Messsage: Calendars
            </summary>
            <value>Html Title for Calendars page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateCalendar">
            <summary>
            Message: Create a calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EditCalendar">
            <summary>
            Message: Edit a calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Description">
            <summary>
            Message: Description
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ClickToAddDescription">
            <summary>
            Message: Click to add description
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateThisCalendar">
            <summary>
            Message: Create this calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsCountFormat">
            <summary>
            Phrase: {0} events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllCalendars">
            <summary>
            Message: All calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.MyCalendars">
            <summary>
            Message: My calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ManageCalendars">
            <summary>
            Message: Manage Calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Calendar">
            <summary>
            Word: Calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Color">
            <summary>
            Message: Color
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsByCalendar">
            <summary>
            Message: Events by calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ShowMoreCalendars">
            <summary>
            phrase: {0} more calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ShowLessCalendars">
            <summary>
            phrase: {0} less calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.MoreDetails">
            <summary>
            The more details link in the QuickAddEventDialog
            </summary>
            <value>More details</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.TitleRequired">
            <summary>
            The error message indicating that the title of the event is a required element.
            </summary>
            <value>Title is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarRequired">
            <summary>
            The error message indicating that the calendar, that the event belongs to, is a required element.
            </summary>
            <value>Calendar is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllDay">
            <summary>
            All day event
            </summary>
            <value>All day</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllDayEvent">
            <summary>
            All day event
            </summary>
            <value>All day</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventStartRequired">
            <summary>
            The error message indicating that the start date of the event is a required element.
            </summary>
            <value>Start date of the event is required</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Or">
            <summary>
            Word: or
            </summary>
            <value>or</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EditButton">
            <summary>
            Word: Edit
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.NewCalendar">
            <summary>
            phrase: New calendar.
            </summary>
            <value>New calendar</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.PageForSingleItem">
            <summary>
            Page for Single item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarAppearance">
            <summary>
            Calendar appearance
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.DefaultView">
            <summary>
            Default view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateEvents">
            <summary>
            Create events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllowCreateEvents">
            <summary>
            Allow users to create events
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllowCreateCalendars">
            <summary>
            Allow users to create calendars
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AllowChangeCalendarView">
            <summary>
            Allow users to change view mode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Week">
            <summary>
            Week
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ByCalendars">
            <summary>
            by Calendars...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ByCalendar">
            <summary>
            By Calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.SelectACalendar">
            <summary>
            Select a calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.ListTemplate">
            <summary>
            List template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarTemplate">
            <summary>
            Calendar template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CreateNewCalendar">
            <summary>
            phrase: Create a new calendar
            </summary>
            <value>Create a new calendar</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EventsCalendarViewFriendlyName">
            <summary>
            Phrase: Events - calendar
            </summary>
            <value>Events - calendar</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarsPluralTypeName">
            <summary>
            word: Calendars
            </summary>
            <value>Calendars</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarNotSelected">
            <summary>
            phrase: Calendar is not selected.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarNotAvailableInEditMode">
            <summary>
            phrase: Events might not be correctly displayed in design mode. If you have issues click Preview on top of this page to see the events.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.NoCalendars">
            <summary>
            phrase: No calendars have been created yet.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Occurs">
            <summary>
            word: Occurs
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.At">
            <summary>
            word: At
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.AreYouSureYouWantToDeleteThisCalendar">
            <summary>
            Messsage: Are you sure you want to delete this calendar?
            </summary>
            <value>Confirmation message when calendar is deleted.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.NoCalendarsSelectedYet">
            <summary>
            Phrase: No calendars selected yet
            </summary>
            <value>No calendars selected yet</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.HowToFindUs">
            <summary>
            How to find us
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.HowToFindUsDescription">
            <summary>
            Free-form instructions. Alternatively, you can use this field to enter the location in a free manner.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.HowToFindUsFormat">
            <summary>
            <strong>How to find us:</strong> {0}
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.StartsAt">
            <summary>
            Starts at
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.EndsAt">
            <summary>
            Ends at
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.Weeks">
            <summary>
            Weeks
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.CalendarsSingleTypeName">
            <summary>
            word: Calendar
            </summary>
            <value>Calendar</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.EventsResources.IncludeInSitemap">
            <summary>
            phrase: Include in sitemap
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Events.UI.Designers.EventsDesigner">
            <summary>
            Events content view designer control
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Events.UI.Designers.EventsDesigner.ScriptDescriptorTypeName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Events.UI.Designers.EventsDesigner.BuildDesigner">
            <summary>
            Builds the navigation and adds the views to the designer.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListExtensions">
            <summary>
            Extension methods which extend Sitefinity type <see cref="T:Telerik.Sitefinity.Lists.Model.List"/> with helper methods.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer">
            <summary>
            Implements functionality for converting items from lists content in transferable format.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer.GetItemsQueries(Telerik.Sitefinity.Packaging.Content.ExportParams)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer.Area">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer.Delete(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsContentTransfer.OnItemImported(Telerik.Sitefinity.Model.IDataItem,Telerik.Sitefinity.Publishing.WrapperObject,Telerik.Sitefinity.Data.IManager)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsStructureTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsStructureTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView">
            <summary>
            The view control for displaying a collection of list items.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView"/> class.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Anchor List template to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView"/> class.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Anchor List template to use</param>
            <param name="providerName">The name of the provider</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView"/> class.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Anchor List template to use</param>
            <param name="providerName">The name of the provider</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListsControl">
            <summary>
            Gets the reference to the RadListView which displays the lists.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListsHeaderControl">
            <summary>
            Gets the reference to the RadListView which displays the lists.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListItemsHeaderControl">
            <summary>
            Gets the reference to the RadListView which displays the lists.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListsHeaderControl_NeedDataSource(System.Object,Telerik.Web.UI.RadListViewNeedDataSourceEventArgs)">
            <summary>
            This method is called when the Header section needs a data source to populate data.
            </summary>
            <param name="sender">The RadListView which needs data</param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListsHeaderControl_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            This method is called when the Header section has its data bound.
            </summary>
            <param name="sender">The RadListView which had its data bound</param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListsControl_NeedDataSource(System.Object,Telerik.Web.UI.RadListViewNeedDataSourceEventArgs)">
            <summary>
            This method is called when the List details section needs a data source to populate data.
            </summary>
            <param name="sender">The RadListView which needs data</param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Anchor.AnchorListItemsMasterView.ListsControl_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            This method is called when the List details section has its data bound.
            </summary>
            <param name="sender">The RadListView which had its data bound</param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView">
            <summary>
             Represents the Lists Content Selectors designer view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.ContentTitleCssClass">
            <summary>
            Gets or sets the css class of the content selector title.
            </summary>
            <value>The css class of the content title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.AllowMultipleSelection">
            <summary>
            Gets or sets a value indicating whether multiple lists can be selected. By default <c>true</c>.
            </summary>
            <value>
            	<c>true</c> if multiple lists can be selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.DisableNarrowSelection">
            <summary>
            Gets or sets a value indicating whether the narrow selection functinality is disabled (hidden)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.ChoicesTitleHeading">
            <summary>
            Gets the radio choices title literal parent.
            </summary>
            <value>The choices title heading.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.SelectParentButton">
            <summary>
            Gets the button list items.
            </summary>
            <value>The button list items.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.ParentContentSelector">
            <summary>
            Gets or sets the list items content selector.
            </summary>
            <value>The list items content selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.SelectedParentLabel">
            <summary>
            Gets or sets the selected list item title.
            </summary>
            <value>The selected list item title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.ListsManager">
            <summary>
            Gets the lists manager.
            </summary>
            <value>The lists manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.SelectedParentLabelText">
            <summary>
            Gets or sets the selected parent content title text.
            </summary>
            <value>The selected parent content title text.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.ParentSelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Select page" dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.SelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Select page" dialog
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.InitView(Telerik.Sitefinity.Web.UI.ControlDesign.ControlDesignerBase)">
            <summary>
            Initializes the view.
            </summary>
            <param name="designer"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.ShowList(System.Guid)">
            <summary>
            Shows the title of the selected list or a warning if it was deleted.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.CheckForNoLists">
            <summary>
            Checks if no lists were created 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Designers.ListsContentSelectorsDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView">
            <summary>
            The view control for displaying a collection of list items.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Constructs the code-behind for an Expandable ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Expandable List template to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Constructs the code-behind for an Expandable ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Expandable List template to use</param>
            <param name="providerName">The name of the provider</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Constructs the code-behind for an Expandable ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Expandable List template to use</param>
            <param name="providerName">The name of the provider</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.OnNoLists">
            <summary>
            Called when the template does not have a List set to display.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.GetRequiredCoreScripts" -->
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expandable.ExpandableListItemsMasterView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Expanded.ExpandedListItemsMasterView">
            <summary>
            The view control for displaying a collection of list items.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expanded.ExpandedListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Constructs the code-behind for an Expanded ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Expanded List template to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expanded.ExpandedListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Constructs the code-behind for an Expanded ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Expanded List template to use</param>
            <param name="providerName">The name of the provider for the ListsManager</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Expanded.ExpandedListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Constructs the code-behind for an Expanded ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Expanded List template to use</param>
            <param name="providerName">The name of the provider for the ListsManager</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView">
            <summary>
            The view control for displaying one single list item.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView"/> class.
            </summary>
            <param name="mode">The mode of the ListView control.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,Telerik.Sitefinity.Lists.Model.ListItem,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView" /> class.
            </summary>
            <param name="mode">The mode.</param>
            <param name="detailItem">The detail item.</param>
            <param name="templateId">The detail template id.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView.SingleItemContainer">
            <summary>
            Reference to the control that binds to the data item
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemDetailView.SingleItemContainer_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemDataBound event of the SingleItemContainer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the list item data.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView">
            <summary>
            The view control for displaying a collection of list items.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView"/> class.
            </summary>
            <param name="mode">The Mode of the List template (e.g. Expandable, Page, Anchor, etc)</param>
            <param name="listIdsToShow">The Ids of the List model objects to display in the template</param>
            <param name="templateId">The Id of the master template ASCX to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView"/> class.
            </summary>
            <param name="mode">The Mode of the List template (e.g. Expandable, Page, Anchor, etc)</param>
            <param name="listIdsToShow">The Ids of the List model objects to display in the template</param>
            <param name="templateId">The Id of the master template ASCX to use</param>
            <param name="providerName">The provider name for the ListsManager</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView"/> class.
            </summary>
            <param name="mode">The Mode of the List template (e.g. Expandable, Page, Anchor, etc)</param>
            <param name="listIdsToShow">The Ids of the List model objects to display in the template</param>
            <param name="templateId">The Id of the master template ASCX to use</param>
            <param name="providerName">The provider name for the ListsManager</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.ListsControl">
            <summary>
            Gets the reference to the RadListView which displays the lists.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.ListsControl_NeedDataSource(System.Object,Telerik.Web.UI.RadListViewNeedDataSourceEventArgs)">
            <summary>
            This method is called when the Lists control needs a data source to populate data.
            </summary>
            <param name="sender">The RadListView which needs data</param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemsMasterView.ListsControl_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            This method is called when the Lists control has items bound to it.
            </summary>
            <param name="sender">The RadListView which had items bound to it</param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase">
            <summary>
            Base abstract class that provides common functionality for both master and
            detail views of list items.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Creates a new instance of the base class
            </summary>
            <param name="mode">The mode of the List template (e.g. Anchor, Expandable, etc)</param>
            <param name="listIdsToShow">The ids of the List model objects to display in the template</param>
            <param name="templateId">The Id of the template to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Creates a new instance of the base class
            </summary>
            <param name="mode">The mode of the List template (e.g. Anchor, Expandable, etc)</param>
            <param name="listIdsToShow">The ids of the List model objects to display in the template</param>
            <param name="templateId">The Id of the template to use</param>
            <param name="providerName">The provider name for the ListsManager</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the base class
            </summary>
            <param name="mode">The mode of the List template (e.g. Anchor, Expandable, etc)</param>
            <param name="listIdsToShow">The ids of the List model objects to display in the template</param>
            <param name="templateId">The Id of the template to use</param>
            <param name="providerName">The provider name for the ListsManager</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Creates a new instance of the base class
            </summary>
            <param name="mode">The mode of the List template (e.g. Anchor, Expandable, etc)</param>
            <param name="detailItem">The ListItem object to dispaly in a Detail template mode</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.#ctor(Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode,Telerik.Sitefinity.Lists.Model.ListItem,System.Guid)">
            <summary>
            Creates a new instance of the base class
            </summary>
            <param name="mode">The mode of the List template (e.g. Anchor, Expandable, etc)</param>
            <param name="detailItem">The ListItem object to dispaly in a Detail template mode</param>
            <param name="templateId">The detail template id.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.ListsManager">
            <summary>
            Gets the reference to the <see cref="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.ListsManager"/>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.PageManager">
            <summary>
            Gets the instance of the <see cref="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.PageManager"/> type.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.FindRequiredControl``1(System.Web.UI.Control,System.String)">
            <summary>
            Returns the required Control in the <paramref name="container"/> of <typeparamref name="TControl">type TControl</typeparamref>
            and the given <paramref name="id"/>. If no such control exists, a TemplateException is thrown.
            </summary>
            <typeparam name="TControl">The type of the required Control to find</typeparam>
            <param name="container">The container Control to look inside for the required control</param>
            <param name="id">The id of the required control</param>
            <returns>The required control.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.GetLists">
            <summary>
            Returns a collection of List model objects that have an id contained in the collection of List ids
            passed into the constructor.
            </summary>
            <returns>A collection of List model objects.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.OnNoLists">
            <summary>
            Called when No Lists match the requirements in GetLists
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.GetDetailListItem">
            <summary>
            Returns the ListItem to be displayed in the Detail template
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.GetTemplateKey">
            <summary>
            Finds the correct template key based on the ListViewMode and the TemplateId passed into
            the constructor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.OrderListItems(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Lists.Model.ListItem},System.String)">
            <summary>
            Orders the <paramref name="source">source collection</paramref> by the given <paramref name="sortOrder">sort order</paramref>.
            </summary>
            <param name="source">The collection of ListItem model objects to sort.</param>
            <param name="sortOrder">The order with which to sort the collection.</param>
            <returns>The sorted collection of ListItem model objects.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListItemViewBase.FilterListItems(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Lists.Model.ListItem})">
            <summary>
            Returns a collection of items that are not in the Draft state for display in the front-end
            </summary>
            <param name="items">The collection of ListItem model objects to filter</param>
            <returns>Non-draft collection of ListItem model objects.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView">
            <summary>
            Container widget for displaying list items.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.Mode">
            <summary>
            Gets or sets the current mode of the control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.AvailableMasterTemplates">
            <summary>
            Gets a collection of available master templates to choose from based on the current ListViewMode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.AvailableDetailTemplates">
            <summary>
            Gets a collection of available detail templates to choose for ListViewMode Page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.SelectedListIdsInternal">
            <summary>
            Gets or sets a collection of the Lists to display for the current List widget.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.SelectedListIds">
            <summary>
            Stores SelectedListIdsInternal in an asp.net parser-friendly way
            Use SelectedListIdsInternal instead in the code-behind
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.CurrentMasterTemplateId">
            <summary>
            Gets or sets the current List Template for the current ListViewMode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.CurrentDetailTemplateId">
            <summary>
            Gets or sets the current List Template for the current ListViewMode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.SelectedListText">
            <summary>
            Gets or sets the current text for the label on the Content tab that lets the user know 
            at a glance which Lists are set to display in the widget.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.ListItemSortExpression">
            <summary>
            Gets or sets the current sort expression of the List items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.ListsSortExpression">
            <summary>
            Gets or sets the current sort expression of the Lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.ModuleName">
            <summary>
            Gets or sets the name of the module which initialization should be ensured prior to rendering this control.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.ControlDefinitionName">
            <summary>
            Gets or sets the name of the configuration definition for the whole control. From this definition
            control can find out all other configurations needed in order to construct views.
            </summary>
            <value>The name of the control definition.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.LoadView(System.String)">
            <summary>
            Loads the view specified through the name of the view.
            </summary>
            <param name="viewName">Name of the view.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.MasterViewDefinition">
            <summary>
            Gets the definition for the master view specified through the
            MasterViewName property. Returns null as this control doesn't work with definitions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView.DetailViewDefinition">
            <summary>
            Gets the definition for the detail view specified through the
            DetailViewName property. Returns null as this control doesn't work with definitions.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner">
            <summary>
            Designer for the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView"/> control.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.AllowMultipleSelection">
            <summary>
            Gets or sets a value indicating whether multiple lists can be selected. By default <c>true</c>.
            </summary>
            <value>
            	<c>true</c> if multiple lists can be selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.TopMessageText">
            <summary>
            Gets or sets the message text - used to show any warnings and errors on the designers
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.TopMessageType">
            <summary>
            Gets or sets the type of the top message.
            </summary>
            <value>The type of the top message.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.ModifyWidgetTemplatePermission">
            <summary>
            Gets whether the user has the permissions to modify the widget templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.ListsManager">
            <summary>
            Gets the lists manager.
            </summary>
            <value>The lists manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.ViewModeChoice">
            <summary>
            Gets the reference to the <see cref="T:Telerik.Sitefinity.Web.UI.Fields.ChoiceField"/> control representing
            available view modes.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.MasterTemplatesChoiceField">
            <summary>
            Gets the choice field listing all possible master layout templates
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.DetailTemplatesChoiceField">
            <summary>
            Gets the choice field listing all possible detail layout templates for Paged List master view
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.SelectSpecificListsButton">
            <summary>
            Gets the button for selecting which lists to display.
            </summary>
            <value>The button for selecting which lists to display.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.ListsContentSelector">
            <summary>
            Gets or sets the lists content selector.
            </summary>
            <value>The lists content selector.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.SelectedContentLabel">
            <summary>
            Gets or sets the selected list title.
            </summary>
            <value>The selected list title.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.CreateNewMasterTemplate">
            <summary>
            Gets the reference to the link button used for creating new master control templates.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.CreateNewDetailTemplate">
            <summary>
            Gets the reference to the link button used for creating new detail control templates for Paged List master view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.EditMasterTemplate">
            <summary>
            Gets the reference to the link button used for editing existing master templates.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.EditDetailTemplate">
            <summary>
            Gets the reference to the link button used for editing existing detail templates for Paged List master view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.RadWindowManager">
            <summary>
            Gets the reference to the <see cref="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.RadWindowManager"/> of the designer.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.ContentFilterSelector">
            <summary>
            Gets the reference to the ContentFilterSelector.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.SelectorTag">
            <summary>
            Gets the jquery UI dialog which shows "Choose item" dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.ProvidersSelector">
            <summary>
            Gets the providers selector control.
            </summary>
            <value>The providers selector control.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.FlatTaxonSelector">
            <summary>
            Gets the reference to the flat taxon selector results view.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.Message">
            <summary>
            Gets the message control.
            </summary>
            <value>The message control.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer)">
            <summary>
            Initializes the controls.
            </summary>
            <remarks>
            Initialize your controls in this method. Do not override CreateChildControls method.
            </remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.CheckForNoLists">
            <summary>
            Checks if no lists were created 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewDesigner.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode">
            <summary>
            Defines the supported modes of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListView"/> control.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode.Simple">
            <summary>
            List items are displayed in a simple mode.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode.Expanded">
            <summary>
            List items are displayed in an expanded mode.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode.Expandable">
            <summary>
            List items are displayed in an expandable mode. 
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode.Anchor">
            <summary>
            List items are displayed in an anchor mode.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewMode.Page">
            <summary>
            List items are displayed in a page mode.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewModeTemplate">
            <summary>
            A model to pass to the ListViewDesigner.js script that combines the ListViewMode,
            the type of control and the list of templates available for the ListViewMode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewModeTemplate.Mode">
            <summary>
            The ListViewMode of the ChoiceField Choice (e.g. Simple, Anchor, etc.)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewModeTemplate.ControlType">
            <summary>
            The type of Master/Detail view that is associated with the ListViewMode
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.ListViewModeTemplate.AvailableTemplates">
            <summary>
            Gets a collection of available templates to choose from based on the current ListViewMode
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Constructs the code-behind for an Page ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Page List template to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Constructs the code-behind for an Page ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Page List template to use</param>
            <param name="moduleName">The name of the provider for the ListsManager</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Constructs the code-behind for an Page ListItem template.
            </summary>
            <param name="listIdsToShow">The Ids of the Lists to use for the template</param>
            <param name="templateId">The Id of the specific Page List template to use</param>
            <param name="moduleName">The name of the provider for the ListsManager</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Called when the Controls on the ASCX need initialization
            </summary>
            <param name="container"></param>
            <param name="definition"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.ListsControl_NeedDataSource(System.Object,Telerik.Web.UI.RadListViewNeedDataSourceEventArgs)">
            <summary>
            Called when the Control for displaying the lists needs its data source
            </summary>
            <param name="sender">The RadListView that needs its data source</param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.ListsControl_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Called when the Control for displaying the lists has its data bound to it
            </summary>
            <param name="sender">The RadListView that had its data bound</param>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.UI.Page.PageListItemMasterView.ListsControl">
            <summary>
            Gets the reference to the RadListView which displays the lists.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.UI.Simple.SimpleListItemsMasterView">
            <summary>
            The view control for displaying a collection of list items.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Simple.SimpleListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Creates an instance of the code-behind for a Simple ListItem template
            </summary>
            <param name="listIdsToShow">The Ids of the List model objects to display in the template</param>
            <param name="templateId">The id of the Simple template to use</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Simple.SimpleListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String)">
            <summary>
            Creates an instance of the code-behind for a Simple ListItem template
            </summary>
            <param name="listIdsToShow">The Ids of the List model objects to display in the template</param>
            <param name="templateId">The id of the Simple template to use</param>
            <param name="providerName">The provider name for the ListsManager</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.UI.Simple.SimpleListItemsMasterView.#ctor(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.String,System.String)">
            <summary>
            Creates an instance of the code-behind for a Simple ListItem template
            </summary>
            <param name="listIdsToShow">The Ids of the List model objects to display in the template</param>
            <param name="templateId">The id of the Simple template to use</param>
            <param name="providerName">The provider name for the ListsManager</param>
            <param name="sortExpression">The sort expression of the control</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ContentViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.#ctor(Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
            <param name="liveItem">The live list related to the master list.</param>
            <param name="tempItem">The temp list related to the master list.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.#ctor(Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Initializes a new instance of the <see cref="!:ContentViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.ParentId">
            <summary>
            Id of the <c>List</c> this <c>ListItem</c> belongs to
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.Content">
            <summary>
            The content of the <c>ListItem</c>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.Summary">
            <summary>
            The summary of the <c>ListItem</c> (limited to 250 characters).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.DisplayReadMore">
            <summary>
            A boolean used to determine whether or not to display the "read more..." link 
            for the <c>ListItem</c> summary.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.Ordinal">
            <summary>
            Gets or sets the ordinal number on the <c>ListItem</c>.
            </summary>
            <value>The ordinal value.</value>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.MaxSummaryLength">
            <summary>
            The maximum number of characters allowed in the summary of
            a <c>ListItem</c>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.GetLive" -->
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListItemViewModel.GetTemp">
            <summary>
            Get temp version of this.ContentItem using this.provider
            </summary>
            <returns>Temp version of this.ContentItem</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.Lists.Model.List"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ContentViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.#ctor(Telerik.Sitefinity.Lists.Model.List,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="!:ContentViewModel"/> class.
            </summary>
            <param name="contentItem">The <c>List</c> object to create the viewmodel for.</param>
            <param name="dataProvider">The provider to use with this viewmodel.</param>
            <param name="listItemsCount">The number of child <c>ListItem</c>s this <c>List</c> has.</param>
            <param name="lastItemDate">The date/time of the last edit made to the child <c>ListItem</c>s</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.#ctor(Telerik.Sitefinity.Lists.Model.List,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Int32,System.Nullable{System.DateTime},Telerik.Sitefinity.Lists.Model.List,Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="dataProvider">The data provider.</param>
            <param name="listItemsCount">The list items count.</param>
            <param name="lastItemDate">The last item date.</param>
            <param name="liveItem">The live list related to the master list.</param>
            <param name="tempItem">The temp list related to the master list.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.ListItemCount">
            <summary>
            Gets the number of <c>ListItem</c>s in this <c>List</c>.
            </summary>
            <value>The number of <c>ListItem</c>s in this <c>List</c>.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.LastItemDate">
            <summary>
            Gets or sets the last <c>ListItem</c> date.
            </summary>
            <value>The last <c>ListItem</c> date.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.GetLive">
            <summary>
            Get live version of this.ContentItem using this.provider
            </summary>
            <returns>Live version of this.ContentItem</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.Data.ListViewModel.GetTemp">
            <summary>
            Get temp version of this.ContentItem using this.provider
            </summary>
            <returns>Temp version of this.ContentItem</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService">
            <summary>
            This web service is used to work with <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetContentItems(System.String)">
            <summary>
            Gets the content of a specified type from the given provider.
            </summary>
            <param name="providerName">
            The provider from which the content ought to be retrieved.
            </param>
            <returns>Query of the content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetChildContentItems(System.Guid,System.String)">
            <summary>
            Gets the child content of a specified content item from the given provider.
            </summary>
            <param name="parentId">Id of the parent content for which the children ought to be retrieved.</param>
            <param name="providerName">The provider from which the content ought to be retrieved.</param>
            <returns>Query of the child content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetContentItem(System.Guid,System.String)">
            <summary>
            Gets a single content.
            </summary>
            <param name="id">Id of the content to be retrieved.</param>
            <param name="providerName">Name of the provider from which the content ought to be retrieved.</param>
            <returns>A single content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetParentContentItem(System.Guid,System.String)">
            <summary>
            Gets the parent content item.
            </summary>
            <param name="id">The id of the parent List.</param>
            <param name="providerName">Name of the provider.</param>
            <returns>The parent of the given content item <paramref name="id"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetManager(System.String)">
            <summary>
            Gets the manager to be used by the service. Concrete implementation of the service must provide this.
            </summary>
            <param name="providerName">Name of the provider with which the manager ought to be instantiated.</param>
            <returns>An instance of the manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Lists.Model.ListItem},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Lists.Model.ListItem},System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Lists.Model.ListItem})">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <param name="liveItem">The dictionary  of live list related to the master list</param>
            <param name="tempItem">The dictionary  of temp list related to the master list</param>
            <returns>
            An enumerable of view model content objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Lists.Model.ListItem},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <returns>An enumerable of view model content objects.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.GetPredecessorItems(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            Gets the Predecessors of the given item with the <paramref name="contentId">contentId</paramref>
            </summary>
            <param name="contentId">The id of the item to get the predecessors for</param>
            <param name="provider">The provider to use for retrieving the predecessors</param>
            <param name="sortExpression">How the result should be sorted</param>
            <param name="skip">How many result items should be skipped</param>
            <param name="take">How many result items to take</param>
            <param name="filter">A qualifier for the result items to be applied</param>
            <param name="onlyPath"></param>
            <param name="itemType">The type of the content item</param>
            <returns>A collection of viewmodels for ListItems</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.BatchPlaceContentInternal(System.String[],System.String,System.String,System.String,System.String)">
            <summary>
            Provides a method for moving a group of <c>ListItemViewModel</c> objects by adjusting 
            their associated <c>ListItem</c> ordinal value.
            </summary>
            <param name="sourceContentIds">The Guids of the content to move.</param>
            <param name="parentId">The id of the parent <c>List</c> of the content items to move.</param>
            <param name="providerName">The name of the provider to use in this process.</param>
            <param name="placePosition">The qualifier for whether or not to place the content items before 
            or after the <paramref name="destination"/> object.
            </param>
            <param name="destination">The guid of the destination <c>ListItem</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListItemService.BatchMoveContentInternal(System.String[],System.String,System.String,System.String)">
            <summary>
            Given the <paramref name="sourceContentIds">Ids</paramref> of the content, move them in the given <paramref name="direction">direction</paramref>.
            </summary>
            <param name="sourceContentIds">The ids of the content to move</param>
            <param name="parentId">The parent (List) id</param>
            <param name="providerName">The name of the data provider to use</param>
            <param name="direction">The direction to move the content</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService">
            <summary>
            This web service is used to work with <see cref="T:Telerik.Sitefinity.Lists.Model.List"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetContentItems(System.String)">
            <summary>
            Gets the content of a specified type from the given provider.
            </summary>
            <param name="providerName">
            The provider from which the content ought to be retrieved.
            </param>
            <returns>Query of the content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetChildContentItems(System.Guid,System.String)">
            <summary>
            Gets the child content of a specified content item from the given provider.
            </summary>
            <param name="parentId">Id of the parent content for which the children ought to be retrieved.</param>
            <param name="providerName">The provider from which the content ought to be retrieved.</param>
            <returns>Query of the child content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetContentItem(System.Guid,System.String)">
            <summary>
            Gets a single content.
            </summary>
            <param name="id">Id of the content to be retrieved.</param>
            <param name="providerName">Name of the provider from which the content ought to be retrieved.</param>
            <returns>A single content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetParentContentItem(System.Guid,System.String)">
            <summary>
            Gets the parent content item. This is not supported for the <c>List</c> model since it has no parent.
            </summary>
            <param name="id">The id.</param>
            <param name="providerName">Name of the provider.</param>
            <exception cref="T:System.NotSupportedException">Thrown because <c>List</c> does not support parent content.</exception>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetManager(System.String)">
            <summary>
            Gets the manager to be used by the service. Concrete implementation of the service must provide this.
            </summary>
            <param name="providerName">Name of the provider with which the manager ought to be instantiated.</param>
            <returns>An instance of the manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Lists.Model.List},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Lists.Model.List},System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.Lists.Model.List})">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <param name="liveItem">The dictionary  of live list related to the master list</param>
            <param name="tempItem">The dictionary  of temp list related to the master list</param>
            <returns>
            An enumerable of view model content objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.Lists.Model.List},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <returns>An enumerable of view model content objects.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetLastItemDate(System.Guid,System.String)">
            <summary>
            Gets the date/time of the most recently edited <c>ListItem</c>.
            </summary>
            <param name="listId">The id of the parent <c>List</c></param>
            <param name="providerName">The provider to use with this query.</param>
            <returns>The date/time of the most recently edited <c>ListItem</c>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.GetListItemsCount(System.Guid,System.String)">
            <summary>
            Gets the total number of <c>ListItem</c>s in the Master lifecycle status.
            </summary>
            <param name="listId">The id of the parent <c>List</c> object.</param>
            <param name="providerName">The name of the provider to use with this query.</param>
            <returns>The total number of <c>ListItem</c>s in the Master lifecycle status.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.ProcessFilter(System.String@)">
            <summary>
            Overriden to implement filtering for backend Lists
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.ProcessResultQuery(System.Linq.IQueryable{Telerik.Sitefinity.Lists.Model.List}@,System.Object)">
            <summary>
            Filters the queryable collection of <c>List</c> items with the given <paramref name="context"/>.
            </summary>
            <param name="result">The result of a prior query that needs filters applied.</param>
            <param name="context">Holds an array of booleans that contains whether or not the <paramref name="result"/>
            is to be filtered by empty lists or the lists of the current user.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.BatchDeleteContent(System.String[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Deletes all Lists with the given <paramref name="ids">ids</paramref>.
            </summary>
            <param name="ids">The ids of the Lists to delete</param>
            <param name="providerName">The name of the data provider to use</param>
            <param name="workflowOperation"></param>
            <param name="deletedLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.BatchDeleteContentInternal(System.String[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Deletes all Lists with the given <paramref name="ids">ids</paramref>.
            </summary>
            <param name="ids"></param>
            <param name="providerName"></param>
            <param name="workflowOperation"></param>
            <param name="deletedLanguage"></param>
            <param name="checkRelatingData"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.MatchesListFilter(System.String@,System.Text.RegularExpressions.Regex)">
            <summary>
            Returns whether or not the given <paramref name="filter"/> matches the given <paramref name="regex"/>.
            </summary>
            <param name="filter">The filter to apply the <paramref name="regex"/> to.</param>
            <param name="regex">The regex used to test the <paramref name="filter"/>.</param>
            <returns>Whether or not the <paramref name="filter"/> matches the <paramref name="regex"/>.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.ListsWithoutItemsFilterRegex">
            <summary>
            A Regex for filtering <c>List</c>s which have no <c>ListItem</c>s.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Web.Services.ListService.MyListsFilterRegex">
            <summary>
            A Regex for filtering <c>List</c>s for the current user.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.Services.ListsModuleService">
            <summary>
            This web service is used to work with the <see cref="!:ListModule">List Module</see>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListsModuleService.GetFullSummary(System.String)">
            <summary>
            Gets the full content of the <c>ListItem</c> with the given <paramref name="listItemId">ID</paramref>.
            </summary>
            <param name="listItemId">The ID of the <c>ListItem</c> for which to get the full content.</param>
            <returns>The full summary for the <c>ListItem</c>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.ListsModuleService.SetListSortOrder(System.String,System.String)">
            <summary>
            Sets the sort order of the <c>List</c> with the given <paramref name="listId">ID</paramref>.
            </summary>
            <param name="listId">The ID of the <c>List</c> for which to set the sort order.</param>
            <param name="sortOrder">The sort order to set to the <c>List</c>.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Web.Services.IListsModuleService">
            <summary>
            This web service is used to work with the <see cref="!:ListModule">List Module</see>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.IListsModuleService.GetFullSummary(System.String)">
            <summary>
            Gets the full content of the <c>ListItem</c> with the given <paramref name="listItemId">ID</paramref>.
            </summary>
            <param name="listItemId">The ID of the <c>ListItem</c> for which to get the full content.</param>
            <returns>The full summary for the <c>ListItem</c>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Web.Services.IListsModuleService.SetListSortOrder(System.String,System.String)">
            <summary>
            Sets the sort order of the <c>List</c> with the given <paramref name="listId">ID</paramref>.
            </summary>
            <param name="listId">The ID of the <c>List</c> for which to set the sort order.</param>
            <param name="sortOrder">The sort order to set to the <c>List</c>.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets">
            <summary>
            Constants related to Permission Sets
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List">
            <summary>
            General permisson set action names
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List.SetName">
            <summary>
            Name of the general permission set
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List.View">
            <summary>
            View action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List.Create">
            <summary>
            Create action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List.Delete">
            <summary>
            Delete action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List.ChangeOwner">
            <summary>
            ChangeOwner action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.List.ChangePermissions">
            <summary>
            ChangePermissions action name
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem">
            <summary>
            ListItem permission set
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem.SetName">
            <summary>
            ListItem permission set name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem.View">
            <summary>
            ViewListItem action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem.Manage">
            <summary>
            ManageListItem action name. Also used for setting the blog properties at the higher level.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem.Unlock">
            <summary>
            Unlock action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem.ChangeOwner">
            <summary>
            ChangeListItemOwner action name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsPermissions.Sets.ListItem.ChangePermissions">
            <summary>
            ChangeListItemPermissions action name
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Configuration.ListItemsConfigElement">
            <summary>
            Provides configuration information about ListItem in the Lists module
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Configuration.ListItemsConfigElement.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Configuration.ListItemsConfigElement"/> class.
            </summary>
            <param name="parent">The parent element.</param>
            <remarks>
            ConfigElementCollection generally needs to have a parent, however, sometimes it is necessary
            to create a collection in memory only which is then used later on in the context of a parent.
            Therefore, is the element is of ConfigElementCollection, exception for a non existing parent
            will not be thrown.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Configuration.ListItemsConfigElement.UrlRoot">
            <summary>
            Gets or sets the name of the connection string.
            </summary>
            <value>The name of the connection string.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig">
            <summary>
            Configuration section for the Lists module.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.Providers">
            <summary>
            Gets a collection of data provider settings.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.SortingExpressionSettings">
            <summary>
            Gets the configured SortingExpression settings.
            </summary>
            <value>The SortExpression settings.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.Lists">
            <summary>
            Gets the lists configuration.
            </summary>
            <value>The lists.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.ListItems">
            <summary>
            Gets the listItems configuration.
            </summary>
            <value>The listItems.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.InitializeDefaultProviders(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Configuration.DataProviderSettings})">
            <summary>
            Initializes the default providers.
            </summary>
            <param name="providers">The dictionary of the data providers and their names.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.OnPropertiesInitialized">
            <summary>
            Called after the properties of this instance have been initialized.
            Load default values here.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.InitializeSortingExpressionSettings">
            <summary>
            Initializes the sorting expression settings.
            </summary>
            <param name="sortingExpressions"></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfig.InitializeDefaultViews(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement})">
            <summary>
            Initializes the default views.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfigElement">
            <summary>
            Provides configuration information about List in the Lists module
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfigElement.#ctor(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfigElement"/> class.
            </summary>
            <param name="parent">The parent element.</param>
            <remarks>
            ConfigElementCollection generally needs to have a parent, however, sometimes it is necessary
            to create a collection in memory only which is then used later on in the context of a parent.
            Therefore, is the element is of ConfigElementCollection, exception for a non existing parent
            will not be thrown.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Configuration.ListsConfigElement.UrlRoot">
            <summary>
            Gets or sets the name of the connection string.
            </summary>
            <value>The name of the connection string.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Data.ListsMetadataSource">
            <summary>
            This class implements the Lists module OpenAccess ORM mappings
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.ListsMetadataSource.BuildCustomMappings">
            <summary>
            Builds the custom mappings for the data provider.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider">
            <summary>
            This class represents the concrete implementation of the Lists data provider for the OpenAccess ORM.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CreateList">
            <summary>
            Create a new <c>List</c> and choose a random identity
            </summary>
            <returns>Created <c>List</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CreateList(System.Guid)">
            <summary>
            Create a new <c>List</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>List</c> identity</param>
            <param name="applicationName">The application name</param>
            <returns>Created <c>List</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetList(System.Guid)">
            <summary>
            Search for a <c>List</c> by its identity
            </summary>
            <param name="id">Searched <c>List</c> identity</param>
            <returns>Found <c>List</c></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetLists">
            <summary>
            Get a queryable object for all <c>List</c>s
            </summary>
            <returns>Queryable object for all <c>List</c>s</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.Delete(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Mark a <c>List</c> for removal
            </summary>
            <param name="list">The <c>List</c> to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CreateListItem">
            <summary>
            Create a new <c>ListItem</c> and choose a random identity
            </summary>
            <returns>Created <c>ListItem</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CreateListItem(System.Guid)">
            <summary>
            Create a new <c>ListItem</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>ListItem</c> identity</param>
            <returns>Created <c>ListItem</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.ListItem_ParentChanged(Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Handler for the event in which a list item is assigned to a specific list (as a parent).
            Makes sure the list item is added as a permission inheritor of the list, and copies the list's permissions.
            </summary>
            <param name="sender">The sender</param>
            <param name="parentlist">The parent <c>List</c></param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetListItem(System.Guid)">
            <summary>
            Search for a <c>ListItem</c> by its identity
            </summary>
            <param name="id">Searched <c>ListItem</c> identity</param>
            <returns>Found <c>ListItem</c></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetListItems">
            <summary>
            Get a queryable object for all <c>ListItem</c>s
            </summary>
            <returns>Queryable object for all <c>ListItem</c>s</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.Delete(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Mark a <c>ListItem</c> for removal
            </summary>
            <param name="listItem">The <c>ListItem</c> to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.MoveListItem(Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Modules.Pages.Move,System.Int32)">
            <summary>
            Moves a <c>ListItem</c> up or down depending on the <paramref name="move">move direction</paramref>
            by the specified <paramref name="numberOfPlaces">number of places</paramref>.
            </summary>
            <param name="listItemToMove">The <c>ListItem</c> object to move.</param>
            <param name="move">The direction to move the <paramref name="listItemToMove">object</paramref>.</param>
            <param name="numberOfPlaces">The number of places to move the <paramref name="listItemToMove">object</paramref>.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.Context">
            <summary>
            Gets or sets the OpenAccess context. Alternative to Database.
            </summary>
            <value>The context.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetMetaDataSource(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Gets the meta data source.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.CurrentSchemaVersionNumber">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.OnUpgrading(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.Data.OpenAccessListsDataProvider.OnUpgraded(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase">
            <summary>
            The base data provider class that needs to be implemented by all data providers that are
            to work with Sitefinity Lists module.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.RootKey">
            <summary>
            Gets a unique key for each data provider base.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateList">
            <summary>
            Creates a new List object.
            </summary>
            <returns>the new List object.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateList(System.Guid)">
            <summary>
            Creates a new List object with the given id.
            </summary>
            <param name="id">The Guid of the new List object.</param>
            <returns>The new List object.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetList(System.Guid)">
            <summary>
            Gets a List object with the given id.
            </summary>
            <param name="id">The id of the List to return.</param>
            <returns>The list with the given id.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetLists">
            <summary>
            Gets all of the lists currently persisted.
            </summary>
            <returns>A queryable collection of all the lists currently persisted.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.Delete(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Deletes the provided List.
            </summary>
            <param name="list">The List to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateListItem">
            <summary>
            Creates a new ListItem object.
            </summary>
            <returns>the new ListItem object.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateListItem(System.Guid)">
            <summary>
            Creates a new ListItem object with the given id.
            </summary>
            <param name="id">The Guid of the new ListItem object.</param>
            <returns>The new ListItem object.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetListItem(System.Guid)">
            <summary>
            Gets a ListItem object with the given id.
            </summary>
            <param name="id">The id of the ListItem to return.</param>
            <returns>The ListItem with the given id.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetListItems">
            <summary>
            Gets all of the ListItems currently persisted.
            </summary>
            <returns>A queryable collection of all the ListItems currently persisted.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.Delete(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Deletes the provided ListItem.
            </summary>
            <param name="list">The ListItem to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.MoveListItem(Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Modules.Pages.Move,System.Int32)">
            <summary>
            Moves the ListItem passed as first argument by the specified number of places, in the direction given by the
            <see cref="T:Telerik.Sitefinity.Modules.Pages.Move"/> enumeration.
            </summary>
            <param name="nodeToMove">The ListItem to move.</param>
            <param name="move">A value representing the direction in which the ListItem will be moved.</param>
            <param name="numberOfPlaces">The number of places to move.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetItem(System.Type,System.Guid)">
            <summary>
            Gets the data item with the specified ID.
            An exception should be thrown if an item with the specified ID does not exist.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="id">The ID of the item to return.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="itemType"/> is null.</exception>
            <returns>The data item with the specified ID.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetItemOrDefault(System.Type,System.Guid)">
            <summary>
            Get item by primary key without throwing exceptions if it doesn't exist
            </summary>
            <param name="itemType">Type of the item to get</param>
            <param name="id">Primary key</param>
            <returns>Item or default value</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateItem(System.Type,System.Guid)">
            <summary>
            Creates new data item.
            </summary>
            <param name="itemType">Type of the item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="itemType"/> is null.</exception>
            <param name="id">The id.</param>
            <exception cref="T:System.ArgumentException">Thrown if type of <paramref name="item"/> is unknown.</exception>
            <returns>The new data item.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.DeleteItem(System.Object)">
            <summary>
            Marks the provided persistent item for deletion.
            The item is deleted form the storage when the transaction is committed.
            </summary>
            <param name="item">The item to be deleted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="item"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if type of <paramref name="item"/> is unknown.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetItems(System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets a collection of items that qualify for the <paramref name="filterExpression"/>.
            </summary>
            <param name="itemType">The type of the items to return.</param>
            <param name="filterExpression">The filter to apply to the entire set of items.</param>
            <param name="orderExpression">The expression used to order the items.</param>
            <param name="skip">The number of items to skip.</param>
            <param name="take">The number of items to take.</param>
            <param name="totalCount">The number of total items.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="itemType"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="itemType"/> is a not known type.</exception>
            <returns>The collection of items that meet the <paramref name="filterExpression"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetKnownTypes">
            <summary>
            Get a list of types served by this manager
            </summary>
            <returns>A collection of known model types.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetUrlFormat(Telerik.Sitefinity.GenericContent.Model.ILocatable)">
            <summary>
            Gets the url format for the specified data item that implements <see cref="T:Telerik.Sitefinity.GenericContent.Model.ILocatable"/> interface.
            </summary>
            <param name="item">The locatable item for which the url format should be returned.</param>
            <returns>
            Regular expression used to format the url.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetParentTypeFor(System.Type)">
            <summary>
            Override this method in order to return the type of the Parent object of the specified content type.
            If the type has no parent type, return null.
            </summary>
            <param name="contentType">Type of the content.</param>
            <returns>The parent type of the given type. Null if the given type has no parent.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetParentType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetParent(Telerik.Sitefinity.Model.IDataItem)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetItemsByTaxon(System.Guid,System.Boolean,System.String,System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the items by taxon.
            </summary>
            <param name="taxonId">The taxon id.</param>
            <param name="isSingleTaxon">Determines whether the examined taxon is a single taxon or a collection of taxons.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="itemType">Type of the item.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="orderExpression">The order expression.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">The total count.</param>
             <returns>A collection of items that were filtered by Taxon.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetUrlTypeFor(System.Type)">
            <summary>
            Gets the actual type of the <see cref="T:Telerik.Sitefinity.GenericContent.Model.UrlData"/> implementation for the specified content type.
            </summary>
            <param name="urlType">Type of the URL.</param>
            <returns>The type of the <see cref="T:Telerik.Sitefinity.GenericContent.Model.UrlData"/> for the given <param name="itemType"/>.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            To be overridden by relevant providers (which involve security roots)
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.SetRootPermissions(Telerik.Sitefinity.Security.Model.SecurityRoot)">
            <summary>
            Sets the root permissions.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetSecurityRoot(System.Boolean)">
            <summary>
            Gets the security root.
            </summary>
            <param name="create">if set to <c>true</c> a security root will be created for the provider if there is no root.</param>
            <exception cref="T:Telerik.Sitefinity.Data.Decorators.MissingDecoratorException">Thrown if the providerDecorator is null.</exception>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CommitTransaction">
            <summary>
            Commits the provided transaction.
            
            Explanation for the permission sets/actions:
            Both blog details modification, and blog post update/create/delete are on the BlogPost.Manage action.
            (that is the BlogPost permission set, because it needs to affect all levels: root, blog and blog post).
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.FlushTransaction">
            <summary>
            Flush all dirty and new instances to the database and evict all instances from the local cache.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetQuery``1(System.Guid,System.Boolean,System.String,System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Executes an internal LINQ statement on the <paramref name="query"/> and returns the results
            </summary>
            <typeparam name="T">Type of the item contained in the <paramref name="query"/>.</typeparam>
            <param name="query">The collection to perform the internal LINQ statement on.</param>
            <param name="taxonId">The Id of the taxon.</param>
            <param name="isSingleTaxon">Whether or not one taxon is being used.</param>
            <param name="propertyName">The name of the property that should equal the <paramref name="taxonId"/></param>
            <param name="orderExpression">Expression which will order the collection to be returned.</param>
            <returns>The collection after the internal LINQ statement has been executed.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetItemFromUrl(System.Type,System.String,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.GetItemFromUrl(System.Type,System.String,System.Boolean,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="published">The published.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase._supportedPermissionSets">
            <summary>
            The collection of permission sets that is supported by this provider.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsDataProviderBase.IsDefault">
            <summary>
            Gets a value indicating whether this provider is default.
            </summary>
            <value>
            	<c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsDefinitions">
            <summary>
            This is a static class used to initialize the properties for all ContentView control views
            of supplied by default for the lists module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.CreateGenericBackendSectionsForListItems(Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DetailFormViewElement,Telerik.Sitefinity.Web.UI.Fields.Enums.FieldDisplayMode,Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade)">
            <summary>
            Creates the backend sections.
            </summary>
            <param name="detailView">The detail view.</param>
            <param name="displayMode">The display mode.</param>
            <param name="fluentDetailView">The fluent detail view.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.CreateListItemsBackendDialogs(Telerik.Sitefinity.Fluent.Definitions.MasterViewDefinitionFacade)">
            <summary>
            Creates the dialog bindings between commands and links/actions on the views.
            </summary>
            <param name="fluentFacade">The fluent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for ListItems on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendListView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the master backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem" /> view.
            </summary>
            <param name="fluentContentView">The fluent content view.</param>
            <returns>
            The master backend view element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem" />s.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendEditView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> editor view.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>The backend editor view element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/>s.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendInsertView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> creation view.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>The backend creation view element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/>s.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendDuplicateView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> duplicate view.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>The backend duplicate view element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/>s.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendPreviewView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> preview.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>The backend preview element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/>s.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendVersionPreviewView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem" /> version preview.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>
            The backend version preview element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem" />s.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsBackendVersionComparisonView(Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement)">
            <summary>
            Defines the backend <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> version comparison view.
            </summary>
            <param name="backendContentView">The root element to build this view on top of.</param>
            <returns>The backend version comparison view element for <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/>s.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListItemsFrontendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Define list items view definitions for the public side
            </summary>
            <param name="parent">Parent element.</param>
            <returns>Frontend config definition for the list items</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.CreateListItemsFrontendDialogs(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Creates the dialog bindings between commands and links/actions on the views.
            </summary>
            <param name="fluentFacade">The fluent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.CreateListsDialogs(Telerik.Sitefinity.Fluent.Definitions.MasterViewDefinitionFacade)">
            <summary>
            Creates the dialog bindings between commands and links/actions on the views.
            </summary>
            <param name="fluentFacade">The fluent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.CreateListsBackendSections(Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DetailFormViewElement,Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade)">
            <summary>
            Creates the lists backend sections.
            </summary>
            <param name="detailView">The detail view.</param>
            <param name="fluentDetailView">The fluent detail view.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListsBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for Lists on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListsBackendListView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend master grid view for all Lists.
            </summary>
            <param name="fluentContentView">The fluent content view.</param>
            <returns>
            The master grid view element.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListsBackendEditView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend List editor view.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>The backend edit view element.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.DefineListsBackendInsertView(Telerik.Sitefinity.Fluent.Definitions.ContentViewControlDefinitionFacade)">
            <summary>
            Defines the backend List creation view.
            </summary>
            <param name="fluentContentView">The root element to build this view on top of.</param>
            <returns>The backend create List view element.</returns>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitions.ResourceClassId">
            <summary>
            The resource class identifier
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> for the lists module
            in the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListsListViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the list view of the lists
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListEditViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the edit view of the lists
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListInsertViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the insert view of the lists
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListDuplicateViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the duplicate view of the lists
            module on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListEditItemViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the edit view of the list items
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListInsertItemViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the insert view of the list items
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListDuplicateItemViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the duplicate view of the list items
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListPreviewItemViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> for the view list items on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListItemsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> definition for the list items control
            on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendListItemsListViewName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition"/> definition for the list view of the
            list items on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.FrontendListItemsDefinitionName">
            <summary>
            Definition name for the frontend list items.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.BackendVersionPreviewViewName">
            <summary>
            Definition name for the frontend commments list.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.VersionComparisonViewName">
            <summary>
            Version Comparison View Name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.CreateItemCommandName">
            <summary>
            Name of the command used by the client side components to indicate that a new list item
            should be created.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.CreateGridItemCommandName">
            <summary>
            Name of the command used by the client side components to indicate that a new list item
            should be created from the MasterGridView link
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.listsClientMappedCommandNames">
            <summary>
            The mapped command names for the list views.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.listItemsClientMappedCommnadNames">
            <summary>
            The mapped command names for the list item views.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.ListsResourceClassId">
            <summary>
            The id of the resource class for Lists.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.LabelsResourceClassId">
            <summary>
            The id of the resource class for Labels.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.ListServiceUrl">
            <summary>
            The url for the List service.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.ListItemServiceUrl">
            <summary>
            The url for the ListItem service.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsDefinitionsConstants.ModuleName">
            <summary>
            The name of the Lists Module
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsManager">
            <summary>
            Manager class for the Lists module. This is the class that provides the API to be used when working with the Lists module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsManager"/> class.
            </summary>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsManager"/> class.
            </summary>
            <param name="providerName">
            The name of the provider. If empty string or null the default provider is set
            </param>
            <param name="transactionName">
            The name of a distributed transaction. If empty string or null this manager will use separate transaction.
            </param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsManager.ModuleName">
            <summary>
            Gets the name of the Lists module.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsManager.ProvidersSettings">
            <summary>
            Returns all providers from the configuration
            </summary>
            <value>Collection of providers</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetManager">
            <summary>
            This method will return a new instance of <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsManager"/> with the
            default provider.
            </summary>
            <returns>A manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetManager(System.String)">
            <summary>
            This method will return a new instance of <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsManager"/> with the
            specified provider.
            </summary>
            <param name="providerName">Name of the provider.</param>
            <returns>A manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetManager(System.String,System.String)">
            <summary>
            This method will return a new instance of <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsManager"/> with the
            specified provider and transaction name.
            </summary>
            <param name="providerName">Name of the provider.</param>
            <param name="transactionName">Name of the transaction.</param>
            <returns>A manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CreateItem(System.Type)">
            <summary>
            Create a new item with a random identity.
            </summary>
            <param name="itemType">The type of item to construct.</param>
            <returns>Created item instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CreateItem(System.Type,System.Guid)">
            <summary>
            Create a new item with the given identity.
            </summary>
            <param name="itemType">The type of item to construct.</param>
            <param name="id">The id to assign to the new item</param>
            <exception cref="T:System.NotSupportedException">Thrown if the <paramref name="itemType"/> is not supported.</exception>
            <returns>Created item instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CreateList">
            <summary>
            Create a new <c>List</c> and choose a random identity
            </summary>
            <returns>Created <c>List</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CreateList(System.Guid)">
            <summary>
            Create a new <c>List</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>List</c> identity</param>
            <returns>Created <c>List</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetList(System.Guid)">
            <summary>
            Search for a <c>List</c> by its identity
            </summary>
            <param name="id">Identity of the <c>List</c> to search for.</param>
            <returns>Found <c>List</c></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetLists">
            <summary>
            Get a queryable object for all <c>List</c>s
            </summary>
            <returns>Queryable object for all <c>List</c>s</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.DeleteList(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Mark a <c>List</c> for removal
            </summary>
            <param name="list">The <c>List</c> to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.DeleteList(System.Guid)">
            <summary>
            Mark a <c>List</c> for removal
            </summary>
            <param name="id">The identity of the <c>List</c> to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CreateListItem">
            <summary>
            Create a new <c>ListItem</c> and choose a random identity
            </summary>
            <returns>Created <c>ListItem</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CreateListItem(System.Guid)">
            <summary>
            Create a new <c>ListItem</c> with a explicitly specified identity
            </summary>
            <param name="id"><c>ListItem</c> identity</param>
            <returns>Created <c>ListItem</c> instance</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetListItem(System.Guid)">
            <summary>
            Search for a <c>ListItem</c> by its identity
            </summary>
            <param name="id">Identity of <c>ListItem</c> to search for.</param>
            <returns>Found <c>ListItem</c></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetListItems">
            <summary>
            Get a queryable object for all <c>ListItem</c>s
            </summary>
            <returns>Queryable object for all <c>ListItem</c>s</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.DeleteListItem(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Mark a <c>ListItem</c> for removal
            </summary>
            <param name="listItem">The <c>ListItem</c> to delete</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.DeleteListItem(System.Guid)">
            <summary>
            Mark a <c>ListItem</c> for removal
            </summary>
            <param name="id">The identity of the <c>ListItem</c> to delete</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsManager.DefaultProviderDelegate">
            <summary>
            Gets the default provider delegate.
            </summary>
            <value>The default provider delegate.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CheckIn(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Checks in the <c>List</c> in the temp state. <c>List</c> becomes master after the check in.
            </summary>
            <param name="item"><c>List</c> in temp state that is to be checked in.</param>
            <returns>A <c>List</c> in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CheckOut(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Checks out the <c>List</c> in master state. <c>List</c> becomes temp after the check out.
            </summary>
            <param name="item"><c>List</c> in master state that is to be checked out.</param>
            <returns>A <c>List</c> that was checked out in temp state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Edit(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Edits the <c>List</c> in live state. <c>List</c> becomes master after the edit.
            </summary>
            <param name="item"><c>List</c> in live state that is to be edited.</param>
            <returns>A <c>List</c> that was edited in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Publish(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Publishes the <c>List</c> in master state. <c>List</c> becomes live after the publish.
            </summary>
            <param name="item"><c>List</c> in master state that is to be published.</param>
            <returns>A content that was published.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Unpublish(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Unpublish a <c>List</c> in live state.
            </summary>
            <param name="item">Live <c>List</c> to unpublish.</param>
            <returns>Master (draft) <c>List</c>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Copy(Telerik.Sitefinity.Lists.Model.List,Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Copies the contents of a <c>List</c> to another <c>List</c>. Used primarily in content lifecycle management.
            </summary>
            <param name="source"><c>List</c> to copy from</param>
            <param name="destination"><c>List</c> post to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Schedule(Telerik.Sitefinity.Lists.Model.List,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a <c>List</c> to be published from one date to another
            </summary>
            <param name="item"><c>List</c> in master state</param>
            <param name="publicationDate">Point in time at which the <c>List</c> will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the <c>List</c> will no longer be visible on the public side or null if the item should never expire</param>
            <returns>A content that was scheduled.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetCheckedOutBy(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Returns ID of the user that checked out the <c>List</c>, or Guid.Empty if it is not checked out
            </summary>
            <param name="item"><c>List</c> to get the user ID it is locked by</param>
            <returns>ID of the user that checked out the <c>List</c> or Guid.Empty if the <c>List</c> is not checked out.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.IsCheckedOut(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item"><c>List</c> to test</param>
            <returns>True if the <c>List</c> is checked out, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.IsCheckedOutBy(Telerik.Sitefinity.Lists.Model.List,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item"><c>List</c> to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <returns>True if it was checked out by a user with the specified id, false otherwise</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetLive(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Gets the public (live) version of <paramref name="content"/>, if it exists
            </summary>
            <param name="content">The <c>List</c> to get live version for.</param>
            <returns>Public (live) version of <paramref name="content"/>, if it exists</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetTemp(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Get a temp for <paramref name="content"/>, if it exists.
            </summary>
            <param name="content"><c>List</c> item to get a temp for</param>
            <returns>Temp version of <paramref name="content"/>, if it exists.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetMaster(Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Accepts a List and returns a List in master state
            </summary>
            <param name="content">List whose master to get</param>
            <returns>
            If <paramref name="content"/> is master itself, returns content.
            Otherwise, looks up the master associated with <paramref name="content"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="content"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CheckIn(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CheckOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>A content that was checked out in temp state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Edit(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>A content that was edited in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Publish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
            <returns>A content that was published.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Unpublish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Copy(Telerik.Sitefinity.GenericContent.Model.Content,Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Copies the contents of a Content to another Content. Used primarily in content lifecycle management.
            </summary>
            <param name="source">Content to copy from</param>
            <param name="destination">Content post to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Schedule(Telerik.Sitefinity.GenericContent.Model.Content,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>
            <returns>A content that was scheduled.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <returns>ID of the user that checked out the item or Guid.Empty if the item is not checked out.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.IsCheckedOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <returns>True if the item is checked out, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.IsCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <returns>True if it was checked out by a user with the specified id, false otherwise</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetLive(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Gets the public (live) version of <paramref name="content"/>, if it exists
            </summary>
            <param name="content">Type of the content item</param>
            <returns>Public (live) version of <paramref name="content"/>, if it exists</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetTemp(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Get a temp for <paramref name="content"/>, if it exists.
            </summary>
            <param name="content">Content item to get a temp for</param>
            <returns>Temp version of <paramref name="content"/>, if it exists.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetMaster(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Accepts a Content and returns a Content in master state
            </summary>
            <param name="content">Content whose master to get</param>
            <returns>
            If <paramref name="content"/> is master itself, returns content.
            Otherwise, looks up the master associated with <paramref name="content"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="content"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CheckIn(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.CheckOut(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>A content that was checked out in temp state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Edit(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>A content that was edited in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Publish(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
            <returns>A list item that was published.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Unpublish(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Copy(Telerik.Sitefinity.Lists.Model.ListItem,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Copies the contents of a ListItem to another ListItem. Used primarily in content lifecycle management.
            </summary>
            <param name="source">ListItem to copy from</param>
            <param name="destination">ListItem post to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.Schedule(Telerik.Sitefinity.Lists.Model.ListItem,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>
            <returns>A content that was scheduled.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetCheckedOutBy(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <returns>ID of the user that checked out the item or Guid.Empty if the item is not checked out.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.IsCheckedOut(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <returns>True if the item is checked out, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.IsCheckedOutBy(Telerik.Sitefinity.Lists.Model.ListItem,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <returns>True if it was checked out by a user with the specified id, false otherwise</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetLive(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Gets the public (live) version of <paramref name="content"/>, if it exists
            </summary>
            <param name="content">Type of the content item</param>
            <returns>Public (live) version of <paramref name="content"/>, if it exists</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetTemp(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Get a temp for <paramref name="content"/>, if it exists.
            </summary>
            <param name="content">Content item to get a temp for</param>
            <returns>Temp version of <paramref name="content"/>, if it exists.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetMaster(Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Accepts a ListItem and returns a ListItem in master state
            </summary>
            <param name="content">ListItem whose master to get</param>
            <returns>
            If <paramref name="content"/> is master itself, returns content.
            Otherwise, looks up the master associated with <paramref name="content"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="content"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="content"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.MoveListItem(System.String[],System.String,System.String,System.String)">
            <summary>
            Moves the list item passed as first argument by the specified number of places, in the direction given by the
            direction parameter
            </summary>
            <param name="sourceContentIds">The list items to move.</param>
            <param name="parentId">The id of the parent for the list items.</param>
            <param name="providerName">The number of places to move.</param>
            <param name="direction">A value representing the direction in which the list item will be moved.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetItems``1">
            <summary>
            Gets a queryable collection of items based on <typeparamref name="TItem"/>
            </summary>
            <typeparam name="TItem">Generic Type of the queryable collection.</typeparam>
            <exception cref="T:System.NotSupportedException">Thrown if the <typeparamref name="TItem"/> type is not supported.</exception>
            <returns>A queryable collection of the given <typeparamref name="TItem"/> type.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsManager.GetConfigType">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsManager.ProviderNameDefaultPrefix">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsModule">
            <summary>
            The module class for the Sitefinity Lists module.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsModule.LandingPageId">
            <summary>
            Gets the landing page id for each module inherit from <see cref="T:Telerik.Sitefinity.Services.SecuredModuleBase"/> class.
            </summary>
            <value>The landing page id.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsModule.Managers">
            <summary>
            Gets the CLR types of all data managers provided by this module.
            </summary>
            <value>An array of <see cref="T:System.Type"/> objects.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.Initialize(Telerik.Sitefinity.Services.ModuleSettings)">
            <summary>
            Initializes the module with specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.InstallPages(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the pages for this module in Sitefinity system for the first time.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.InstallTaxonomies(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the taxonomies associated with the <c>ListsModule</c>.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.InstallConfiguration(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the configuration associated with the <c>ListsModule</c>.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.Upgrade(Telerik.Sitefinity.Abstractions.SiteInitializer,System.Version)">
            <summary>
            Upgrades this module from the specified version.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
            <param name="upgradeFrom">The version this module us upgrading from.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.GetModuleConfig">
            <summary>
            Gets the module config associated with <c>ListsModule</c>.
            </summary>
            <returns>The <c>ConfigSection</c> associated with this module.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.InitializeSortingExpressionSettings(Telerik.Sitefinity.Configuration.ConfigElementList{Telerik.Sitefinity.Data.Configuration.SortingExpressionElement})">
            <summary>
            Initializes the sorting expression settings.
            </summary>
            <param name="sortingExpressions"></param>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.ModuleName">
            <summary>
            Name of the lists module. (e.g. used in ListsManager)
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.ListsGroupId">
            <summary>
            The Id of the page nodes associated with ListsModule.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.TheLandingPageId">
            <summary>
            The page id for the List landing page.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.ListItemsPageId">
            <summary>
            The page id for the ListItem landing page.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.ResourceClassId">
            <summary>
            Localization resources' class Id for blogs
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.ListsContentViewControlId">
            <summary>
            Defines the control id for the ContentView inside the Lists screen.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.Lists.ListsModule.ListItemsContentViewControlId">
            <summary>
            Defines the control id for the ContentView inside the List items screen.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsModule.Telerik#Sitefinity#Modules#IExportableModule#ModuleName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsModule.Telerik#Sitefinity#Modules#IExportableModule#GetModuleMetaTypes">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsNodeFilter">
            <summary>
            Class that is responsible for establishing permissions for <c>List</c> and <c>ListItem</c>
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.Lists.ListsNodeFilter.IsNodeAccessPrevented(Telerik.Sitefinity.Web.PageSiteNode)">
            <summary>
            Determines whether or not access is allowed for the given <paramref name="pageNode"/>.
            </summary>
            <param name="pageNode">The page to check permissions for.</param>
            <returns>Whether or not access is allowed to the given <paramref name="pageNode"/>.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.Lists.ListsResources">
            <summary>
            Localization resources for the Lists module.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ModuleName">
            <summary>
            Name of the lists module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ModuleDescription">
            <summary>
            Description of the lists module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsNodeTitle">
            <summary>
            Title of the lists node
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsNodeDescription">
            <summary>
            Description of the lists node
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsTitle">
            <summary>
            Title of the lists page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsDescription">
            <summary>
            Description of the lists landing page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Lists">
            <summary>
            word: Lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsPluralTypeName">
            <summary>
            Messsage: type name Lists
            </summary>
            <value>Lists</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsSingleTypeName">
            <summary>
            Messsage: type name Lists
            </summary>
            <value>List</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsPluralTypeName">
            <summary>
            Messsage: type name ListItem
            </summary>
            <value>List Items</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsSingleTypeName">
            <summary>
            Messsage: type name ListItem
            </summary>
            <value>List Item</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateAList">
            <summary>
            phrase: Create a list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateThisList">
            <summary>
            phrase: Create a list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateAListItem">
            <summary>
            phrase: Create a list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EditList">
            <summary>
            phrase: Edit list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EditListItems">
            <summary>
            phrase: Edit list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EditListItem">
            <summary>
            phrase: Edit list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Title">
            <summary>
            word: Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.TitleColumn">
            <summary>
            word: Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.TitleExample">
            <summary>
            Example for the Title field of the lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.BackToAllListItems">
            <summary>
            phrase: Back to all list items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.BackToFrontend">
            <summary>
            phrase: Back to frontend
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SetPermissions">
            <summary>
            phrase: Set permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NoLists">
            <summary>
            phrase: No lists have been created yet
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NoListItems">
            <summary>
            phrase: No list items have been created yet
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateListItem">
            <summary>
            phrase: Create a list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateList">
            <summary>
            phrase: Create a list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.TitleCannotBeEmpty">
            <summary>
            phrase: Title cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListUrlName">
            <summary>
            phrase: List URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.MoreActions">
            <summary>
            phrase: More actions with lists items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItems">
            <summary>
            word: ListItems
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsTitle">
            <summary>
            Message: Items
            <value>Title for the list items</value>
            </summary>
            <value>Title for the list items</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsUrlTitle">
            <summary>
            Message: ListItems
            <value>URL for the list items</value>
            </summary>
            <value>URL for the list items</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsHtmlTitle">
            <summary>
            Message: List Items
            <value>Html title for the list items</value>
            </summary>
            <value>Html title for the list items</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsDescription">
            <summary>
            Description of the lists landing page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ViewAllLists">
            <summary>
            Message: View all lists
            </summary>
            <value>Text of the link that will show the view that lists all lists</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemTitleFormat">
            <summary>
            Messsage: <em>{0}</em>
            </summary>
            <value>Title of the list items command panel (the panel shown when viewing a list's items)</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ItemsLiteral">
            <summary>
            Word: items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AddNewListItem">
            <summary>
            Phrase: Add new list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeOwner">
            <summary>
            Phrase: Change owner
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsDataFields">
            <summary>
            Lists data fields
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListPluralItemName">
            <summary>
            Word: lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemDataFields">
            <summary>
            List item data fields
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemPluralItemName">
            <summary>
            Word: list items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.PermissionsForListItems">
            <summary>
            phrase: Permissions for list items
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListProperties" -->
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemLiteral">
            <summary>
            Message: List items
            </summary>
            <value>A literal for 'list item'</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.LastListItemLiteral">
            <summary>
            Message: Last list item
            </summary>
            <value>A literal for 'Last List Item'</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ForAllListsLabel">
            <summary>
            Title: For all lists ...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DeleteList">
            <summary>
            Message: Delete
            </summary>
            <value>Label for the 'delete list' command</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsWithoutListItems">
            <summary>
            Title: For all lists ...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CustomFieldsForListItems">
            <summary>
            phrase: Custom fields for list items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.BackToLists">
            <summary>
            phrase: Back to lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ManageListItems">
            <summary>
            phrase: Manage list items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsByCategory">
            <summary>
            Phrase: List items by category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsByTag">
            <summary>
            Phrase: List items by tag
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DisplayLastUpdatedListItems">
            <summary>
            The text of last updated list items sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Filter">
            <summary>
            word: Filter
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AllListItems">
            <summary>
            Phrase: All list items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.MyListItems">
            <summary>
            The text of my list items sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DraftListItems">
            <summary>
            The text of draft list items sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.PublishedListItems">
            <summary>
            The text of published list items sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ManageAlso">
            <summary>
            phrase: Manage also
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.GroupDeleteListItems">
            <summary>
            Message: Delete
            </summary>
            <value>Text of the button that performs a group delete for list items</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Publish">
            <summary>
            word: Publish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Unpublish">
            <summary>
            word: Unpublish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CloseDateFilter">
            <summary>
            Phrase: Close date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ByDateModified">
            <summary>
            phrase: by Date modified...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CommentsForListItems">
            <summary>
            phrase: Comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ClickToAddSummary">
            <summary>
            Phrase: Click to add summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CategoriesAndTags">
            <summary>
            phrase: Categories and tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.MoreOptionsURL">
            <summary>
            phrase: More options <em class='sfNote'>(URL, Comments)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.UrlNameCannotBeEmpty">
            <summary>
            Phrase: URL cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.UrlNameInvalidSymbols">
            <summary>
            Phrase: URL contains invalid symbols
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SaveChanges">
            <summary>
            Phrase: Save changes
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DeleteThisItem">
            <summary>
            Used in the actions menu in the Backend Detail View form
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsMasterAnchorViewFriendlyName">
            <summary>
            Phrase: List items - Anchor list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsMasterExpandableViewFriendlyName">
            <summary>
            Phrase: List items - Expandable list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsMasterExpandedViewFriendlyName">
            <summary>
            Phrase: List items - Expanded list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsMasterPageViewFriendlyName">
            <summary>
            Phrase: List items - Page list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsMasterSimpleViewFriendlyName">
            <summary>
            Phrase: List items - Simple list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListsDetailViewFriendlyName">
            <summary>
            Phrase: List items - single
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemViewPropertyEditorTitle">
            <summary>
            word: Lists
            </summary>
            <value>word: Lists</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EditListItemsSettings">
            <summary>
            Phrase: Edit List items settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SelectedListWasDeletedSelectAnotherList">
            <summary>
            phrase: The selected list was deleted. Please select another list.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SelectedListWasDeleted">
            <summary>
            phrase: The selected list was deleted
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NonexistentList">
            <summary>
            phrase: nonexistent list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsViewTitle">
            <summary>
            Messsage: List items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemsViewDescription">
            <summary>
            Messsage: ListItemsView title in the toolbox
            </summary>
            <value>Describes the ListItemsView title in the toolbox</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateThisListItem">
            <summary>
            phrase: Create this list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Order">
            <summary>
            word: Order
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Ordinal">
            <summary>
            word: Ordinal
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Manually">
            <summary>
            word: Manually
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AlphabeticallyAZ">
            <summary>
            word: Alphabetically (A-Z)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AlphabeticallyZA">
            <summary>
            word: Alphabetically (Z-A)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.LastModifiedTop">
            <summary>
            phrase: Last modified on top
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.LastModifiedBottom">
            <summary>
            phrase: Last modified on bottom
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ItemUrlName">
            <summary>
            phrase: Item URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Tags">
            <summary>
            word: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Category">
            <summary>
            word: Category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Language">
            <summary>
            Word: Language
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChooseLists">
            <summary>
            phrase: Choose Lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NarrowListTitle">
            <summary>
            phrase: Narrow by typing list title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChooseListItem">
            <summary>
            phrase: Choose a List Item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NarrowListItemTitle">
            <summary>
            phrase: Narrow by typing list item title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.WhichListItemsToDisplay">
            <summary>
            phrase: Which list items to display?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.FilterListItems">
            <summary>
            phrase: Filter list items...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.FromAllLists">
            <summary>
            phrase: From all lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.FromSelectedListsOnly">
            <summary>
            phrase: From selected lists only...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListNotSelected">
            <summary>
            phrase: List is not selected
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SelectList">
            <summary>
            phrase: Select a list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SelectLists">
            <summary>
            phrase: Select lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SetWhichListToDisplay">
            <summary>
            phrase: Set which list to display
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NarrowSelectionComplementoryText">
            <summary>
            Narrow selection complementory text
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AllPublishedListItemsFromSelectedLists">
            <summary>
            phrase: All published list items from selected lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.OneParticularListItemOnly">
            <summary>
            phrase: One particular list item only...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NoSelectedListItem">
            <summary>
            phrase: No selected list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SelectListItem">
            <summary>
            phrase: Select a list item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SelectionOfListItems">
            <summary>
            phrase: Selection of list items:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DisplayListItemsPublishedIn">
            <summary>
            phrase: Display list items published in...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListPermissions">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListPermissionsDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ViewList">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ViewListDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateListDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DeleteListPermissions">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DeleteListDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListOwner">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListOwnerDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListPermissions">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListPermissionsDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemPermissions">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ListItemPermissionsDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ViewListItem">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ViewListItemDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ManageListItem">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ManageList">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ManageListItemDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.UnlockListItem">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.UnlockListItemDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListItemOwner">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListItemOwnerDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListItemPermissions">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ChangeListItemPermissionsDescription">
            <summary>
            Used in the permissions dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.PagesWhereListItemsArePublished">
            <summary>
            Pages where list items are published.
            </summary>
            <value>Pages where list items are published.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.FilterLists">
            <summary>
            phrase: Filter lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ManageLists">
            <summary>
            word: Manage Lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AllLists">
            <summary>
            Phrase: All lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.MyLists">
            <summary>
            phrase: The text of my lists sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SettingsForLists">
            <summary>
            phrase: Settings for lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.PagesWhereListsArePublished">
            <summary>
            Pages where Lists are published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ReadMore">
            <summary>
            phrase: Read more...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Collapse">
            <summary>
            word: Collapse
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SortListItems">
            <summary>
            phrase: Sort items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.More">
            <summary>
            word: More
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ByHierarchy">
            <summary>
            phrase: By hierarchy
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NewCreatedFirst">
            <summary>
            phrase: Last created on top
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NewModifiedFirst">
            <summary>
            phrase: Last modified on top
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AlphabeticallyAsc">
            <summary>
            phrase: Alphabetically (A-Z)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AlphabeticallyDesc">
            <summary>
            phrase: Alphabetically (Z-A)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Actions">
            <summary>
            word: Actions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.View">
            <summary>
            word: View
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ViewProperties">
            <summary>
            word: Properties
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Content">
            <summary>
            word: Content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Edit">
            <summary>
            word: Edit
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Sitefinity.Modules.Lists.ListsResources.TitleAndProperties" -->
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EditSeparator">
            <summary>
            word: Edit...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Delete">
            <summary>
            word: Delete
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Permissions">
            <summary>
            word: Permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.PermissionsForLists">
            <summary>
            phrase: Permissions for lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Settings">
            <summary>
            word: Settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CustomFields">
            <summary>
            phrase: Custom Fields for lists
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.WhoCanPostComments">
            <summary>
            Phrase: Who can post comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.OnlyRegisteredUsers">
            <summary>
            Phrase: Only registered user
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Anyone">
            <summary>
            Phrase: Anyone
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CommentsApproved">
            <summary>
            Phrase: Comments have to be approved before appearing on the site
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EmailAuthor">
            <summary>
            Phrase: Email the post author whenever a new comment is submitted
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AllowTrackBacks">
            <summary>
            Phrase: Allow trackbacks
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AllowComments">
            <summary>
            phrase: Allow comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.WhichListsToDisplay">
            <summary>
            phrase: Which lists to display?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SimpleList">
            <summary>
            phrase: Simple list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExpandedList">
            <summary>
            phrase: Expanded list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExpandableList">
            <summary>
            phrase: Expandable list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.AnchorList">
            <summary>
            phrase: Anchor list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.PageList">
            <summary>
            phrase: Page list (open each item in separate page)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CreateNewTemplate">
            <summary>
            phrase: Create New Template
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.EditTemplate">
            <summary>
            phrase: Edit Selected Template...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.TitlesDisplayName">
            <summary>
            phrase: Titles
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.DetailsDisplayName">
            <summary>
            phrase: Details
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.TitlesAndContentsDisplayName">
            <summary>
            phrase: Titles and full content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.NoListsSelectedYet">
            <summary>
            Phrase: No lists selected yet
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Sort">
            <summary>
            phrase: Sort
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ByTitleAsc">
            <summary>
            phrase: By Title (A-Z)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ByTitleDesc">
            <summary>
            phrase: By Title (Z-A)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.MostUsedOnTop">
            <summary>
            phrase: Most used on top.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CustomSorting">
            <summary>
            Phrase: Custom sorting...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.SettingsForListItems">
            <summary>
            Phrase: Settings for list items.
            </summary>
            <value>Settings for list items.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.CommentsForLists">
            <summary>
            phrase: Comments for lists.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.Duplicate">
            <summary>
            Label for the 'duplicate list' command
            </summary>
            <value>Duplicate</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExternalLinkWorkingWithListsAndListsItems">
            <summary>
            Gets External Link: Working with lists and lists items in sitefinity
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExternalLinkInsertingListsInSitefinityPages">
            <summary>
            Gets External Link: Inserting lists in sitefinity pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExternalLinkUseListsInPages">
            <summary>
            Gets External Link: Use lists in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExternalLinkLabelUseListsInPages">
            <summary>
            Gets External Link Label: Use lists in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExternalLinkLabelAddCustomFields">
            <summary>
            Gets External Link Label: Add custom fields in list items
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Lists.ListsResources.ExternalLinkLabelWorkWithRevisionHistory">
            <summary>
            Gets External Link Label: Work with revision history
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.NewsContentTransfer">
            <summary>
            Implements functionality for converting items from news content in transferable format.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsContentTransfer.GetItemsQueries(Telerik.Sitefinity.Packaging.Content.ExportParams)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsContentTransfer.Area">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsContentTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsContentTransfer.Delete(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsContentTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsStructureTransfer.SupportedTypes">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsStructureTransfer.Area">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsStructureTransfer.IsAvailableForCurrentSite">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Configuration.NewsConfig">
            <summary>
            Represents the configuration section for News module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Configuration.NewsConfig.InitializeDefaultProviders(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Configuration.DataProviderSettings})">
            <summary>
            Initializes the default providers.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Configuration.NewsConfig.InitializeDefaultViews(Telerik.Sitefinity.Configuration.ConfigElementDictionary{System.String,Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement})">
            <summary>
            Initializes the default views.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Data.NewsMetadataSource">
            <summary>
            This class implements the News module OpenAccess ORM mappings
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider">
            <summary>
            Implements the news data layer with OpenAccess
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.CreateNewsItem">
            <summary>
            Create a new news item and choose a random identity
            </summary>
            <returns>Created NewsItem instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.CreateNewsItem(System.Guid)">
            <summary>
            Create a news item by explicitly set its identity
            </summary>
            <param name="pageId">Identity of the NewsItem to create</param>
            <returns>Created NewsItem instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.GetNewsItems">
            <summary>
            Get a query for all news items
            </summary>
            <returns>Queryable object for all news items</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.GetNewsItem(System.Guid)">
            <summary>
            Search for a news item by its identity
            </summary>
            <param name="pageId">Identity of the searched news item</param>
            <returns>
            Found news item, or <c>null</c> if it wasn't found.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.Delete(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Mark a news item for removal
            </summary>
            <param name="newItemToDelete">The news item to delete.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            To be overridden by relevant providers (which involve security roots)
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.GetMetaDataSource(Telerik.Sitefinity.Model.IDatabaseMappingContext)">
            <summary>
            Gets the meta data source.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.Context">
            <summary>
            Gets or sets the OpenAccess context. Alternative to Database.
            </summary>
            <value>The context.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.supportedPermissionSets">
            <summary>
            Use property instead of direct access.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.CurrentSchemaVersionNumber">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.OnUpgrading(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Data.OpenAccessNewsProvider.OnUpgraded(Telerik.Sitefinity.Data.OA.UpgradingContext,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.NewsDataProvider">
            <summary>
            Defines the basic functionality that should be implemented by news module data providers
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.CreateNewsItem">
            <summary>
            Create a new news item and choose a random identity
            </summary>
            <returns>Created NewsItem instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.CreateNewsItem(System.Guid)">
            <summary>
            Create a news item by explicitly set its identity
            </summary>
            <param name="pageId">Identity of the NewsItem to create</param>
            <returns>Created NewsItem instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetNewsItems">
            <summary>
            Get a query for all news items
            </summary>
            <returns>Queryable object for all news items</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetNewsItem(System.Guid)">
            <summary>
            Search for a news item by its identity
            </summary>
            <param name="id">Identity of the searched news item</param>
            <returns>Found news item, or <c>null</c> if it wasn't found.</returns>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.Delete(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Mark a news item for removal
            </summary>
            <param name="newsItemToDelete">The news item to delete.</param>        
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.CreateItem(System.Type,System.Guid)">
            <summary>
            Creates new data item.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="pageId">The pageId.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetItem(System.Type,System.Guid)">
            <summary>
            Gets the data item with the specified ID.
            An exception should be thrown if an item with the specified ID does not exist.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="pageId">The ID of the item to return.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetItemOrDefault(System.Type,System.Guid)">
            <summary>
            Get item by primary key without throwing exceptions if it doesn't exist
            </summary>
            <param name="itemType">Type of the item to get</param>
            <param name="id">Primary key</param>
            <returns>Item or default value</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetItems(System.Type,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the items.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="filterExpression">The filter expression.</param>
            <param name="orderExpression">The order expression.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <param name="totalCount">Total count of the items that are filtered by <paramref name="filterExpression"/></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.DeleteItem(System.Object)">
            <summary>
            Marks the provided persistent item for deletion.
            The item is deleted form the storage when the transaction is committed.
            </summary>
            <param name="item">The item to be deleted.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsDataProvider.RootKey">
            <summary>
            Gets a unique key for each data provider base.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetUrlTypeFor(System.Type)">
            <summary>
            Gets the actual type of the <see cref="T:Telerik.Sitefinity.GenericContent.Model.UrlData"/> implementation for the specified content type.
            </summary>
            <param name="urlType">Type of the URL.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsDataProvider.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permission set object titles.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.CommitTransaction">
            <summary>
            Commits the provided transaction.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.FlushTransaction">
            <summary>
            Flush all dirty and new instances to the database and evict all instances from the local cache.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.SetRootPermissions(Telerik.Sitefinity.Security.Model.SecurityRoot)">
            <summary>
            Sets the root permissions.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetItemFromUrl(System.Type,System.String,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetItemFromUrl(System.Type,System.String,System.Boolean,System.String@)">
            <summary>
            Gets the item from URL.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="url">The URL.</param>
            <param name="published">The published.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetKnownTypes">
            <summary>
            Get a list of types served by this manager
            </summary>
            <returns>Collection of known types for this manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.CreateLanguageData">
            <summary>
            Creates a language data item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data item
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetLanguageData(System.Guid)">
            <summary>
            Gets language data item by its id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDataProvider.GetLanguageData">
            <summary>
            Gets a query of all language data items
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.NewsDefinitions">
            <summary>
            This is a static class used to initialize the properties for all ContentView control views
            of supplied by default for the news module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDefinitions.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Sitefinity.Modules.News.NewsDefinitions"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDefinitions.DefineNewsBackendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for News on the backend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDefinitions.DefineNewsFrontendContentView(Telerik.Sitefinity.Configuration.ConfigElement)">
            <summary>
            Defines the ContentView control for News on the frontend
            </summary>
            <param name="parent">The parent configuration element.</param>
            <returns>A configured instance of <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Config.ContentViewControlElement"/>.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsDefinitions.CreateBackendSections(Telerik.Sitefinity.Web.UI.ContentUI.Views.Backend.Master.Config.DetailFormViewElement,Telerik.Sitefinity.Fluent.Definitions.DetailViewDefinitionFacade,Telerik.Sitefinity.Web.UI.Fields.Enums.FieldDisplayMode)">
            <summary>
            Creates the backend sections.
            </summary>
            <param name="detailView">The detail view.</param>
            <param name="fluentFacade">The fluent facade.</param>
            <param name="displayMode">The display mode.</param>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendDefinitionName">
            <summary>
            The backend definition name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendListViewName">
            <summary>
            The backend ListView name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendEditViewName">
            <summary>
            The backend edit view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendInsertViewName">
            <summary>
            The backend insert view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendPreviewViewName">
            <summary>
            The backend preview view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendVersionPreviewViewName">
            <summary>
            The backend version preview view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendDuplicateViewName">
            <summary>
            The backend duplicate view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.VersionComparisonView">
            <summary>
            Version Comparison View Name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendDefinitionName">
            <summary>
            The frontend definition name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendTitlesOnlyListViewName">
            <summary>
            The name for the frontend ListView with titles only
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendListViewName">
            <summary>
            The frontend ListView name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendTitlesDatesListViewName">
            <summary>
            The name of the frontend ListView with titles and dates.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendTitlesDatesContentsListViewName">
            <summary>
            The name of the frontend ListView with title, dates and full content.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendTitlesDatesSummariesListViewName">
            <summary>
            The name of the frontend ListView with titles, dates and summaries.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendDetailViewName">
            <summary>
            The frontend detail view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendFullNewsitemDetailViewName">
            <summary>
            The frontend full news item detail view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendEditViewName">
            <summary>
            The frontend edit view name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.BackendCommentsDefinitionName">
            <summary>
            Name of the <see cref="T:Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewControlDefinition"/> 
            definition for the ContentView control for news module comments on the backend.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.FrontendCommentsDefinitionName">
            <summary>
            Definition name for the frontend comments list.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.ModuleName">
            <summary>
            The module name
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsDefinitions.ResourceClassId">
            <summary>
            The resource class identifier
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.NewsManager">
            <summary>
            Manages the data layer for News
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.News.NewsManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.News.NewsManager"/> class.
            </summary>
            <param name="providerName">Name of the provider.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.News.NewsManager"/> class.
            </summary>
            <param name="providerName">
            The name of the provider. If empty string or null the default provider is set
            </param>
            <param name="transactionName">
            The name of a distributed transaction. If empty string or null this manager will use separate transaction.
            </param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsManager.DefaultProviderDelegate">
            <summary>
            Gets the default provider for this manager.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsManager.ModuleName">
            <summary>
            The name of the module that this manager belongs to.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsManager.ProvidersSettings">
            <summary>
            Returns all providers from the configuration
            </summary>
            <value>Collection of providers</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetManager">
            <summary>
            Get an instance of the news manager using the default provider
            </summary>
            <returns>Instance of news manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetManager(System.String,System.String)">
            <summary>
            Get an instance of the news manager by explicitly specifying the required provider to use
            </summary>
            <param name="providerName">Name of the provider to use, or null/empty string to use the default provider.</param>
            <param name="transactionName">Name of the transaction.</param>
            <returns>Instance of the blogs manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetManager(System.String)">
            <summary>
            Get an instance of the news manager by explicitly specifying the required provider to use
            </summary>
            <param name="providerName">Name of the provider to use, or null/empty string to use the default provider.</param>
            <returns>Instance of the news manager</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetItems``1">
            <summary>
            Gets the items.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <returns>A collection of items.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CreateNewsItem">
            <summary>
            Create a new news item and choose a random identity
            </summary>
            <returns>Created NewsItem instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CreateNewsItem(System.Guid)">
            <summary>
            Create a news item by explicitly set its identity
            </summary>
            <param name="id">Identity of the NewsItem to create</param>
            <returns>Created NewsItem instance.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetNewsItems">
            <summary>
            Get a query for all news items
            </summary>
            <returns>Queryable object for all news items</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetNewsItem(System.Guid)">
            <summary>
            Search for a news item by its identity
            </summary>
            <param name="id">Identity of the searched news item</param>
            <returns>Found news item, or <c>null</c> if it wasn't found.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Delete(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Mark a news item for removal
            </summary>
            <param name="newsItemToDelete">The news item to delete.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CheckIn(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="newsItem">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CheckOut(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="newsItem">Content in master state that is to be checked out.</param>
            <returns>A content that was checked out in temp state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Edit(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="newsItem">Content in live state that is to be edited.</param>
            <returns>A content that was edited in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Publish(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="newsItem">Content in master state that is to be published.</param>
            <returns>The published content item.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Unpublish(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="cnt">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Schedule(Telerik.Sitefinity.News.Model.NewsItem,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>
            <returns>The scheduled content item.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetCheckedOutBy(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <returns>ID of the user that checked out the item or Guid.Empty if the item is not checked out.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.IsCheckedOut(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <returns>True if the item is checked out, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.IsCheckedOutBy(Telerik.Sitefinity.News.Model.NewsItem,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <returns>True if it was checked out by a user with the specified id, false otherwise</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Copy(Telerik.Sitefinity.News.Model.NewsItem,Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Copy one news item to another for the uses of content lifecycle management
            </summary>
            <param name="source">News item to copy from</param>
            <param name="destination">News item to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Copy(Telerik.Sitefinity.GenericContent.Model.Content,Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Copy one news item to another for the uses of content lifecycle management
            </summary>
            <param name="source">News item to copy from</param>
            <param name="destination">News item to copy to</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetLive(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Gets the public (live) version of <paramref name="cnt"/>, if it exists
            </summary>
            <param name="cnt">Type of the content item</param>        
            <returns>Public (live) version of <paramref name="cnt"/>, if it exists</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetTemp(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Get a temp for <paramref name="cnt"/>, if it exists.
            </summary>        
            <param name="cnt">Content item to get a temp for</param>        
            <returns>Temp version of <paramref name="cnt"/>, if it exists.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetMaster(Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Accepts a content item and returns an item in master state
            </summary>        
            <param name="cnt">Content item whose master to get</param>        
            <returns>
            If <paramref name="cnt"/> is master itself, returns content.
            Otherwise, looks up the master associated with <paramref name="cnt"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="cnt"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CheckIn(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks in the content in the temp state. Content becomes master after the check in.
            </summary>
            <param name="item">Content in temp state that is to be checked in.</param>
            <returns>An item in master state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CheckOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Checks out the content in master state. Content becomes temp after the check out.
            </summary>
            <param name="item">Content in master state that is to be checked out.</param>
            <returns>
            A content that was checked out in temp state.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Edit(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Edits the content in live state. Content becomes master after the edit.
            </summary>
            <param name="item">Content in live state that is to be edited.</param>
            <returns>
            A content that was edited in master state.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Publish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Publishes the content in master state. Content becomes live after the publish.
            </summary>
            <param name="item">Content in master state that is to be published.</param>
            <returns>Published content item</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Unpublish(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Unpublish a content item in live state.
            </summary>
            <param name="item">Live item to unpublish.</param>
            <returns>Master (draft) state.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.Schedule(Telerik.Sitefinity.GenericContent.Model.Content,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Schedule a content item - to be published from one date to another
            </summary>
            <param name="item">Content item in master state</param>
            <param name="publicationDate">Point in time at which the item will be visible on the public side</param>
            <param name="expirationDate">Point in time at which the item will no longer be visible on the public side or null if the item should never expire</param>
            <returns>Scheduled content item</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns ID of the user that checked out the item, or Guid.Empty if it is not checked out
            </summary>
            <param name="item">Item to get the user ID it is locked by</param>
            <returns>
            ID of the user that checked out the item or Guid.Empty if the item is not checked out.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.IsCheckedOut(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Returns true or false, depending on whether the <paramref name="item"/> is checked out or not
            </summary>
            <param name="item">Item to test</param>
            <returns>
            True if the item is checked out, false otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.IsCheckedOutBy(Telerik.Sitefinity.GenericContent.Model.Content,System.Guid)">
            <summary>
            Checks if <paramref name="item"/> is checked out by user with a specified id
            </summary>
            <param name="item">Item to test</param>
            <param name="userId">Id of the user to check if he/she checked out <paramref name="item"/></param>
            <returns>
            True if it was checked out by a user with the specified id, false otherwise
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetLive(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Gets the public (live) version of <paramref name="cnt"/>, if it exists
            </summary>
            <param name="cnt">Type of the content item</param>
            <returns>
            Public (live) version of <paramref name="cnt"/>, if it exists
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetTemp(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Get a temp for <paramref name="cnt"/>, if it exists.
            </summary>
            <param name="cnt">Content item to get a temp for</param>
            <returns>
            Temp version of <paramref name="cnt"/>, if it exists.
            </returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetMaster(Telerik.Sitefinity.GenericContent.Model.Content)">
            <summary>
            Accepts a content item and returns an item in master state
            </summary>
            <param name="cnt">Content item whose master to get</param>
            <returns>
            If <paramref name="cnt"/> is master itself, returns content.
            Otherwise, looks up the master associated with <paramref name="cnt"/> and returns it.
            When there is no master, an exception will be thrown.
            </returns>
            <exception cref="T:System.InvalidOperationException">When no master can be found for <paramref name="cnt"/>.</exception>
            <exception cref="T:System.ArgumentNullException">When <paramref name="cnt"/> is <c>null</c>.</exception>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsManager.Lifecycle">
            <summary>
            Gets the lifecycle decorator
            </summary>
            <value>The lifecycle.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CreateLanguageData">
            <summary>
            Creates a language data instance
            </summary>
            <returns>The language data.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.CreateLanguageData(System.Guid)">
            <summary>
            Creates a language data instance
            </summary>
            <param name="id">The id.</param>
            <returns>The language data.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetLanguageData(System.Guid)">
            <summary>
            Gets language data instance by its Id
            </summary>
            <param name="id">The id.</param>
            <returns>The language data.</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsManager.RecycleBin">
            <summary>
            Gets the strategy that encapsulates the Recycle Bin operations 
            like moving an item to, and restoring from the Recycle Bin.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsManager.GetConfigType">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsManager.ProviderNameDefaultPrefix">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.NewsModule">
            <summary>
            Entry point for the News Module
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsModule.Managers">
            <summary>
            Gets the CLR types of all data managers provided by this module.
            </summary>
            <value>An array of <see cref="T:System.Type"/> objects.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsModule.LandingPageId">
            <summary>
            Gets the identity of the home (landing) page for the News module.
            </summary>
            <value>The landing page id.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsModule.ManagersInitializationMode">
            <summary>
            Gets the manager initialization mode.
            </summary>
            <value>The initialization mode.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Initialize(Telerik.Sitefinity.Services.ModuleSettings)">
            <summary>
            Initializes the service with specified settings.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Install(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the module specific logic.
            </summary>
            <param name="initializer">The site initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.InstallPages(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the pages.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.InstallTaxonomies(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs the taxonomies.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.GetModuleConfig">
            <summary>
            Gets the module config.
            </summary>
            <returns>The module config</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.InstallConfiguration(Telerik.Sitefinity.Abstractions.SiteInitializer)">
            <summary>
            Installs module's toolbox configuration.
            </summary>
            <param name="initializer">The initializer.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Upgrade(Telerik.Sitefinity.Abstractions.SiteInitializer,System.Version)">
            <summary>
            Upgrades this module from the specified version.
            </summary>
            <param name="initializer">The Site Initializer. A helper class for installing Sitefinity modules.</param>
            <param name="upgradeFrom">The version this module us upgrading from.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.ConfigurePublishing">
            <summary>
            Configures publishing.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.ModuleName">
            <summary>
            Name of the news module. (e.g. used in NewsManager)
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.NewsPageGroupId">
            <summary>
            Identity for the page group used by all pages in the news module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.HomePageId">
            <summary>
            Identity of the home (landing) page for the News module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.CommentsPageId">
            <summary>
            Identity for the comments page for the News module
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.ResourceClassId">
            <summary>
            Localization resources' class Id for news
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.NewsViewConfigKey">
            <summary>
            Defines the configuration key that the NewsView control will use to load its sub-views
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.PublicNewsViewConfigKey">
            <summary>
            Defines the configuration key that the PublicNewsView control will use to load its sub-views
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.NewsBackendContentViewControlId">
            <summary>
            The id of the news backed content view control.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.Modules.News.NewsModule.NewsCommentsBackendContentViewControlId">
            <summary>
            The id of the news backed content view control.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Telerik#Sitefinity#Web#UI#Comments#ICommentSettingsResolver#ResolveRootPageId(System.Type,System.Type)">
            <summary>
            Get the root page for the comments panel
            </summary>
            <param name="contentType">Content type to help resolving</param>
            <param name="commentType">Comment type to help resolving</param>
            <returns>Id of the page</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Telerik#Sitefinity#Web#UI#Comments#ICommentSettingsResolver#ResolveCommentsPageId(System.Type,System.Type)">
            <summary>
            Get the page where comments are displayed
            </summary>
            <param name="contentType">Content type</param>
            <param name="commentType">Comment type</param>
            <returns>ID of the page to resolve</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Telerik#Sitefinity#Web#UI#Comments#ICommentSettingsResolver#ResolveCommandPanelTitle(System.Type,System.Type)">
            <summary>
            Get the translated title of the comments command panel
            </summary>
            <param name="contentType">Content type</param>
            <param name="commentType">Comment type</param>
            <returns>Translated string.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.InitializeSortingExpressionSettings(Telerik.Sitefinity.Configuration.ConfigElementList{Telerik.Sitefinity.Data.Configuration.SortingExpressionElement})">
            <summary>
            Initializes the sorting expression settings.
            </summary>
            <param name="sortingExpressions">The sorting expression</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsModule.Telerik#Sitefinity#Modules#IExportableModule#ModuleName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsModule.Telerik#Sitefinity#Modules#IExportableModule#GetModuleMetaTypes">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.NewsResources">
            <summary>
            Localizable strings for the News module
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsResources.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Telerik.Sitefinity.Modules.News.NewsResources"/> class with the default <see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.NewsResources.#ctor(Telerik.Sitefinity.Localization.Data.ResourceDataProvider)">
            <summary>
            Initializes new instance of <see cref="T:Telerik.Sitefinity.Modules.News.NewsResources"/> class with the provided <see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/>.
            </summary>
            <param name="dataProvider"><see cref="T:Telerik.Sitefinity.Localization.Data.ResourceDataProvider"/></param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsResourcesTitle">
            <summary>
            Help
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsResourcesDescription">
            <summary>
            Contains localizable resources for help information such as UI elements descriptions, usage explanations, FAQ and etc.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CategoriesMetafieldTitle">
            <summary>
            Messsage: Category
            </summary>
            <value>Name of the metafield containing the categories taxonomy for news item.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CategoriesMetafieldDescription">
            <summary>
            Messsage: Defines the category of this content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.TagsMetafieldTitle">
            <summary>
            Messsage: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.TagsMetafieldDescription">
            <summary>
            Messsage: Defines the category of this content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsTitle">
            <summary>
            Messsage: NewsTitle
            </summary>
            <value>Title for the News module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsHtmlTitle">
            <summary>
            Messsage: NewsTitle
            </summary>
            <value>Title for the News module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsUrlName">
            <summary>
            Messsage: news
            </summary>
            <value>News URL name.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsDescription">
            <summary>
            Messsage: news
            </summary>
            <value>News Description.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PageGroupNodeTitle">
            <summary>
            Messsage: News
            </summary>
            <value>Title of the news page group.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PageGroupNodeDescription">
            <summary>
            Messsage: This is the page group that contains all pages for the news module.
            </summary>
            <value>News Page Group Description</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CommentsTitle">
            <summary>
            Messsage: Comments
            </summary>
            <value>Title of the comments page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CommentsHtmlTitle">
            <summary>
            Messsage: Comments
            </summary>
            <value>Html Title of the comments page.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CommentsUrlName">
            <summary>
            Messsage: Comments
            </summary>
            <value>Comments page url</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CommentsDescription">
            <summary>
            Messsage: This is a page for moderating comments for the news module.
            </summary>
            <value>Comments page description.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.BackToAllNewsItems">
            <summary>
            Messsage: Go back to all news.
            </summary>
            <value>Go back to all news.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.BackToItems">
            <summary>
            Back to News
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsCommandPanelTitle">
            <summary>
            Messsage: News
            </summary>
            <value>Title of the news command panel (the panel shown when viewing all news items).</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.AreYouSureYouWantToDeleteThisNewsItem">
            <summary>
            Are you sure you want to delete this news item?
            </summary>
            <value>Confirmation message when a news item is deleted.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CreateItem">
            <summary>
            Messsage: Create news item
            </summary>
            <value>Label of the dialog that creates a news item.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Create">
            <summary>
            Messsage: Create
            </summary>
            <value>Label for the buttons that create a news item.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Cancel">
            <summary>
            Messsage: Cancel
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CreateAndContinue">
            <summary>
            Messsage: Create and add another
            </summary>
            <value>Label of the dialog that creates a news item without closing the form.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItem_Data">
            <summary>
            Message: Data
            </summary>
            <value>"Data" section name for NewsItem</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItem_Advanced">
            <summary>
            Message: Behaviour
            </summary>
            <value>"Behaviour" section name for NewsItem</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItem_AuthorSourceThumbnail">
            <summary>
            Message: AdditionalInfo
            </summary>
            <value>"AdditionalInfo" section name for NewsItem</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.BackToAllItems">
            <summary>
            phrase: Back to all news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CreateNewItem">
            <summary>
            The title of the create new item dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.EditItem">
            <summary>
            The title of the edit item dialog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CreateThisItem">
            <summary>
            phrase: Create this news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItem_EditItem">
            <summary>
            phrase: Edit a news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.lTitle">
            <summary>
            Word: Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.lContent">
            <summary>
            Word: Content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.lSummary">
            <summary>
            Word: Summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.lCategory">
            <summary>
            Word: Category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.lTags">
            <summary>
            Word: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.TitleCannotBeEmpty">
            <summary>
            Phrase: Title cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ContentCannotBeEmpty">
            <summary>
            Phrase: Content cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ClickToAddSummary">
            <summary>
            Phrase: Click to add summary
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.AuthorExample">
            <summary>
            Phrase: This name will appear as the author of this article on the site.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.AuthorSourceThumbnail">
            <summary>
            Phrase: Additional info <em class='sfNote'>(Author, Source)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SourceName">
            <summary>
            Phrase: Source name
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SourceSite">
            <summary>
            Phrase: Source site
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SourceNameExample">
            <summary>
            Phrase: Where the news comes from (newspaper, website, magazine).<br /> Example: <em>New York Times</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SourceURL">
            <summary>
            Phrase: Source URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SourceURLExample">
            <summary>
            Phrase: The URL of the source you have entered <br />Example: <em>http://www.nytimes.com/</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.UrlName">
            <summary>
            Phrase: URL
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.UrlNameCannotBeEmpty">
            <summary>
            Phrase: URL cannot be empty
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Status">
            <summary>
            Word: Status
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PublishOn">
            <summary>
            Phrase: Publish on:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExpiresOn">
            <summary>
            Phrase: Expires on:
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Language">
            <summary>
            Word: Language
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsViewTitle">
            <summary>
            News View
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsViewDescription">
            <summary>
            Displays news articles in variety of ways, such as list, tabular and detailed views.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsToolboxSectionTitle">
            <summary>
            News
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsToolboxSectionDescription">
            <summary>
            Contains News module widgets.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItemsPluralTypeName">
            <summary>
            Messsage: type name News class
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItemsSingleTypeName">
            <summary>
            Messsage: type name News class
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Title">
            <summary>
            word: Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ManageNews">
            <summary>
            word: Manage News
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Categories">
            <summary>
            word: Categories
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Tags">
            <summary>
            word: Tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Comments">
            <summary>
            word: Comments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Author">
            <summary>
            word: Author
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Date">
            <summary>
            word: Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Publish">
            <summary>
            word: Publish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Unpublish">
            <summary>
            word: Unpublish
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Delete">
            <summary>
            word: Delete
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Search">
            <summary>
            phrase: Search news items...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.FilterNews">
            <summary>
            phrase: Filter news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ManageAlso">
            <summary>
            phrase: Manage also.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CommentsForNews">
            <summary>
            phrase: Comments for news.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Settings">
            <summary>
            phrase: News Settings.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Permissions">
            <summary>
            word: Permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PermissionsForNews">
            <summary>
            phrase: Permissions for news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SettingsForNews">
            <summary>
            phrase: Settings for news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PagesWhereNewsArePublished">
            <summary>
            Pages where News are published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CustomFields">
            <summary>
            phrase: Custom Fields for news.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.MoreActions">
            <summary>
            phrase: More actions with news items.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Actions">
            <summary>
            word: Actions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.View">
            <summary>
            word: View
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ViewProperties">
            <summary>
            word: Properties
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Duplicate">
            <summary>
            word: Duplicate
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Content">
            <summary>
            word: Content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.History">
            <summary>
            word: History
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.WhatDoYouWantToDoNow">
            <summary>
            phrase: What do you want to do now?
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NoNewsItems">
            <summary>
            phrase: No news items have been created yet.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Edit">
            <summary>
            word: <strong>Edit...</strong>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.MoreOptions">
            <summary>
            phrase: More Options
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.MoreOptionsURL">
            <summary>
            phrase: More options <em class='sfNote'>(URL, Comments)</em>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PublicationDate">
            <summary>
            phrase: Publication Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PublicationDateCannotBeEmpty">
            <summary>
            Phrase: Publication Date cannot be empty.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExpirationDate">
            <summary>
            phrase: Expiration Date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.DeleteThisItem">
            <summary>
            phrase: Delete this news item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SetPermissions">
            <summary>
            phrase: Set permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ReviewHistory">
            <summary>
            phrase: ReviewHistory
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SaveChanges">
            <summary>
            phrase: Save changes
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsViewPropertyEditorTitle">
            <summary>
            word: News
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.VersionComparison">
            <summary>
            Version comparison screeen Title
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CategoriesAndTags">
            <summary>
            phrase: Categories and tags
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Owner">
            <summary>
            word: Owner
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItemsByCategory">
            <summary>
            Phrase: News items by category
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsItemsByTag">
            <summary>
            Phrase: News items by tag
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.AllNews">
            <summary>
            Phrase: All news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.MyNews">
            <summary>
            The text of my news sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.PublishedNews">
            <summary>
            phrase: Published
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.DraftNews">
            <summary>
            word: Drafts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.WaitingForApproval">
            <summary>
            phrase: Awaiting approval
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.WaitingForReview">
            <summary>
            phrase: Awaiting approval
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.WaitingForPublishing">
            <summary>
            phrase: Awaiting approval
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ScheduledNews">
            <summary>
            word: Scheduled
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ByDateModified">
            <summary>
            phrase: Drafts
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CloseDateFilter">
            <summary>
            Phrase: Close date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.DisplayLastUpdatedNews">
            <summary>
            The text of last updated news sidebar button
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.SortNews">
            <summary>
            phrase: Sort news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.Sort">
            <summary>
            phrase: Sort
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.DefaultPage">
            <summary>
            Phrase: Default page
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.AllowComments">
            <summary>
            Phrase: AllowComments
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsSingularItemName">
            <summary>
            Phrase: news item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.EditNewsSettings">
            <summary>
            Phrase: Edit News settings
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsPluralItemName">
            <summary>
            Phrase: news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsMasterViewFriendlyName">
            <summary>
            Phrase: News - list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsDetailViewFriendlyName">
            <summary>
            Phrase: News - single
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewsDataFields">
            <summary>
            phrase: News data fields
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.UrlNameInvalidSymbols">
            <summary>
            Phrase: URL contains invalid symbols
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.LearnMoreWithVideoTutorials">
            <summary>
            Label: Learn more with video tutorials
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NoNewsSelectedYet">
            <summary>
            Phrase: No news selected yet
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.FullStory">
            <summary>
            Phrase: Full story
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ByTitleAsc">
            <summary>
            phrase: By Title (A-Z)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ByTitleDesc">
            <summary>
            phrase: By Title (Z-A)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewModifiedFirst">
            <summary>
            phrase: NewModifiedFirst
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.NewCreatedFirst">
            <summary>
            phrase: NewCreatedFirst
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.CustomSorting">
            <summary>
            Phrase: Custom sorting...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.IncludeInSitemap">
            <summary>
            phrase: Include in sitemap
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkCreateANewsItem">
            <summary>
            Gets External Link: Create a news item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkInsertingNewsItemsInPages">
            <summary>
            Gets External Link: Inserting news items in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkNewsRevisionHistory">
            <summary>
            Gets External Link: News revision history
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkUseNewsInPages">
            <summary>
            Gets External Link: Use news in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkLabelUseNewsInPages">
            <summary>
            Gets External Link Label: Use news in pages
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkLabelAddCustomFieldsInNews">
            <summary>
            Gets External Link Label: Add custom fields in news
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.LearnHowTo">
            <summary>
            Label: Learn how to...
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.NewsResources.ExternalLinkLabelWorkWithRevisionHistory">
            <summary>
            Gets External Link Label: Work with revision history
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService">
            <summary>
            This web service is used to work with <see cref="T:Telerik.Sitefinity.News.Model.NewsItem"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetContentItems(System.String)">
            <summary>
            Gets the content of a specified type from the given provider.
            </summary>
            <param name="providerName">
            The provider from which the content ought to be retrieved.
            </param>
            <returns>Query of the content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetChildContentItems(System.Guid,System.String)">
            <summary>
            Gets the child content of a specified content item from the given provider.
            </summary>
            <param name="parentId">Id of the parent content for which the children ought to be retrieved.</param>
            <param name="providerName">The provider from which the content ought to be retrieved.</param>
            <returns>Query of the child content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetContentItem(System.Guid,System.String)">
            <summary>
            Gets a single content.
            </summary>
            <param name="id">Id of the content to be retrieved.</param>
            <param name="providerName">Name of the provider from which the content ought to be retrieved.</param>
            <returns>A single content.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetParentContentItem(System.Guid,System.String)">
            <summary>
            Gets the parent content item.
            </summary>
            <param name="id">The id.</param>
            <param name="providerName">Name of the provider.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetManager(System.String)">
            <summary>
            Gets the manager to be used by the service. Concrete implementation of the service must provide this.
            </summary>
            <param name="providerName">Name of the provider with which the manager ought to be instantiated.</param>
            <returns>An instance of the manager.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.News.Model.NewsItem},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.News.Model.NewsItem},System.Collections.Generic.IDictionary{System.Guid,Telerik.Sitefinity.News.Model.NewsItem})">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <param name="liveItem">The dictionary  of live news related to the master news</param>
            <param name="tempItem">The dictionary  of temp news related to the master news</param>
            <returns>
            An enumerable of view model content objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemService.GetViewModelList(System.Collections.Generic.IEnumerable{Telerik.Sitefinity.News.Model.NewsItem},Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Gets the list of view model content.
            </summary>
            <param name="contentList">List of the actual content.</param>
            <param name="dataProvider">Instance of the data provider used to retrieve the items.</param>
            <returns>An enumerable of view model content objects.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel">
            <summary>
            View model class for the <see cref="T:Telerik.Sitefinity.News.Model.NewsItem"/> model.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel.#ctor(Telerik.Sitefinity.News.Model.NewsItem,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase,Telerik.Sitefinity.News.Model.NewsItem,Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
            <param name="liveItem">The live news related to the master news.</param>
            <param name="tempItem">The temp news related to the master news.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel.#ctor(Telerik.Sitefinity.News.Model.NewsItem,Telerik.Sitefinity.Modules.GenericContent.ContentDataProviderBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel"/> class.
            </summary>
            <param name="contentItem">The content item.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.Services.NewsItemViewModel.Author">
            <summary>
            Author of the news item
            </summary>
            <remarks>
            Please note that this is different from the item owner (the one who physically created the item).
            Author is rather the person who originally wrote the article.
            </remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Web.UI.Designers.NewsDesigner">
            <summary>
            News content view designer control
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.Designers.NewsDesigner.ScriptDescriptorTypeName">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.Designers.NewsDesigner.AddViews(System.Collections.Generic.Dictionary{System.String,Telerik.Sitefinity.Web.UI.ControlDesign.ControlDesignerView})">
            <summary>
            Adds the designer views.
            </summary>
            <param name="views">The views.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView">
            <summary>
            Represents a view that displays detailed information about a specified content item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.DetailDefinition">
            <summary>
            Gets the master definition.
            </summary>
            <value>The master definition.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.DetailsView">
            <summary>
            Gets the repeater for news list.
            </summary>
            <value>The repeater.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.DetailsView_ItemCreated(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemCreated event of the DetailsView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.DetailsSimpleView.DetailsView_ItemDataBound(System.Object,Telerik.Web.UI.RadListViewItemEventArgs)">
            <summary>
            Handles the ItemDataBound event of the DetailsView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Telerik.Web.UI.RadListViewItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView">
            <summary>
            Represents master view that displays a collection news items as list.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.LayoutTemplateName">
            <summary>
            Gets the name of the embedded layout template.
            </summary>
            <value></value>
            <remarks>
            Override this property to change the embedded template to be used with the dialog
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.LayoutTemplatePath">
            <summary>
            Gets or sets the layout template path.
            </summary>
            <value>The layout template path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.NewsList">
            <summary>
            Gets the repeater for news list.
            </summary>
            <value>The repeater.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.Pager">
            <summary>
            Gets the pager.
            </summary>
            <value>The pager.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.TitleLabel">
            <summary>
            Gets the reference to the control that represents the title of the field control.
            Return null if no such control exists in the template.
            </summary>
            <value>
            The control displaying the title of the item.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.InitializeControls(Telerik.Sitefinity.Web.UI.GenericContainer,Telerik.Sitefinity.Web.UI.ContentUI.Contracts.IContentViewDefinition)">
            <summary>
            Initializes the controls.
            </summary>
            <param name="container">The controls container.</param>
            <param name="definition">The content view definition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.InitializeListView(System.Linq.IQueryable{Telerik.Sitefinity.News.Model.NewsItem},System.Nullable{System.Int32})">
            <summary>
            Initializes the list view control with the items specified in the query.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.GetItemsList(System.Nullable{System.Int32}@)">
            <summary>
            Gets the items list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Modules.News.Web.UI.MasterListView.GetRequiredCoreScripts">
            <summary>
            Gets the required by the control, core library scripts predefined in the <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum.
            </summary>
            <example>
            // The defaults are:
            ScriptRef.MicrosoftAjax |
            ScriptRef.MicrosoftAjaxWebForms |
            ScriptRef.JQuery |
            ScriptRef.JQueryValidate |
            ScriptRef.JQueryCookie |
            ScriptRef.TelerikSitefinity |
            ScriptRef.QueryString;
            </example>
            <returns>A <see cref="T:Telerik.Sitefinity.Modules.Pages.ScriptRef"/> enum value indicating the mix of library scripts that the control requires.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Modules.News.Web.UI.NewsView">
            <summary>
            Represents ContentView control for news articles. 
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.NewsView.ModuleName">
            <summary>
            Gets or sets the name of the module which initialization should be ensured prior to rendering this control.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.NewsView.ControlDefinitionName">
            <summary>
            Gets or sets the name of the configuration definition for the whole control. From this definition
            control can find out all other configurations needed in order to construct views.
            </summary>
            <value>The name of the control definition.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.NewsView.MasterViewName">
            <summary>
            Gets or sets the name of the master view to be loaded when
            control is in the ContentViewDisplayMode.Master
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.NewsView.DetailViewName">
            <summary>
            Gets or sets the name of the detail view to be loaded when
            control is in the ContentViewDisplayMode.Detail
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.NewsView.EmptyLinkText">
            <summary>
            Gets or sets the text to be shown when the box in the designer is empty
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.News.Web.UI.NewsView.Title">
            <summary>
            Gets or sets the title of the control.
            </summary>
            <value>The title of the control.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Publishing.UI.Designers.BlogsContentOutPipeDesignerView.LayoutTemplateName">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Publishing.UI.Designers.BlogsContentOutPipeDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Publishing.UI.Designers.EventsContentOutPipeDesignerView.LayoutTemplateName">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Publishing.UI.Designers.EventsContentOutPipeDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Publishing.UI.Designers.ListsContentOutPipeDesignerView.LayoutTemplateName">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Modules.Publishing.UI.Designers.ListsContentOutPipeDesignerView.LayoutTemplatePath">
            <summary>
            Gets or sets the path of the external template to be used by the control.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Sitefinity.Blogs.Model.Blog">
            <summary>
            Represents a single blog
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.Blog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Blogs.Model.Blog"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.Blog.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Blogs.Model.Blog"/> class.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="id">The id.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.PostsCount">
            <summary>
            Gets the posts count.
            </summary>
            <value>The posts count.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.Permissions">
            <summary>
            Permissions for this blog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.InheritsPermissions">
            <summary>
            Defines if the implemented type inherits permissions from a parent object.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.LandingPageId">
            <summary>
            Identity of the blog's home page (landing page)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.CanInheritPermissions">
            <summary>
            Gets or sets a value indicating whether this instance can inherit permissions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permissionset object titles.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.SupportsContentLifecycle">
            <summary>
            Indicate whether content lifecycle is supported or not
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.CommentsConfigPath">
            <summary>
            Gets or sets the comments view config path that will be used to resolve configuration value.
            </summary>
            <value>The comments view config path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.ItemDefaultUrl">
            <summary>
            Gets or sets the default URL.
            </summary>
            <value>The default URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.Blog.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.Blog.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.Telerik#Sitefinity#GenericContent#Model#ILocatable#Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.Telerik#Sitefinity#IHasContentChildren#ChildItemType">
            <summary>
            Type of the child content
            </summary>        
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.Blog.Telerik#Sitefinity#IHasContentChildren#ChildContentItems">
            <summary>
            Get child content items
            </summary>        
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.Blog.GetChildItemType">
            <summary>
            Overridable logic for IHasContentChildren.ChildItemType
            </summary>
            <returns>Child content type</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.Blog.GetChildContentItems">
            <summary>
            Overridable logic for IHasContentChildren.ChildContentItems
            </summary>
            <returns>Child content items</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Blogs.Model.BlogUrlData">
            <summary>
            Represents URL data for an event item.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.BlogUrlData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Blogs.Model.BlogUrlData"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogUrlData.Parent">
            <summary>
            Gets or sets the parent page.
            </summary>
            <value>The page data.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Blogs.Model.BlogPost">
            <summary>
            Represents a post in a blog
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.BlogPost.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Blogs.Model.BlogPost"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.BlogPost.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Blogs.Model.BlogPost"/> class.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="id">Identity of the blog post.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Summary">
            <summary>
            Summary of the blog post's contents
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Content">
            <summary>
            Contents of the blog post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Permissions">
            <summary>
            Permissions for this blog post
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.InheritsPermissions">
            <summary>
            Defines if the implemented type inherits permissions from a parent object.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Parent">
            <summary>
            Get or sets the posts blog
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Telerik#Sitefinity#IHasParent#Parent">
            <summary>
            The instance of the <see cref="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Content"/> which represents the parent of the content implementing
            the <see cref="T:Telerik.Sitefinity.IHasParent"/> interface.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.CanInheritPermissions">
            <summary>
            Gets or sets a value indicating whether this instance can inherit permissions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permissionset object titles.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.CommentsConfigPath">
            <summary>
            Gets or sets the comments view config path that will be used to resolve configuration value.
            </summary>
            <value>The comments view config path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.ItemDefaultUrl">
            <summary>
            Gets or sets the default URL.
            </summary>
            <value>The default URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.Telerik#Sitefinity#IWorkflowItem#Id">
            <summary>
            Gets the id of the workflow item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.ApprovalTrackingRecordMap">
            <summary>
            Gets or sets the approval tracking records
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.ApprovalWorkflowState">
            <summary>
            Gets or sets the current state of the item in the approval workflow.
            </summary>
            <value></value>
            <remarks>
            Note that item can be in different states depending on the culture.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.PublishedTranslations">
            <summary>
            Gets a list of available translations (set for the Master and Live items).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.LanguageData">
            <summary>
            Collection of culture specific data - publication date, scheduled date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.IsDeleted">
            <summary>
            Gets or sets a value indicating whether the data item is marked as deleted.
            </summary>
            <value>Whether the data item is marked as deleted.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPost.WasPublished">
            <summary>
            Gets or sets a value indicating whether the item was published before it was moved to the Recycle Bin.
            </summary>
            <value>Whether the data item was published.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.BlogPost.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.BlogPost.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Blogs.Model.BlogPostUrlData">
            <summary>
            Represents URL data for an event item.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Blogs.Model.BlogPostUrlData.#ctor">
            <summary>
            Create a new blog post url data item and assign it a random ID
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Blogs.Model.BlogPostUrlData.Parent">
            <summary>
            Gets or sets the parent page.
            </summary>
            <value>The page data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The blog id.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.BlogFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid,Telerik.Sitefinity.Fluent.Content.BlogFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The blog id.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.BlogPosts">
            <summary>
            Creates a facade of the posts in the blog with a parent facade the current facade.
            </summary>
            <returns>
            The child facade of type <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade"/>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.BlogPost">
            <summary>
            Creates a facade of a post in the blog with a parent facade the current facade.
            </summary>
            <returns>
            The child facade of type <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostFacade"/>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogFacade.BlogPost(System.Guid)">
            <summary>
            Creates a facade of the given post in the blog with a parent facade the current facade.
            </summary>
            <param name="itemId">The id of the post.</param>
            <returns>
            The child facade of type <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostFacade"/>.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The post id.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.BlogFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid,Telerik.Sitefinity.Fluent.Content.BlogFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The post id.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.BlogFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Linq.IQueryable{Telerik.Sitefinity.Blogs.Model.BlogPost},Telerik.Sitefinity.Fluent.Content.BlogFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogPostsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="items">The items that the facade will work with.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogsFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.BlogsFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.BlogsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Linq.IQueryable{Telerik.Sitefinity.Blogs.Model.Blog},Telerik.Sitefinity.Fluent.Content.BlogsFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.BlogsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="items">The items that the facade will work with.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The content id.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.EventFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid,Telerik.Sitefinity.Fluent.Content.EventFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The content id.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventsFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.EventsFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.EventsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Linq.IQueryable{Telerik.Sitefinity.Events.Model.Event},Telerik.Sitefinity.Fluent.Content.EventsFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.EventsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="items">The items that the facade will work with.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The content id.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.NewsItemFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Guid,Telerik.Sitefinity.Fluent.Content.NewsItemFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="itemId">The content id.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemsFacade"/> class.
            </summary>
            <param name="appSettings">
            The app settings that configure the way fluent API will function.
            </param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,Telerik.Sitefinity.Fluent.Content.NewsItemsFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.Content.NewsItemsFacade.#ctor(Telerik.Sitefinity.Fluent.AppSettings,System.Linq.IQueryable{Telerik.Sitefinity.News.Model.NewsItem},Telerik.Sitefinity.Fluent.Content.NewsItemsFacade)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.Content.NewsItemsFacade"/> class.
            </summary>
            <param name="appSettings">The app settings that configure the way fluent API will function.</param>
            <param name="items">The items that the facade will work with.</param>
            <param name="parentFacade">The parent facade.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1">
            <summary>
            Manages draft state of blog posts
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostDraftFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1">
            <summary>
            Manages a set of blog posts
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Linq.IQueryable{Telerik.Sitefinity.Blogs.Model.BlogPost})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="items">Content items to be the initial state of the facade.</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPluralFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPublicFacade`1">
            <summary>
            Manages the public state of a blog post
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPublicFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPublicFacade`1.Comment">
            <summary>
            Get a facade that manages single comment entries
            </summary>
            <returns>Facade that manages single comments</returns>      
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPublicFacade`1.Comments">
            <summary>
            Get a facade that manages this post's comments
            </summary>
            <returns>Facade that manages this post's comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPublicFacade`1.Comment(System.Guid)">
            <summary>
            Get a comment by ID
            </summary>
            <param name="id">ID of the comment to get</param>
            <returns>Facade that manages individual comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostPublicFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1">
            <summary>
            Manages the temp state of a blog post
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Blogs.Model.BlogPost)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogPostTempFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1">
            <summary>
            Manages a collection of blogs
            </summary>
            <typeparam name="TParentFacade"></typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Linq.IQueryable{Telerik.Sitefinity.Blogs.Model.Blog})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="items">Initial set of items.</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> or <paramref name="items"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>     
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsPluralFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1">
            <summary>
            Manages single blogs
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">Content item id.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception> 
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Blogs.Model.Blog)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>      
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.BlogPosts">
            <summary>
            Manages the collection of blog posts belonging to this blog
            </summary>
            <returns>Facade for managing a collection of blog posts</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.CreateBlogPost">
            <summary>
            Creates the blog post.
            </summary>
            <returns>Facade for managing a single blog post</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.BlogsSingularFacade`1.CreateBlogPost(System.Guid)">
            <summary>
            Creates the blog post with specified ID.
            </summary>
            <param name="blogPostId">The blog post id.</param>
            <returns>Facade for managing a single blog post</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1">
            <summary>
            Manages the draft state of an event
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>  
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventDraftFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1">
            <summary>
            Manages the public state of an event
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
            <exception cref="T:System.ArgumentOutOfRangeException">When <paramref name="itemID"/> is empty Guid</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>     
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.Comment">
            <summary>
            Get a facade that manages single comment entries
            </summary>
            <returns>Facade that manages single comments</returns>      
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.Comment(System.Guid)">
            <summary>
            Get a comment by ID
            </summary>
            <param name="id">ID of the comment to get</param>
            <returns>Facade that manages individual comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.Comments">
            <summary>
            Get a facade that manages this event's comments
            </summary>
            <returns>Facade that manages this event's comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventPublicFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1">
            <summary>
            Manages a set of events
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Linq.IQueryable{Telerik.Sitefinity.Events.Model.Event})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="items">Initial set of items.</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> or <paramref name="items"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>    
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventsPluralFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1">
            <summary>
            Manages the public state of an event
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
            <exception cref="T:System.ArgumentOutOfRangeException">When <paramref name="itemID"/> is empty Guid</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Events.Model.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>     
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.EventTempFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1">
            <summary>
            Manages draft state of list items
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemDraftFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1">
            <summary>
            Manages a set of list items
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Linq.IQueryable{Telerik.Sitefinity.Lists.Model.ListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="items">Content items to be the initial state of the facade.</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPluralFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1">
            <summary>
            Manages the public state of a list item
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">Id of the list item to work with.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="itemID"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Id of the list item to work with.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemPublicFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1">
            <summary>
            Manages the temp state of a list item
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the ListItem to work with.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="itemID"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Lists.Model.ListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListItemTempFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1">
            <summary>
            Manages a collection of lists
            </summary>
            <typeparam name="TParentFacade"></typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Linq.IQueryable{Telerik.Sitefinity.Lists.Model.List})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="items">Initial set of items.</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> or <paramref name="items"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>     
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsPluralFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1">
            <summary>
            Manages single list
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">List id.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="itemID"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception> 
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.Lists.Model.List)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>      
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.ListItems">
            <summary>
            Manages the collection of list items belonging to this list
            </summary>
            <returns>Facade for managing a collection of list items</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.ListsSingularFacade`1.CreateListItem">
            <summary>
            Creates the list item.
            </summary>
            <returns>Facade for managing a single list item</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1">
            <summary>
            Manage the draft state of a news item
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
            <exception cref="T:System.ArgumentOutOfRangeException">When <paramref name="itemID"/> is empty Guid</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>  
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemDraftFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1">
            <summary>
            Manage the public state of a news item
            </summary>
            <typeparam name="TParentFacade">The type of the parent facade.</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
            <exception cref="T:System.ArgumentOutOfRangeException">When <paramref name="itemID"/> is empty Guid</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>  
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.Comment">
            <summary>
            Get a facade that manages single comment entries
            </summary>
            <returns>Facade that manages single comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.Comment(System.Guid)">
            <summary>
            Get a comment by ID
            </summary>
            <param name="id">ID of the comment to get</param>
            <returns>Facade that manages individual comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.Comments">
            <summary>
            Get a facade that manages this news item's comments
            </summary>
            <returns>Facade that manages this news item's comments</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemPublicFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1">
            <summary>
            Manage the temp state of a news item
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="itemID">ID of the content item that is to be initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>       
            <exception cref="T:System.ArgumentOutOfRangeException">When <paramref name="itemID"/> is empty Guid</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,Telerik.Sitefinity.News.Model.NewsItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="item">Content item to be the initial state of the facade.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="settings"/> or <paramref name="item"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>  
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsItemTempFacade`1.Versioning">
            <summary>
            Manage this item's versions
            </summary>
            <returns>Versioning facade</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1">
            <summary>
            Manage a collection of news items
            </summary>
            <typeparam name="TParentFacade">Type of the parent facade</typeparam>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1.#ctor(Telerik.Sitefinity.Fluent.AppSettings,`0,System.Linq.IQueryable{Telerik.Sitefinity.News.Model.NewsItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1"/> class.
            </summary>
            <param name="settings">The fluent API settings to use for this facade</param>
            <param name="parentFacade">The parent facade. Can be null</param>
            <param name="items">Initial set of items.</param>
            <exception cref="!:ArgumentNullException">When <paramref name="settings"/> or <paramref name="items"/> is null</exception>
            <exception cref="!:ArgumentException">When <paramref name="settings"/>'s transaction name is null or empty</exception>    
        </member>
        <member name="M:Telerik.Sitefinity.Fluent.ContentFluentApi.NewsPluralFacade`1.InitializeManager">
            <summary>
            Create a new instance of the manager in a named transaction using <see cref="!:settings"/>
            </summary>
            <returns>Instance of this facade's manager</returns>
            <remarks>This is called internally by <see cref="!:GetManager"/>. Do not call this manually unless you override GetManager as well.</remarks>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.BlogsContentInPipeDescProvider.GetBlogContentTitles(Telerik.Sitefinity.Publishing.Model.SitefinityContentPipeSettings)">
            <summary>
            Gets the blog content titles.
            </summary>
            <param name="contentSettings">The content settings.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.EventsContentInPipeDescProvider.GetCalendarContentTitles(Telerik.Sitefinity.Publishing.Model.SitefinityContentPipeSettings)">
            <summary>
            Gets the calendar content titles.
            </summary>
            <param name="contentSettings">The content settings.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.ListsContentInPipeDescProvider.GetListContentTitles(Telerik.Sitefinity.Publishing.Model.SitefinityContentPipeSettings)">
            <summary>
            Gets the list content titles.
            </summary>
            <param name="contentSettings">The content settings.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Sitefinity.Publishing.Web.UI.Designers.BlogsContentSelectorsPipeDesignerView.BlogsManager">
            <summary>
            Gets the blogs manager.
            </summary>
            <value>The blogs manager.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.Web.UI.Designers.BlogsContentSelectorsPipeDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.Web.UI.Designers.BlogsContentSelectorsPipeDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="P:Telerik.Sitefinity.Publishing.Web.UI.Designers.EventsContentSelectorsPipeDesignerView.EventsManager">
            <summary>
            Gets the events manager.
            </summary>
            <value>The events manager.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.Web.UI.Designers.EventsContentSelectorsPipeDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.Web.UI.Designers.EventsContentSelectorsPipeDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="P:Telerik.Sitefinity.Publishing.Web.UI.Designers.ListsContentSelectorsPipeDesignerView.ListsManager">
            <summary>
            Gets the lists manager.
            </summary>
            <value>The lists manager.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.Web.UI.Designers.ListsContentSelectorsPipeDesignerView.GetScriptDescriptors">
            <summary>
            Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptDescriptor"/> objects.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.Publishing.Web.UI.Designers.ListsContentSelectorsPipeDesignerView.GetScriptReferences">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference"/> objects that define script resources that the control requires.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> collection of <see cref="T:System.Web.UI.ScriptReference"/> objects.
            </returns>
        </member>
        <member name="T:Telerik.Sitefinity.Events.Model.EventsExtensions">
            <summary>
            Extension methods which extend Sitefinity type <see cref="T:Telerik.Sitefinity.Events.Model.Calendar"/> with helper methods.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.EventsExtensions.GetEvents(Telerik.Sitefinity.Events.Model.Calendar)">
            <summary>
            Gets all events in certain calendar 
            </summary>
            <param name="calendar">The calendar item</param>
            <returns>All evennts in certain calendar</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.EventsExtensions.GetOccurrences(Telerik.Sitefinity.Events.Model.Event)">
            <summary>
             Gets all occurrences of an event 
            </summary>
            <param name="eventItem">The event item</param>
            <returns>All occurrences of an event</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.EventsExtensions.GetOccurrences(Telerik.Sitefinity.Events.Model.Event,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets all occurrences of an event for the specified period of time
            </summary>
            <param name="eventItem">The event item</param>
            <param name="startDate">The start date of the period</param>
            <param name="endDate">The end date of the period</param>
            <returns>All occurrences of an event for the specified period of time</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Events.Model.Calendar">
            <summary>
            Represents a single calendar
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Events.Model.Calendar"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Events.Model.Calendar"/> class.
            </summary>
            <param name="appName">Name of the application.</param>
            <param name="id">The id.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.DateCreated">
            <summary>
            Gets or sets the date and time the calendar was created.
            </summary>
            <value>The date created.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Title">
            <summary>
            Title of the calendar item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Description">
            <summary>
            Gets or sets the description of this content.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.ChildItemType">
            <summary>
            Type of the child content
            </summary>        
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.ChildContentItems">
            <summary>
            Get child content items
            </summary>        
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.GetChildItemType">
            <summary>
            Overridable logic for IHasContentChildren.ChildItemType
            </summary>
            <returns>Child content type</returns>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.GetChildContentItems">
            <summary>
            Overridable logic for IHasContentChildren.ChildContentItems
            </summary>
            <returns>Child content items</returns>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Transaction">
            <summary>
            The transaction this object belongs to or null
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Provider">
            <summary>
            The data provider this item was instantiated with.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.LastModified">
            <summary>
            Gets or sets the time this item was last modified.
            </summary>
            <value>The last modified time.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.ApplicationName">
            <summary>
            Gets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Owner">
            <summary>
            Gets or sets the Owner property
            </summary>
            <value>A <see cref="T:System.Guid"/> representing the ID of the owner.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.UrlName">
            <summary>
            Gets or sets the name used when generating URLs for this item.
            </summary>
            <value>The name of that appears on the URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.AvailableCultures">
            <summary>
            Gets cultures available for this item.
            </summary>
            <value>The available cultures.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.AvailableLanguages">
            <summary>
            Gets languages available for this item.
            </summary>
            <value>The available languages.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.Telerik#Sitefinity#Model#IHasTitle#GetTitle(System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.PublicationDate">
            <summary>
            Get or sets the date and time when the item is going to be published (publicly available).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Calendar.ExpirationDate">
            <summary>
            Get or sets the date and time when the item is going to be unpublished.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Calendar.GetKey">
            <summary>
            Gets the key of the cached object.
            </summary>
            <returns>
            The unique identifier of the cached object.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Telerik.Sitefinity.Events.Model.CalendarUrlData">
            <summary>
            Represents URL data for an calendar item.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.CalendarUrlData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Events.Model.CalendarUrlData"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.CalendarUrlData.Parent">
            <summary>
            Gets or sets the parent page.
            </summary>
            <value>The page data.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Events.Model.Event">
            <summary>
            Represents an event
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Event.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Events.Model.Event"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Event.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Events.Model.Event"/> class.
            </summary>
            <param name="appName">Name of the application.</param>
            <param name="id">The id.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.EventStart">
            <summary>
            Gets or sets the start date/time of the event in Utc.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.EventEnd">
            <summary>
            Gets or sets the end date/time of the event in Utc.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.EventStartUtcOffset">
            <summary>
            Gets the Utc offset of the event start regarding to the TimeZoneId property.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.EventEndUtcOffset">
            <summary>
            Gets the Utc offset of the event end regarding to the TimeZoneId property.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ContactEmail">
            <summary>
            Gets or sets the contact email for the event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ContactWeb">
            <summary>
            Gets or sets the contact website for the event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Street">
            <summary>
            Gets or sets the street of the event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.City">
            <summary>
            Gets or sets the city of the event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Country">
            <summary>
            Gets or sets the country of the event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.State">
            <summary>
            Gets or sets the state of the event. (US only)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ContactName">
            <summary>
            Gets or sets the contact name for the event. (US only)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ContactCell">
            <summary>
            Gets or sets the contact cell phone for the event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ContactPhone">
            <summary>
            Gets or sets the contact phone for the event.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Content">
            <summary>
            Gets or sets the event content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Summary">
            <summary>
            Summary of the event's contents
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Parent">
            <summary>
            Gets or sets the event's parent calendar
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.IsRecurrent">
            <summary>
            Gets or sets whether the event contains any recurrency logic
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.RecurrenceExpression">
            <summary>
            Gets or sets the recurrence expression associated with the event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.TimeZoneId">
            <summary>
            Gets or sets the timezone id associated with the event
            </summary>
            <remarks>
            This property is used for persisting the timezone chosen when creating an Event. The value of this property
            is important for recurrent events because it is used in recurrence expressions and DST as well.
            The TimeZoneId is a key string that uniquely identifies a particular time zone. It corresponds to the subkeys of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zone.
            The TimeZoneId can be set to Utc, the Sitefinity UI TimeZone or any other string representing a valid time zone. 
            You can find a list of valid time zone ids under the "Name of the Time Zone" column on this page http://msdn.microsoft.com/en-us/library/ms912391%28v=winembedded.11%29.aspx.
            Here is sample code how you can set the TimeZoneId to the Sitefinity UI TimeZone: event.TimeZoneId = UserManager.GetManager().GetUserTimeZone();
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.AllDayEvent">
            <summary>
            Gets or sets whether the current event lasts during the whole day
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Location">
            <summary>
            Gets or sets the location of the current event
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ParentId">
            <summary>
            Gets the calendar id. Used only for client binding.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.AllDayEventEnd">
            <summary>
            Gets the normalized event end. 
            We add an extra hour to the event end date when event is all day in order to have RadCalendar, 
            iCal, Google and Outlook export works properly. 
            </summary>
            <value>The normalized event</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.CommentsConfigPath">
            <summary>
            Gets or sets the comments view config path that will be used to resolve configuration value.
            </summary>
            <value>The comments view config path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ItemDefaultUrl">
            <summary>
            Gets or sets the default URL.
            </summary>
            <value>The default URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Permissions">
            <summary>
            A set of permissions for this item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.InheritsPermissions">
            <summary>
            Indicates if this profile inherits permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.CanInheritPermissions">
            <summary>
            Gets or sets a value indicating whether this instance can inherit permissions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permissionset object titles.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Telerik#Sitefinity#IWorkflowItem#Id">
            <summary>
            Gets the id of the workflow item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ApprovalTrackingRecordMap">
            <summary>
            Gets or sets the approval tracking records
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.ApprovalWorkflowState">
            <summary>
            Gets or sets the current state of the item in the approval workflow.
            </summary>
            <value></value>
            <remarks>
            Note that item can be in different states depending on the culture.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.PublishedTranslations">
            <summary>
            Gets a list of available translations (set for the Master and Live items).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.LanguageData">
            <summary>
            Collection of culture specific data - publication date, scheduled date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.IsDeleted">
            <summary>
            Gets or sets a value indicating whether the data item is marked as deleted.
            </summary>
            <value>
            Whether the data item is marked as deleted.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.WasPublished">
            <summary>
            Gets or sets a value indicating whether the item was published before it was moved to the Recycle Bin.
            </summary>
            <value>Whether the data item was published.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.Event.Telerik#Sitefinity#IHasIDataItemParent#ItemParent">
            <summary>
            The instance of the <see cref="P:Telerik.Sitefinity.Events.Model.Event.Content"/> which represents the parent of the content implementing
            the <see cref="T:Telerik.Sitefinity.IHasParent"/> interface.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Event.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Event.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Event.Serialize(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Serializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <param name="serializedObject">The serialized object.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.Event.Deserialize(System.Object@,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <param name="serializedObject">The serialized object.</param>
        </member>
        <member name="T:Telerik.Sitefinity.Events.Model.EventUrlData">
            <summary>
            Represents URL data for an event item.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Events.Model.EventUrlData.#ctor">
            <summary>
            Create new event url data and assign a random ID
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Events.Model.EventUrlData.Parent">
            <summary>
            Gets or sets the parent page.
            </summary>
            <value>The page data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.NewsItem(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a single instance of NewsItem.
            </summary>
            <returns>An instance of <see cref="!:NewsItemFacade"/> that provides fluent API for working with single instance of NewsItem.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.NewsItem(Telerik.Sitefinity.Fluent.FluentSitefinity,System.Guid)">
            <summary>
            Provides the methods for working with a single instance of NewsItem.
            </summary>
            <param name="itemId">The id of the NewsItem.</param>
            <returns>
            An instance of <see cref="!:NewsItemFacade"/> that provides fluent API for working with single instance of NewsItem.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.NewsItems(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a collection of NewsItems.
            </summary>
            <returns>An instance of <see cref="!:NewsItemsFacade"/> that provides fluent API for working with multiple NewsItems.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Blog(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a single instance of Blog.
            </summary>
            <returns>An instance that provides fluent API for working with single instance of Blog.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Blog(Telerik.Sitefinity.Fluent.FluentSitefinity,System.Guid)">
            <summary>
            Provides the methods for working with a single instance of Blog.
            </summary>
            <param name="blogId">The id of the Blog.</param>
            <returns>
            An instance that provides fluent API for working with single instance of Blog.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Blogs(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a collection of Blogs.
            </summary>
            <returns>An instance that provides fluent API for working with multiple Blogs.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.BlogPost(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a single instance of BlogPost.
            </summary>
            An instance that provides fluent API for working with single instance of BlogPost.
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.BlogPost(Telerik.Sitefinity.Fluent.FluentSitefinity,System.Guid)">
            <summary>
            Provides the methods for working with a single instance of BlogPost.
            </summary>
            <param name="itemId">The id of the BlogPost.</param>
            <returns>
            An instance that provides fluent API for working with single instance of BlogPost.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.BlogPosts(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a collection of BlogPosts.
            </summary>
            <returns>An instance that provides fluent API for working with multiple BlogPosts.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Event(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a single instance of Event.
            </summary>
            <returns>An instance of <see cref="!:EventFacade"/> that provides fluent API for working with single instance of Event.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Event(Telerik.Sitefinity.Fluent.FluentSitefinity,System.Guid)">
            <summary>
            Provides the methods for working with a single instance of Event.
            </summary>
            <param name="itemId">The id of the Event.</param>
            <returns>
            An instance of <see cref="!:EventFacade"/> that provides fluent API for working with single instance of Event.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Events(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a collection of Events.
            </summary>
            <returns>An instance of <see cref="!:EventsFacade"/> that provides fluent API for working with multiple Events.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.List(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a single instance of List.
            </summary>
            <returns>An instance that provides fluent API for working with single instance of List.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.List(Telerik.Sitefinity.Fluent.FluentSitefinity,System.Guid)">
            <summary>
            Provides the methods for working with a single instance of List.
            </summary>
            <param name="blogId">The id of the List.</param>
            <returns>
            An instance that provides fluent API for working with single instance of List.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.Lists(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a collection of Lists.
            </summary>
            <returns>An instance that provides fluent API for working with multiple Lists.</returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.ListItem(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a single instance of ListItem.
            </summary>
            An instance that provides fluent API for working with single instance of ListItem.
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.ListItem(Telerik.Sitefinity.Fluent.FluentSitefinity,System.Guid)">
            <summary>
            Provides the methods for working with a single instance of ListItem.
            </summary>
            <param name="itemId">The id of the ListItem.</param>
            <returns>
            An instance that provides fluent API for working with single instance of ListItem.
            </returns>
        </member>
        <member name="M:Telerik.Sitefinity.ContentModulesFluentExtensions.ListItems(Telerik.Sitefinity.Fluent.FluentSitefinity)">
            <summary>
            Provides the methods for working with a collection of ListItems.
            </summary>
            <returns>An instance that provides fluent API for working with multiple ListItems.</returns>
        </member>
        <member name="T:Telerik.Sitefinity.Lists.Model.List">
            <summary>
            Persistent type for the List object of the Lists module.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.List.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Lists.Model.List"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.List.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Lists.Model.List"/> class.
            </summary>
            <param name="applicationName">Name of the application</param>
            <param name="id">Identity of the list</param>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.ListItems">
            <summary>
            Gets the collection of all the <c>ListItem</c>s that belong to this <c>List</c>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.ListItemsCount">
            <summary>
            Gets the <c>ListItem</c>s count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.LandingPageId">
            <summary>
            Identity of the List's home page (landing page)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.SortOrder">
            <summary>
            Sort order of a list
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.Telerik#Sitefinity#GenericContent#Model#ILocatable#Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.List.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.List.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.InheritsPermissions">
            <summary>
            Defines if the implemented type inherits permissions from a parent object.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.CanInheritPermissions">
            <summary>
            Gets or sets a value indicating whether this instance can inherit permissions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.Permissions">
            <summary>
            Permissions for this <c>List</c>
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permissionset object titles.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.ChildItemType">
            <summary>
            Type of the child content
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.List.ChildContentItems">
            <summary>
            Get child content items
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Lists.Model.ListItem">
            <summary>
            Persistent type for the list item object of the <see cref="T:Telerik.Sitefinity.Modules.Lists.ListsModule">Lists module</see>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> class
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItem.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem"/> class
            </summary>
            <param name="applicationName">Name of the application</param>
            <param name="id">Identity of the <see cref="T:Telerik.Sitefinity.Lists.Model.ListItem">list item</see></param>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Parent">
            <summary>
            Gets or sets the parent <c>List</c> of the <c>ListItem</c>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Content">
            <summary>
            Contents of the <c>ListItem</c>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Ordinal">
            <summary>
            Gets or sets the ordinal of the <c>ListItem</c>.
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Lists.Model.ListItem.ParentChangeHandler">
            <summary>
            Event that gets fired whenever the Parent <c>List</c> object changes.
            </summary>
            <param name="sender">The <c>ListItem</c> object whose parent changed.</param>
            <param name="parentList">The parent <c>List</c>.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.InheritsPermissions">
            <summary>
            Defines if the implemented type inherits permissions from a parent object.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.CanInheritPermissions">
            <summary>
            Gets or sets a value indicating whether this instance can inherit permissions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Permissions">
            <summary>
            Permissions for this <c>ListItem</c>.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permissionset object titles.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Telerik#Sitefinity#IHasParent#Parent">
            <summary>
            The instance of the <see cref="T:Telerik.Sitefinity.Lists.Model.List"/> which represents the parent of the content implementing
            the <see cref="T:Telerik.Sitefinity.IHasParent"/> interface.
            </summary>
            <value>The parent</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Telerik#Sitefinity#GenericContent#Model#ILocatable#Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItem.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItem.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItem.Serialize(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Serializes the <paramref name="obj"/> into a dictionary.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="serializedObject">A dictionary containing the serialized objects.</param>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItem.Deserialize(System.Object@,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Deserializes the <paramref name="obj"/> into a dictionary.
            </summary>
            <param name="obj">The object to deserialize.</param>
            <param name="serializedObject">A dictionary containing the serialized objects.</param>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.Telerik#Sitefinity#IWorkflowItem#Id">
            <summary>
            Gets the id of the workflow item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.ApprovalTrackingRecordMap">
            <summary>
            Gets or sets the approval tracking records
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.ApprovalWorkflowState">
            <summary>
            Gets or sets the current state of the item in the approval workflow.
            </summary>
            <value></value>
            <remarks>
            Note that item can be in different states depending on the culture.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.PublishedTranslations">
            <summary>
            Gets a list of available translations (set for the Master and Live items).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItem.LanguageData">
            <summary>
            Collection of culture specific data - publication date, scheduled date
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.Lists.Model.ListItemUrlData">
            <summary>
            Represents URL data for the <c>ListItem</c>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListItemUrlData.#ctor">
            <summary>
            Creates a new <c>ListItemUrlData</c> instance with a random ID.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListItemUrlData.Parent">
            <summary>
            Gets or sets the parent <c>ListItem</c>.
            </summary>
            <value>The <c>ListItem</c> data.</value>
        </member>
        <member name="T:Telerik.Sitefinity.Lists.Model.ListUrlData">
            <summary>
            Represents URL data for the <c>List</c>.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.Lists.Model.ListUrlData.#ctor">
            <summary>
            Creates a new <c>ListUrlData</c> with a random ID.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.Lists.Model.ListUrlData.Parent">
            <summary>
            Gets or sets the parent <c>List</c>.
            </summary>
            <value>The <c>List</c> data.</value>
        </member>
        <member name="T:Telerik.Sitefinity.News.Model.NewsItem">
            <summary>
            Represents a single news item
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.News.Model.NewsItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItem.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.News.Model.NewsItem"/> class.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="id">The id.</param>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Summary">
            <summary>
            Summary of the news item post's contents
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Content">
            <summary>
            Contents of the news item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Author">
            <summary>
            The author of the news item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.SourceName">
            <summary>
            The source name of the news item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.SourceSite">
            <summary>
            The source site of the news item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.CommentsConfigPath">
            <summary>
            Gets or sets the comments view config path that will be used to resolve configuration value.
            </summary>
            <value>The comments view config path.</value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Permissions">
            <summary>
            A set of permissions for the profile, as a secured object (as IList)
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.InheritsPermissions">
            <summary>
            Indicates if this profile inherits permissions
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.SupportedPermissionSets">
            <summary>
            Gets the permission sets relevant to this specific secured object.
            </summary>
            <value>The supported permission sets.</value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.CanInheritPermissions">
            <summary>
            Gets or sets a value indicating whether this instance can inherit permissions.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.PermissionsetObjectTitleResKeys">
            <summary>
            Gets a dictionary:
            Key is a name of a permission set supported by this provider,
            Value is a resource key of the SecurityResources title which is to be used for titles of permissions, if defined in resources as placeholders.
            </summary>
            <value>The permission set object titles.</value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.ItemDefaultUrl">
            <summary>
            Gets or sets the default URL.
            </summary>
            <value>The default URL.</value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Telerik#Sitefinity#GenericContent#Model#ILocatable#Urls">
            <summary>
            Gets a collection of URL data for this item.
            </summary>
            <value>The collection of URL data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItem.Telerik#Sitefinity#GenericContent#Model#ILocatable#ClearUrls(System.Boolean)">
            <summary>
            Clears the Urls collection for this item.
            </summary>
            <param name="excludeDefault">if set to <c>true</c> default urls will not be cleared.</param>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItem.Telerik#Sitefinity#GenericContent#Model#ILocatable#RemoveUrls(System.Func{Telerik.Sitefinity.GenericContent.Model.UrlData,System.Boolean})">
            <summary>
            Removes all urls that satisfy the condition that is checked in the predicate function.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.AutoGenerateUniqueUrl">
            <summary>
            Gets or sets a value indicating whether to auto generate an unique URL.
            </summary>
            <value>
            	<c>true</c> if to auto generate an unique URL otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItem.Serialize(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Serializes the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="serializedObject">The serialized object.</param>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItem.Deserialize(System.Object@,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Deserializes the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="serializedObject">The serialized object.</param>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.Telerik#Sitefinity#IWorkflowItem#Id">
            <summary>
            Gets the id of the workflow item.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.ApprovalTrackingRecordMap">
            <summary>
            Gets or sets the approval tracking records
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.ApprovalWorkflowState">
            <summary>
            Gets or sets the current state of the item in the approval workflow.
            </summary>
            <value></value>
            <remarks>
            Note that item can be in different states depending on the culture.
            </remarks>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.PublishedTranslations">
            <summary>
            Gets a list of available translations (set for the Master and Live items).
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.LanguageData">
            <summary>
            Collection of culture specific data - publication date, scheduled date
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.IsDeleted">
            <summary>
            Gets or sets a value indicating whether the data item is marked as deleted.
            </summary>
            <value>Whether the data item is marked as deleted.</value>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItem.WasPublished">
            <summary>
            Gets or sets a value indicating whether the item was published before it was moved to the Recycle Bin.
            </summary>
            <value>Whether the data item was published.</value>
        </member>
        <member name="T:Telerik.Sitefinity.News.Model.NewsItemPermission">
            <summary>
            Permission for news item
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItemPermission.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.News.Model.NewsItemPermission"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsItemPermission.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.News.Model.NewsItemPermission"/> class.
            </summary>
            <param name="applicationName">Name of the application.</param>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItemPermission.NewsItem">
            <summary>
            Secured news item
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsItemPermission.ObjectId">
            <summary>
            Gets or sets the ID of the secured object this permission.
            </summary>
            <value>The object id.</value>
        </member>
        <member name="T:Telerik.Sitefinity.News.Model.NewsItemStatus">
            <summary>
            News Item Status
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.News.Model.NewsItemStatus.Draft">
            <summary>
            The blog post default state. Invisible to the public side.
            </summary>
        </member>
        <member name="F:Telerik.Sitefinity.News.Model.NewsItemStatus.Approved">
            <summary>
            Blog posts with this state are visible on the public side
            </summary>
        </member>
        <member name="T:Telerik.Sitefinity.News.Model.NewsUrlData">
            <summary>
            Represents URL data for a news item.
            </summary>
        </member>
        <member name="M:Telerik.Sitefinity.News.Model.NewsUrlData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Sitefinity.News.Model.NewsUrlData"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Sitefinity.News.Model.NewsUrlData.Parent">
            <summary>
            Gets or sets the parent page.
            </summary>
            <value>The page data.</value>
        </member>
        <member name="M:Telerik.Sitefinity.SiteSync.ContentItemsImporter.GetLstringValue(System.Object,System.Globalization.CultureInfo)">
            NOTE: This method is copied from Reader.GetLstringValue
        </member>
    </members>
</doc>
